{"ast":null,"code":"var _jsxFileName = \"D:\\\\proyectos_react\\\\Proyecto_sena\\\\src\\\\app\\\\main\\\\apps\\\\notes\\\\dialogs\\\\labels\\\\LabelsForm.js\";\nimport { useDebounce, useForm } from '@fuse/hooks';\nimport _ from '@lodash';\nimport Icon from '@material-ui/core/Icon';\nimport IconButton from '@material-ui/core/IconButton';\nimport Input from '@material-ui/core/Input';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Typography from '@material-ui/core/Typography';\nimport LabelModel from 'app/main/apps/notes/model/LabelModel';\nimport clsx from 'clsx';\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { updateLabels } from '../../store/labelsSlice';\n\nfunction LabelsForm(props) {\n  const dispatch = useDispatch();\n  const labels = useSelector(({\n    notesApp\n  }) => notesApp.labels.entities);\n  const [labelsForm, setLabels] = useState(labels);\n  const {\n    form: newLabelForm,\n    handleChange,\n    resetForm\n  } = useForm({\n    name: ''\n  });\n  useEffect(() => {\n    setLabels(labels);\n  }, [labels]);\n  const handleOnChange = useDebounce(_labels => {\n    dispatch(updateLabels(_labels));\n  }, 600);\n  useEffect(() => {\n    if (labelsForm && !_.isEqual(labelsForm, labels)) {\n      handleOnChange(labelsForm);\n    }\n  }, [handleOnChange, labels, labelsForm]);\n\n  function isFormInValid() {\n    return newLabelForm.name === '';\n  }\n\n  function handleSubmit(ev) {\n    ev.preventDefault();\n\n    if (isFormInValid()) {\n      return;\n    }\n\n    const newLabel = new LabelModel(newLabelForm);\n    setLabels(_.setIn(labelsForm, newLabel.id, newLabel));\n    resetForm();\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Typography, {\n    className: \"text-16 mb-8 font-600\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 4\n    }\n  }, \"Edit Labels\"), /*#__PURE__*/React.createElement(List, {\n    dense: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ListItem, {\n    className: \"p-0 mb-16\",\n    dense: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    className: \"list-item-icon text-16\",\n    color: \"action\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, \"add\"), /*#__PURE__*/React.createElement(Input, {\n    className: clsx('flex flex-1 mx-8'),\n    name: \"name\",\n    value: newLabelForm.name,\n    onChange: handleChange,\n    placeholder: \"Create new label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(IconButton, {\n    className: \"w-32 h-32 mx-4 p-0\",\n    \"aria-label\": \"Delete\",\n    disabled: isFormInValid(),\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    fontSize: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 8\n    }\n  }, \"check\")))), useMemo(() => {\n    function handleOnDelete(label) {\n      setLabels(_.omit(labelsForm, [label.id]));\n    }\n\n    function handleLabelChange(event, label) {\n      const updatedLabel = new LabelModel(_.setIn(label, event.target.name, event.target.value));\n      setLabels(_.setIn(labelsForm, updatedLabel.id, updatedLabel));\n    }\n\n    return Object.entries(labelsForm).map(([key, label]) => /*#__PURE__*/React.createElement(ListItem, {\n      className: \"p-0\",\n      key: label.id,\n      dense: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      className: \"list-item-icon text-16\",\n      color: \"action\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 8\n      }\n    }, \"label\"), /*#__PURE__*/React.createElement(Input, {\n      className: clsx('flex flex-1 mx-8'),\n      name: \"name\",\n      value: label.name,\n      onChange: event => handleLabelChange(event, label),\n      disableUnderline: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 8\n      }\n    }), /*#__PURE__*/React.createElement(IconButton, {\n      className: \"w-32 h-32 mx-4 p-0\",\n      \"aria-label\": \"Delete\",\n      onClick: ev => handleOnDelete(label),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      fontSize: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }\n    }, \"delete\"))));\n  }, [labelsForm])));\n}\n\nexport default LabelsForm;","map":{"version":3,"sources":["D:/proyectos_react/Proyecto_sena/src/app/main/apps/notes/dialogs/labels/LabelsForm.js"],"names":["useDebounce","useForm","_","Icon","IconButton","Input","List","ListItem","Typography","LabelModel","clsx","React","useEffect","useMemo","useState","useDispatch","useSelector","updateLabels","LabelsForm","props","dispatch","labels","notesApp","entities","labelsForm","setLabels","form","newLabelForm","handleChange","resetForm","name","handleOnChange","_labels","isEqual","isFormInValid","handleSubmit","ev","preventDefault","newLabel","setIn","id","handleOnDelete","label","omit","handleLabelChange","event","updatedLabel","target","value","Object","entries","map","key"],"mappings":";AAAA,SAASA,WAAT,EAAsBC,OAAtB,QAAqC,aAArC;AACA,OAAOC,CAAP,MAAc,SAAd;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,UAAP,MAAuB,sCAAvB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,OAA3B,EAAoCC,QAApC,QAAoD,OAApD;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,YAAT,QAA6B,yBAA7B;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAC1B,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAMM,MAAM,GAAGL,WAAW,CAAC,CAAC;AAAEM,IAAAA;AAAF,GAAD,KAAkBA,QAAQ,CAACD,MAAT,CAAgBE,QAAnC,CAA1B;AAEA,QAAM,CAACC,UAAD,EAAaC,SAAb,IAA0BX,QAAQ,CAACO,MAAD,CAAxC;AACA,QAAM;AAAEK,IAAAA,IAAI,EAAEC,YAAR;AAAsBC,IAAAA,YAAtB;AAAoCC,IAAAA;AAApC,MAAkD5B,OAAO,CAAC;AAC/D6B,IAAAA,IAAI,EAAE;AADyD,GAAD,CAA/D;AAIAlB,EAAAA,SAAS,CAAC,MAAM;AACfa,IAAAA,SAAS,CAACJ,MAAD,CAAT;AACA,GAFQ,EAEN,CAACA,MAAD,CAFM,CAAT;AAIA,QAAMU,cAAc,GAAG/B,WAAW,CAACgC,OAAO,IAAI;AAC7CZ,IAAAA,QAAQ,CAACH,YAAY,CAACe,OAAD,CAAb,CAAR;AACA,GAFiC,EAE/B,GAF+B,CAAlC;AAIApB,EAAAA,SAAS,CAAC,MAAM;AACf,QAAIY,UAAU,IAAI,CAACtB,CAAC,CAAC+B,OAAF,CAAUT,UAAV,EAAsBH,MAAtB,CAAnB,EAAkD;AACjDU,MAAAA,cAAc,CAACP,UAAD,CAAd;AACA;AACD,GAJQ,EAIN,CAACO,cAAD,EAAiBV,MAAjB,EAAyBG,UAAzB,CAJM,CAAT;;AAMA,WAASU,aAAT,GAAyB;AACxB,WAAOP,YAAY,CAACG,IAAb,KAAsB,EAA7B;AACA;;AAED,WAASK,YAAT,CAAsBC,EAAtB,EAA0B;AACzBA,IAAAA,EAAE,CAACC,cAAH;;AACA,QAAIH,aAAa,EAAjB,EAAqB;AACpB;AACA;;AACD,UAAMI,QAAQ,GAAG,IAAI7B,UAAJ,CAAekB,YAAf,CAAjB;AACAF,IAAAA,SAAS,CAACvB,CAAC,CAACqC,KAAF,CAAQf,UAAR,EAAoBc,QAAQ,CAACE,EAA7B,EAAiCF,QAAjC,CAAD,CAAT;AACAT,IAAAA,SAAS;AACT;;AAED,sBACC,uDACC,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAC,uBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADD,eAEC,oBAAC,IAAD;AAAM,IAAA,KAAK,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAM,IAAA,QAAQ,EAAEM,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,QAAD;AAAU,IAAA,SAAS,EAAC,WAApB;AAAgC,IAAA,KAAK,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,wBAAhB;AAAyC,IAAA,KAAK,EAAC,QAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADD,eAIC,oBAAC,KAAD;AACC,IAAA,SAAS,EAAEzB,IAAI,CAAC,kBAAD,CADhB;AAEC,IAAA,IAAI,EAAC,MAFN;AAGC,IAAA,KAAK,EAAEiB,YAAY,CAACG,IAHrB;AAIC,IAAA,QAAQ,EAAEF,YAJX;AAKC,IAAA,WAAW,EAAC,kBALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJD,eAWC,oBAAC,UAAD;AACC,IAAA,SAAS,EAAC,oBADX;AAEC,kBAAW,QAFZ;AAGC,IAAA,QAAQ,EAAEM,aAAa,EAHxB;AAIC,IAAA,IAAI,EAAC,QAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAMC,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAND,CAXD,CADD,CADD,EAuBErB,OAAO,CAAC,MAAM;AACd,aAAS4B,cAAT,CAAwBC,KAAxB,EAA+B;AAC9BjB,MAAAA,SAAS,CAACvB,CAAC,CAACyC,IAAF,CAAOnB,UAAP,EAAmB,CAACkB,KAAK,CAACF,EAAP,CAAnB,CAAD,CAAT;AACA;;AAED,aAASI,iBAAT,CAA2BC,KAA3B,EAAkCH,KAAlC,EAAyC;AACxC,YAAMI,YAAY,GAAG,IAAIrC,UAAJ,CAAeP,CAAC,CAACqC,KAAF,CAAQG,KAAR,EAAeG,KAAK,CAACE,MAAN,CAAajB,IAA5B,EAAkCe,KAAK,CAACE,MAAN,CAAaC,KAA/C,CAAf,CAArB;AACAvB,MAAAA,SAAS,CAACvB,CAAC,CAACqC,KAAF,CAAQf,UAAR,EAAoBsB,YAAY,CAACN,EAAjC,EAAqCM,YAArC,CAAD,CAAT;AACA;;AAED,WAAOG,MAAM,CAACC,OAAP,CAAe1B,UAAf,EAA2B2B,GAA3B,CAA+B,CAAC,CAACC,GAAD,EAAMV,KAAN,CAAD,kBACrC,oBAAC,QAAD;AAAU,MAAA,SAAS,EAAC,KAApB;AAA0B,MAAA,GAAG,EAAEA,KAAK,CAACF,EAArC;AAAyC,MAAA,KAAK,MAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAC,wBAAhB;AAAyC,MAAA,KAAK,EAAC,QAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADD,eAIC,oBAAC,KAAD;AACC,MAAA,SAAS,EAAE9B,IAAI,CAAC,kBAAD,CADhB;AAEC,MAAA,IAAI,EAAC,MAFN;AAGC,MAAA,KAAK,EAAEgC,KAAK,CAACZ,IAHd;AAIC,MAAA,QAAQ,EAAEe,KAAK,IAAID,iBAAiB,CAACC,KAAD,EAAQH,KAAR,CAJrC;AAKC,MAAA,gBAAgB,MALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJD,eAWC,oBAAC,UAAD;AACC,MAAA,SAAS,EAAC,oBADX;AAEC,oBAAW,QAFZ;AAGC,MAAA,OAAO,EAAEN,EAAE,IAAIK,cAAc,CAACC,KAAD,CAH9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAKC,oBAAC,IAAD;AAAM,MAAA,QAAQ,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALD,CAXD,CADM,CAAP;AAqBA,GA/BO,EA+BL,CAAClB,UAAD,CA/BK,CAvBT,CAFD,CADD;AA6DA;;AAED,eAAeN,UAAf","sourcesContent":["import { useDebounce, useForm } from '@fuse/hooks';\nimport _ from '@lodash';\nimport Icon from '@material-ui/core/Icon';\nimport IconButton from '@material-ui/core/IconButton';\nimport Input from '@material-ui/core/Input';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Typography from '@material-ui/core/Typography';\nimport LabelModel from 'app/main/apps/notes/model/LabelModel';\nimport clsx from 'clsx';\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { updateLabels } from '../../store/labelsSlice';\n\nfunction LabelsForm(props) {\n\tconst dispatch = useDispatch();\n\tconst labels = useSelector(({ notesApp }) => notesApp.labels.entities);\n\n\tconst [labelsForm, setLabels] = useState(labels);\n\tconst { form: newLabelForm, handleChange, resetForm } = useForm({\n\t\tname: ''\n\t});\n\n\tuseEffect(() => {\n\t\tsetLabels(labels);\n\t}, [labels]);\n\n\tconst handleOnChange = useDebounce(_labels => {\n\t\tdispatch(updateLabels(_labels));\n\t}, 600);\n\n\tuseEffect(() => {\n\t\tif (labelsForm && !_.isEqual(labelsForm, labels)) {\n\t\t\thandleOnChange(labelsForm);\n\t\t}\n\t}, [handleOnChange, labels, labelsForm]);\n\n\tfunction isFormInValid() {\n\t\treturn newLabelForm.name === '';\n\t}\n\n\tfunction handleSubmit(ev) {\n\t\tev.preventDefault();\n\t\tif (isFormInValid()) {\n\t\t\treturn;\n\t\t}\n\t\tconst newLabel = new LabelModel(newLabelForm);\n\t\tsetLabels(_.setIn(labelsForm, newLabel.id, newLabel));\n\t\tresetForm();\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<Typography className=\"text-16 mb-8 font-600\">Edit Labels</Typography>\n\t\t\t<List dense>\n\t\t\t\t<form onSubmit={handleSubmit}>\n\t\t\t\t\t<ListItem className=\"p-0 mb-16\" dense>\n\t\t\t\t\t\t<Icon className=\"list-item-icon text-16\" color=\"action\">\n\t\t\t\t\t\t\tadd\n\t\t\t\t\t\t</Icon>\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\tclassName={clsx('flex flex-1 mx-8')}\n\t\t\t\t\t\t\tname=\"name\"\n\t\t\t\t\t\t\tvalue={newLabelForm.name}\n\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\tplaceholder=\"Create new label\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\tclassName=\"w-32 h-32 mx-4 p-0\"\n\t\t\t\t\t\t\taria-label=\"Delete\"\n\t\t\t\t\t\t\tdisabled={isFormInValid()}\n\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Icon fontSize=\"small\">check</Icon>\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t</ListItem>\n\t\t\t\t</form>\n\t\t\t\t{useMemo(() => {\n\t\t\t\t\tfunction handleOnDelete(label) {\n\t\t\t\t\t\tsetLabels(_.omit(labelsForm, [label.id]));\n\t\t\t\t\t}\n\n\t\t\t\t\tfunction handleLabelChange(event, label) {\n\t\t\t\t\t\tconst updatedLabel = new LabelModel(_.setIn(label, event.target.name, event.target.value));\n\t\t\t\t\t\tsetLabels(_.setIn(labelsForm, updatedLabel.id, updatedLabel));\n\t\t\t\t\t}\n\n\t\t\t\t\treturn Object.entries(labelsForm).map(([key, label]) => (\n\t\t\t\t\t\t<ListItem className=\"p-0\" key={label.id} dense>\n\t\t\t\t\t\t\t<Icon className=\"list-item-icon text-16\" color=\"action\">\n\t\t\t\t\t\t\t\tlabel\n\t\t\t\t\t\t\t</Icon>\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\tclassName={clsx('flex flex-1 mx-8')}\n\t\t\t\t\t\t\t\tname=\"name\"\n\t\t\t\t\t\t\t\tvalue={label.name}\n\t\t\t\t\t\t\t\tonChange={event => handleLabelChange(event, label)}\n\t\t\t\t\t\t\t\tdisableUnderline\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\tclassName=\"w-32 h-32 mx-4 p-0\"\n\t\t\t\t\t\t\t\taria-label=\"Delete\"\n\t\t\t\t\t\t\t\tonClick={ev => handleOnDelete(label)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Icon fontSize=\"small\">delete</Icon>\n\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t));\n\t\t\t\t}, [labelsForm])}\n\t\t\t</List>\n\t\t</>\n\t);\n}\n\nexport default LabelsForm;\n"]},"metadata":{},"sourceType":"module"}