{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\nimport { showMessage } from 'app/store/fuse/messageSlice';\nexport const getCourse = createAsyncThunk('academyApp/course/getCourse', async params => {\n  const response = await axios.get('/api/academy-app/course', {\n    params\n  });\n  const data = await response.data;\n  return data;\n});\nexport const updateCourse = createAsyncThunk('academyApp/course/updateCourse', async (_data, {\n  getState,\n  dispatch\n}) => {\n  const {\n    id\n  } = getState().academyApp.course;\n  const response = await axios.post('/api/academy-app/course/update', {\n    id,\n    ..._data\n  });\n  const data = await response.data;\n  dispatch(showMessage({\n    message: 'Course Saved'\n  }));\n  return data;\n});\nconst courseSlice = createSlice({\n  name: 'academyApp/course',\n  initialState: null,\n  reducers: {},\n  extraReducers: {\n    [getCourse.fulfilled]: (state, action) => action.payload,\n    [updateCourse.fulfilled]: (state, action) => ({ ...state,\n      ...action.payload\n    })\n  }\n});\nexport default courseSlice.reducer;","map":{"version":3,"sources":["D:/proyectos_react/Proyecto_sena_desarrollo/src/app/main/apps/academy/store/courseSlice.js"],"names":["createSlice","createAsyncThunk","axios","showMessage","getCourse","params","response","get","data","updateCourse","_data","getState","dispatch","id","academyApp","course","post","message","courseSlice","name","initialState","reducers","extraReducers","fulfilled","state","action","payload","reducer"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,gBAAtB,QAA8C,kBAA9C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,6BAA5B;AAEA,OAAO,MAAMC,SAAS,GAAGH,gBAAgB,CAAC,6BAAD,EAAgC,MAAMI,MAAN,IAAgB;AACxF,QAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAN,CAAU,yBAAV,EAAqC;AAAEF,IAAAA;AAAF,GAArC,CAAvB;AACA,QAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAA5B;AACA,SAAOA,IAAP;AACA,CAJwC,CAAlC;AAMP,OAAO,MAAMC,YAAY,GAAGR,gBAAgB,CAC3C,gCAD2C,EAE3C,OAAOS,KAAP,EAAc;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAd,KAAyC;AACxC,QAAM;AAAEC,IAAAA;AAAF,MAASF,QAAQ,GAAGG,UAAX,CAAsBC,MAArC;AAEA,QAAMT,QAAQ,GAAG,MAAMJ,KAAK,CAACc,IAAN,CAAW,gCAAX,EAA6C;AAAEH,IAAAA,EAAF;AAAM,OAAGH;AAAT,GAA7C,CAAvB;AACA,QAAMF,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAA5B;AAEAI,EAAAA,QAAQ,CAACT,WAAW,CAAC;AAAEc,IAAAA,OAAO,EAAE;AAAX,GAAD,CAAZ,CAAR;AAEA,SAAOT,IAAP;AACA,CAX0C,CAArC;AAcP,MAAMU,WAAW,GAAGlB,WAAW,CAAC;AAC/BmB,EAAAA,IAAI,EAAE,mBADyB;AAE/BC,EAAAA,YAAY,EAAE,IAFiB;AAG/BC,EAAAA,QAAQ,EAAE,EAHqB;AAI/BC,EAAAA,aAAa,EAAE;AACd,KAAClB,SAAS,CAACmB,SAAX,GAAuB,CAACC,KAAD,EAAQC,MAAR,KAAmBA,MAAM,CAACC,OADnC;AAEd,KAACjB,YAAY,CAACc,SAAd,GAA0B,CAACC,KAAD,EAAQC,MAAR,MAAoB,EAC7C,GAAGD,KAD0C;AAE7C,SAAGC,MAAM,CAACC;AAFmC,KAApB;AAFZ;AAJgB,CAAD,CAA/B;AAaA,eAAeR,WAAW,CAACS,OAA3B","sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\nimport { showMessage } from 'app/store/fuse/messageSlice';\n\nexport const getCourse = createAsyncThunk('academyApp/course/getCourse', async params => {\n\tconst response = await axios.get('/api/academy-app/course', { params });\n\tconst data = await response.data;\n\treturn data;\n});\n\nexport const updateCourse = createAsyncThunk(\n\t'academyApp/course/updateCourse',\n\tasync (_data, { getState, dispatch }) => {\n\t\tconst { id } = getState().academyApp.course;\n\n\t\tconst response = await axios.post('/api/academy-app/course/update', { id, ..._data });\n\t\tconst data = await response.data;\n\n\t\tdispatch(showMessage({ message: 'Course Saved' }));\n\n\t\treturn data;\n\t}\n);\n\nconst courseSlice = createSlice({\n\tname: 'academyApp/course',\n\tinitialState: null,\n\treducers: {},\n\textraReducers: {\n\t\t[getCourse.fulfilled]: (state, action) => action.payload,\n\t\t[updateCourse.fulfilled]: (state, action) => ({\n\t\t\t...state,\n\t\t\t...action.payload\n\t\t})\n\t}\n});\n\nexport default courseSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}