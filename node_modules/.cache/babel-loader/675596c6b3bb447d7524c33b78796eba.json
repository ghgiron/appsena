{"ast":null,"code":"var _jsxFileName = \"D:\\\\proyectos_react\\\\Proyecto_sena\\\\src\\\\app\\\\main\\\\documentation\\\\third-party-components\\\\react-chartjs-2\\\\examples\\\\crazyLine.js\";\nimport FuseUtils from '@fuse/utils/FuseUtils';\nimport React, { Component } from 'react';\nimport { Bar } from 'react-chartjs-2';\nconst initialState = {\n  labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n  datasets: [{\n    label: 'My First dataset',\n    backgroundColor: 'rgba(255,99,132,0.2)',\n    borderColor: 'rgba(255,99,132,1)',\n    borderWidth: 1,\n    hoverBackgroundColor: 'rgba(255,99,132,0.4)',\n    hoverBorderColor: 'rgba(255,99,132,1)',\n    data: [65, 59, 80, 81, 56, 55, 40]\n  }]\n};\n\nclass Graph extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = initialState;\n  }\n\n  componentDidMount() {\n    const _this = this;\n\n    setInterval(function () {\n      const oldDataSet = _this.state.datasets[0];\n      const newData = [];\n\n      for (let x = 0; x < _this.state.labels.length; x++) {\n        newData.push(Math.floor(Math.random() * 100));\n      }\n\n      const newDataSet = { ...oldDataSet\n      };\n      newDataSet.data = newData;\n      newDataSet.backgroundColor = FuseUtils.randomMatColor();\n      newDataSet.borderColor = FuseUtils.randomMatColor();\n      newDataSet.hoverBackgroundColor = FuseUtils.randomMatColor();\n      newDataSet.hoverBorderColor = FuseUtils.randomMatColor();\n      const newState = { ...initialState,\n        datasets: [newDataSet]\n      };\n\n      _this.setState(newState);\n    }, 5000);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Bar, {\n      data: this.state,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 10\n      }\n    });\n  }\n\n}\n\nclass CrazyDataLineExample extends Component {\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flex flex-col items-center w-full max-w-md\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 5\n      }\n    }, \"You can even make crazy graphs like this!\"), /*#__PURE__*/React.createElement(Graph, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 5\n      }\n    }));\n  }\n\n}\n\nexport default CrazyDataLineExample;","map":{"version":3,"sources":["D:/proyectos_react/Proyecto_sena/src/app/main/documentation/third-party-components/react-chartjs-2/examples/crazyLine.js"],"names":["FuseUtils","React","Component","Bar","initialState","labels","datasets","label","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","data","Graph","state","componentDidMount","_this","setInterval","oldDataSet","newData","x","length","push","Math","floor","random","newDataSet","randomMatColor","newState","setState","render","CrazyDataLineExample"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,uBAAtB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,GAAT,QAAoB,iBAApB;AAEA,MAAMC,YAAY,GAAG;AACpBC,EAAAA,MAAM,EAAE,CAAC,SAAD,EAAY,UAAZ,EAAwB,OAAxB,EAAiC,OAAjC,EAA0C,KAA1C,EAAiD,MAAjD,EAAyD,MAAzD,CADY;AAEpBC,EAAAA,QAAQ,EAAE,CACT;AACCC,IAAAA,KAAK,EAAE,kBADR;AAECC,IAAAA,eAAe,EAAE,sBAFlB;AAGCC,IAAAA,WAAW,EAAE,oBAHd;AAICC,IAAAA,WAAW,EAAE,CAJd;AAKCC,IAAAA,oBAAoB,EAAE,sBALvB;AAMCC,IAAAA,gBAAgB,EAAE,oBANnB;AAOCC,IAAAA,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,EAAyB,EAAzB;AAPP,GADS;AAFU,CAArB;;AAeA,MAAMC,KAAN,SAAoBZ,SAApB,CAA8B;AAAA;AAAA;AAAA,SAC7Ba,KAD6B,GACrBX,YADqB;AAAA;;AAG7BY,EAAAA,iBAAiB,GAAG;AACnB,UAAMC,KAAK,GAAG,IAAd;;AAEAC,IAAAA,WAAW,CAAC,YAAW;AACtB,YAAMC,UAAU,GAAGF,KAAK,CAACF,KAAN,CAAYT,QAAZ,CAAqB,CAArB,CAAnB;AACA,YAAMc,OAAO,GAAG,EAAhB;;AAEA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,KAAK,CAACF,KAAN,CAAYV,MAAZ,CAAmBiB,MAAvC,EAA+CD,CAAC,EAAhD,EAAoD;AACnDD,QAAAA,OAAO,CAACG,IAAR,CAAaC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAAb;AACA;;AAED,YAAMC,UAAU,GAAG,EAClB,GAAGR;AADe,OAAnB;AAIAQ,MAAAA,UAAU,CAACd,IAAX,GAAkBO,OAAlB;AACAO,MAAAA,UAAU,CAACnB,eAAX,GAA6BR,SAAS,CAAC4B,cAAV,EAA7B;AACAD,MAAAA,UAAU,CAAClB,WAAX,GAAyBT,SAAS,CAAC4B,cAAV,EAAzB;AACAD,MAAAA,UAAU,CAAChB,oBAAX,GAAkCX,SAAS,CAAC4B,cAAV,EAAlC;AACAD,MAAAA,UAAU,CAACf,gBAAX,GAA8BZ,SAAS,CAAC4B,cAAV,EAA9B;AAEA,YAAMC,QAAQ,GAAG,EAChB,GAAGzB,YADa;AAEhBE,QAAAA,QAAQ,EAAE,CAACqB,UAAD;AAFM,OAAjB;;AAKAV,MAAAA,KAAK,CAACa,QAAN,CAAeD,QAAf;AACA,KAxBU,EAwBR,IAxBQ,CAAX;AAyBA;;AAEDE,EAAAA,MAAM,GAAG;AACR,wBAAO,oBAAC,GAAD;AAAK,MAAA,IAAI,EAAE,KAAKhB,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACA;;AAnC4B;;AAsC9B,MAAMiB,oBAAN,SAAmC9B,SAAnC,CAA6C;AAC5C6B,EAAAA,MAAM,GAAG;AACR,wBACC;AAAK,MAAA,SAAS,EAAC,4CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mDADD,eAEC,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFD,CADD;AAMA;;AAR2C;;AAW7C,eAAeC,oBAAf","sourcesContent":["import FuseUtils from '@fuse/utils/FuseUtils';\nimport React, { Component } from 'react';\nimport { Bar } from 'react-chartjs-2';\n\nconst initialState = {\n\tlabels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n\tdatasets: [\n\t\t{\n\t\t\tlabel: 'My First dataset',\n\t\t\tbackgroundColor: 'rgba(255,99,132,0.2)',\n\t\t\tborderColor: 'rgba(255,99,132,1)',\n\t\t\tborderWidth: 1,\n\t\t\thoverBackgroundColor: 'rgba(255,99,132,0.4)',\n\t\t\thoverBorderColor: 'rgba(255,99,132,1)',\n\t\t\tdata: [65, 59, 80, 81, 56, 55, 40]\n\t\t}\n\t]\n};\n\nclass Graph extends Component {\n\tstate = initialState;\n\n\tcomponentDidMount() {\n\t\tconst _this = this;\n\n\t\tsetInterval(function() {\n\t\t\tconst oldDataSet = _this.state.datasets[0];\n\t\t\tconst newData = [];\n\n\t\t\tfor (let x = 0; x < _this.state.labels.length; x++) {\n\t\t\t\tnewData.push(Math.floor(Math.random() * 100));\n\t\t\t}\n\n\t\t\tconst newDataSet = {\n\t\t\t\t...oldDataSet\n\t\t\t};\n\n\t\t\tnewDataSet.data = newData;\n\t\t\tnewDataSet.backgroundColor = FuseUtils.randomMatColor();\n\t\t\tnewDataSet.borderColor = FuseUtils.randomMatColor();\n\t\t\tnewDataSet.hoverBackgroundColor = FuseUtils.randomMatColor();\n\t\t\tnewDataSet.hoverBorderColor = FuseUtils.randomMatColor();\n\n\t\t\tconst newState = {\n\t\t\t\t...initialState,\n\t\t\t\tdatasets: [newDataSet]\n\t\t\t};\n\n\t\t\t_this.setState(newState);\n\t\t}, 5000);\n\t}\n\n\trender() {\n\t\treturn <Bar data={this.state} />;\n\t}\n}\n\nclass CrazyDataLineExample extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"flex flex-col items-center w-full max-w-md\">\n\t\t\t\t<h2>You can even make crazy graphs like this!</h2>\n\t\t\t\t<Graph />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default CrazyDataLineExample;\n"]},"metadata":{},"sourceType":"module"}