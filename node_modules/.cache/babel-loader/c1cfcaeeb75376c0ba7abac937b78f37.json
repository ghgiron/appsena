{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\nexport const getUserData = createAsyncThunk('chatPanel/user/getUserData', async () => {\n  const response = await axios.get('/api/chat/user');\n  const data = await response.data;\n  return data;\n});\nexport const updateUserData = createAsyncThunk('chatPanel/user/updateUserData', async newData => {\n  const response = await axios.post('/api/chat/user/data', newData);\n  const data = await response.data;\n  return data;\n});\nconst userSlice = createSlice({\n  name: 'chatPanel/user',\n  initialState: null,\n  reducers: {\n    updateUserChatList: (state, action) => {\n      state.chatList = action.payload;\n    }\n  },\n  extraReducers: {\n    [getUserData.fulfilled]: (state, action) => action.payload,\n    [updateUserData.fulfilled]: (state, action) => action.payload\n  }\n});\nexport const {\n  updateUserChatList\n} = userSlice.actions;\nexport default userSlice.reducer;","map":{"version":3,"sources":["D:/proyectos_react/Proyecto_sena/src/app/fuse-layouts/shared-components/chatPanel/store/userSlice.js"],"names":["createSlice","createAsyncThunk","axios","getUserData","response","get","data","updateUserData","newData","post","userSlice","name","initialState","reducers","updateUserChatList","state","action","chatList","payload","extraReducers","fulfilled","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,gBAAtB,QAA8C,kBAA9C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,WAAW,GAAGF,gBAAgB,CAAC,4BAAD,EAA+B,YAAY;AACrF,QAAMG,QAAQ,GAAG,MAAMF,KAAK,CAACG,GAAN,CAAU,gBAAV,CAAvB;AACA,QAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAA5B;AACA,SAAOA,IAAP;AACA,CAJ0C,CAApC;AAMP,OAAO,MAAMC,cAAc,GAAGN,gBAAgB,CAAC,+BAAD,EAAkC,MAAMO,OAAN,IAAiB;AAChG,QAAMJ,QAAQ,GAAG,MAAMF,KAAK,CAACO,IAAN,CAAW,qBAAX,EAAkCD,OAAlC,CAAvB;AACA,QAAMF,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAA5B;AAEA,SAAOA,IAAP;AACA,CAL6C,CAAvC;AAOP,MAAMI,SAAS,GAAGV,WAAW,CAAC;AAC7BW,EAAAA,IAAI,EAAE,gBADuB;AAE7BC,EAAAA,YAAY,EAAE,IAFe;AAG7BC,EAAAA,QAAQ,EAAE;AACTC,IAAAA,kBAAkB,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACtCD,MAAAA,KAAK,CAACE,QAAN,GAAiBD,MAAM,CAACE,OAAxB;AACA;AAHQ,GAHmB;AAQ7BC,EAAAA,aAAa,EAAE;AACd,KAAChB,WAAW,CAACiB,SAAb,GAAyB,CAACL,KAAD,EAAQC,MAAR,KAAmBA,MAAM,CAACE,OADrC;AAEd,KAACX,cAAc,CAACa,SAAhB,GAA4B,CAACL,KAAD,EAAQC,MAAR,KAAmBA,MAAM,CAACE;AAFxC;AARc,CAAD,CAA7B;AAcA,OAAO,MAAM;AAAEJ,EAAAA;AAAF,IAAyBJ,SAAS,CAACW,OAAzC;AAEP,eAAeX,SAAS,CAACY,OAAzB","sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\nexport const getUserData = createAsyncThunk('chatPanel/user/getUserData', async () => {\n\tconst response = await axios.get('/api/chat/user');\n\tconst data = await response.data;\n\treturn data;\n});\n\nexport const updateUserData = createAsyncThunk('chatPanel/user/updateUserData', async newData => {\n\tconst response = await axios.post('/api/chat/user/data', newData);\n\tconst data = await response.data;\n\n\treturn data;\n});\n\nconst userSlice = createSlice({\n\tname: 'chatPanel/user',\n\tinitialState: null,\n\treducers: {\n\t\tupdateUserChatList: (state, action) => {\n\t\t\tstate.chatList = action.payload;\n\t\t}\n\t},\n\textraReducers: {\n\t\t[getUserData.fulfilled]: (state, action) => action.payload,\n\t\t[updateUserData.fulfilled]: (state, action) => action.payload\n\t}\n});\n\nexport const { updateUserChatList } = userSlice.actions;\n\nexport default userSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}