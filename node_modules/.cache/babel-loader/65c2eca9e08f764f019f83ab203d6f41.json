{"ast":null,"code":"var _jsxFileName = \"D:\\\\proyectos_react\\\\Proyecto_sena_desarrollo\\\\src\\\\app\\\\auth\\\\Auth.js\";\nimport FuseSplashScreen from '@fuse/core/FuseSplashScreen';\nimport jwtService from 'app/services/jwtService';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from '@reduxjs/toolkit';\nimport { hideMessage, showMessage } from 'app/store/fuse/messageSlice';\nimport { setUserData, logoutUser } from './store/userSlice';\n\nclass Auth extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      waitAuthCheck: true\n    };\n\n    this.jwtCheck = () => new Promise(resolve => {\n      jwtService.on('onAutoLogin', () => {\n        this.props.showMessage({\n          message: 'Logging in with JWT'\n        });\n        /**\n         * Sign in and retrieve user data from Api\n         */\n\n        jwtService.signInWithToken().then(user => {\n          this.props.setUserData(user);\n          resolve();\n          this.props.showMessage({\n            message: 'Logged in with JWT'\n          });\n        }).catch(error => {\n          this.props.showMessage({\n            message: error.message\n          });\n          resolve();\n        });\n      });\n      jwtService.on('onAutoLogout', message => {\n        if (message) {\n          this.props.showMessage({\n            message\n          });\n        }\n\n        this.props.logout();\n        resolve();\n      });\n      jwtService.on('onNoAccessToken', () => {\n        resolve();\n      });\n      jwtService.init();\n      return Promise.resolve();\n    });\n  }\n\n  componentDidMount() {\n    return Promise.all([// Comment the lines which you do not use\n    this.jwtCheck()]).then(() => {\n      this.setState({\n        waitAuthCheck: false\n      });\n    });\n  }\n\n  render() {\n    return this.state.waitAuthCheck ? /*#__PURE__*/React.createElement(FuseSplashScreen, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 37\n      }\n    }) : /*#__PURE__*/React.createElement(React.Fragment, null, this.props.children);\n  }\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    logout: logoutUser,\n    setUserData,\n    showMessage,\n    hideMessage\n  }, dispatch);\n}\n\nexport default connect(null, mapDispatchToProps)(Auth);","map":{"version":3,"sources":["D:/proyectos_react/Proyecto_sena_desarrollo/src/app/auth/Auth.js"],"names":["FuseSplashScreen","jwtService","React","Component","connect","bindActionCreators","hideMessage","showMessage","setUserData","logoutUser","Auth","state","waitAuthCheck","jwtCheck","Promise","resolve","on","props","message","signInWithToken","then","user","catch","error","logout","init","componentDidMount","all","setState","render","children","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,gBAAP,MAA6B,6BAA7B;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,kBAAnC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,6BAAzC;AACA,SAASC,WAAT,EAAsBC,UAAtB,QAAwC,mBAAxC;;AAEA,MAAMC,IAAN,SAAmBP,SAAnB,CAA6B;AAAA;AAAA;AAAA,SAC5BQ,KAD4B,GACpB;AACPC,MAAAA,aAAa,EAAE;AADR,KADoB;;AAAA,SAc5BC,QAd4B,GAcjB,MACV,IAAIC,OAAJ,CAAYC,OAAO,IAAI;AACtBd,MAAAA,UAAU,CAACe,EAAX,CAAc,aAAd,EAA6B,MAAM;AAClC,aAAKC,KAAL,CAAWV,WAAX,CAAuB;AAAEW,UAAAA,OAAO,EAAE;AAAX,SAAvB;AAEA;AACJ;AACA;;AACIjB,QAAAA,UAAU,CACRkB,eADF,GAEEC,IAFF,CAEOC,IAAI,IAAI;AACb,eAAKJ,KAAL,CAAWT,WAAX,CAAuBa,IAAvB;AAEAN,UAAAA,OAAO;AAEP,eAAKE,KAAL,CAAWV,WAAX,CAAuB;AAAEW,YAAAA,OAAO,EAAE;AAAX,WAAvB;AACA,SARF,EASEI,KATF,CASQC,KAAK,IAAI;AACf,eAAKN,KAAL,CAAWV,WAAX,CAAuB;AAAEW,YAAAA,OAAO,EAAEK,KAAK,CAACL;AAAjB,WAAvB;AAEAH,UAAAA,OAAO;AACP,SAbF;AAcA,OApBD;AAsBAd,MAAAA,UAAU,CAACe,EAAX,CAAc,cAAd,EAA8BE,OAAO,IAAI;AACxC,YAAIA,OAAJ,EAAa;AACZ,eAAKD,KAAL,CAAWV,WAAX,CAAuB;AAAEW,YAAAA;AAAF,WAAvB;AACA;;AAED,aAAKD,KAAL,CAAWO,MAAX;AAEAT,QAAAA,OAAO;AACP,OARD;AAUAd,MAAAA,UAAU,CAACe,EAAX,CAAc,iBAAd,EAAiC,MAAM;AACtCD,QAAAA,OAAO;AACP,OAFD;AAIAd,MAAAA,UAAU,CAACwB,IAAX;AAEA,aAAOX,OAAO,CAACC,OAAR,EAAP;AACA,KAxCD,CAf2B;AAAA;;AAK5BW,EAAAA,iBAAiB,GAAG;AACnB,WAAOZ,OAAO,CAACa,GAAR,CAAY,CAClB;AACA,SAAKd,QAAL,EAFkB,CAAZ,EAGJO,IAHI,CAGC,MAAM;AACb,WAAKQ,QAAL,CAAc;AAAEhB,QAAAA,aAAa,EAAE;AAAjB,OAAd;AACA,KALM,CAAP;AAMA;;AA6CDiB,EAAAA,MAAM,GAAG;AACR,WAAO,KAAKlB,KAAL,CAAWC,aAAX,gBAA2B,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA3B,gBAAkD,0CAAG,KAAKK,KAAL,CAAWa,QAAd,CAAzD;AACA;;AA3D2B;;AA8D7B,SAASC,kBAAT,CAA4BC,QAA5B,EAAsC;AACrC,SAAO3B,kBAAkB,CACxB;AACCmB,IAAAA,MAAM,EAAEf,UADT;AAECD,IAAAA,WAFD;AAGCD,IAAAA,WAHD;AAICD,IAAAA;AAJD,GADwB,EAOxB0B,QAPwB,CAAzB;AASA;;AAED,eAAe5B,OAAO,CAAC,IAAD,EAAO2B,kBAAP,CAAP,CAAkCrB,IAAlC,CAAf","sourcesContent":["import FuseSplashScreen from '@fuse/core/FuseSplashScreen';\nimport jwtService from 'app/services/jwtService';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from '@reduxjs/toolkit';\nimport { hideMessage, showMessage } from 'app/store/fuse/messageSlice';\nimport { setUserData, logoutUser } from './store/userSlice';\n\nclass Auth extends Component {\n\tstate = {\n\t\twaitAuthCheck: true\n\t};\n\n\tcomponentDidMount() {\n\t\treturn Promise.all([\n\t\t\t// Comment the lines which you do not use\n\t\t\tthis.jwtCheck()\n\t\t]).then(() => {\n\t\t\tthis.setState({ waitAuthCheck: false });\n\t\t});\n\t}\n\n\tjwtCheck = () =>\n\t\tnew Promise(resolve => {\n\t\t\tjwtService.on('onAutoLogin', () => {\n\t\t\t\tthis.props.showMessage({ message: 'Logging in with JWT' });\n\n\t\t\t\t/**\n\t\t\t\t * Sign in and retrieve user data from Api\n\t\t\t\t */\n\t\t\t\tjwtService\n\t\t\t\t\t.signInWithToken()\n\t\t\t\t\t.then(user => {\n\t\t\t\t\t\tthis.props.setUserData(user);\n\n\t\t\t\t\t\tresolve();\n\n\t\t\t\t\t\tthis.props.showMessage({ message: 'Logged in with JWT' });\n\t\t\t\t\t})\n\t\t\t\t\t.catch(error => {\n\t\t\t\t\t\tthis.props.showMessage({ message: error.message });\n\n\t\t\t\t\t\tresolve();\n\t\t\t\t\t});\n\t\t\t});\n\n\t\t\tjwtService.on('onAutoLogout', message => {\n\t\t\t\tif (message) {\n\t\t\t\t\tthis.props.showMessage({ message });\n\t\t\t\t}\n\n\t\t\t\tthis.props.logout();\n\n\t\t\t\tresolve();\n\t\t\t});\n\n\t\t\tjwtService.on('onNoAccessToken', () => {\n\t\t\t\tresolve();\n\t\t\t});\n\n\t\t\tjwtService.init();\n\n\t\t\treturn Promise.resolve();\n\t\t});\n\n\trender() {\n\t\treturn this.state.waitAuthCheck ? <FuseSplashScreen /> : <>{this.props.children}</>;\n\t}\n}\n\nfunction mapDispatchToProps(dispatch) {\n\treturn bindActionCreators(\n\t\t{\n\t\t\tlogout: logoutUser,\n\t\t\tsetUserData,\n\t\t\tshowMessage,\n\t\t\thideMessage\n\t\t},\n\t\tdispatch\n\t);\n}\n\nexport default connect(null, mapDispatchToProps)(Auth);\n"]},"metadata":{},"sourceType":"module"}