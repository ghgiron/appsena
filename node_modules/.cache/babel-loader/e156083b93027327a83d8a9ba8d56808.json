{"ast":null,"code":"var _jsxFileName = \"D:\\\\proyectos_react\\\\Proyecto_sena\\\\src\\\\app\\\\main\\\\documentation\\\\material-ui-components\\\\components\\\\autocomplete\\\\Playground.js\";\n\n/* eslint-disable no-use-before-define */\nimport React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nexport default function Playground() {\n  const defaultProps = {\n    options: top100Films,\n    getOptionLabel: option => option.title\n  };\n  const flatProps = {\n    options: top100Films.map(option => option.title)\n  };\n  const [value, setValue] = React.useState(null);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: 300\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Autocomplete, Object.assign({}, defaultProps, {\n    id: \"debug\",\n    debug: true,\n    renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n      label: \"debug\",\n      margin: \"normal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 34\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(Autocomplete, Object.assign({}, defaultProps, {\n    id: \"disable-close-on-select\",\n    disableCloseOnSelect: true,\n    renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n      label: \"disableCloseOnSelect\",\n      margin: \"normal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(Autocomplete, Object.assign({}, defaultProps, {\n    id: \"clear-on-escape\",\n    clearOnEscape: true,\n    renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n      label: \"clearOnEscape\",\n      margin: \"normal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 34\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(Autocomplete, Object.assign({}, defaultProps, {\n    id: \"disable-clearable\",\n    disableClearable: true,\n    renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n      label: \"disableClearable\",\n      margin: \"normal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 34\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(Autocomplete, Object.assign({}, defaultProps, {\n    id: \"include-input-in-list\",\n    includeInputInList: true,\n    renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n      label: \"includeInputInList\",\n      margin: \"normal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(Autocomplete, Object.assign({}, flatProps, {\n    id: \"flat-demo\",\n    renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n      label: \"flat\",\n      margin: \"normal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 34\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(Autocomplete, Object.assign({}, defaultProps, {\n    id: \"controlled-demo\",\n    value: value,\n    onChange: (event, newValue) => {\n      setValue(newValue);\n    },\n    renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n      label: \"controlled\",\n      margin: \"normal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 34\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(Autocomplete, Object.assign({}, defaultProps, {\n    id: \"auto-complete\",\n    autoComplete: true,\n    includeInputInList: true,\n    renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n      label: \"autoComplete\",\n      margin: \"normal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 34\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(Autocomplete, Object.assign({}, defaultProps, {\n    id: \"disable-list-wrap\",\n    disableListWrap: true,\n    renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n      label: \"disableListWrap\",\n      margin: \"normal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 34\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(Autocomplete, Object.assign({}, defaultProps, {\n    id: \"open-on-focus\",\n    openOnFocus: true,\n    renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n      label: \"openOnFocus\",\n      margin: \"normal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 34\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(Autocomplete, Object.assign({}, defaultProps, {\n    id: \"auto-highlight\",\n    autoHighlight: true,\n    renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n      label: \"autoHighlight\",\n      margin: \"normal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 34\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(Autocomplete, Object.assign({}, defaultProps, {\n    id: \"auto-select\",\n    autoSelect: true,\n    renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n      label: \"autoSelect\",\n      margin: \"normal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 34\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(Autocomplete, Object.assign({}, defaultProps, {\n    id: \"disabled\",\n    disabled: true,\n    renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n      label: \"disabled\",\n      margin: \"normal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 34\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(Autocomplete, Object.assign({}, defaultProps, {\n    id: \"disable-portal\",\n    disablePortal: true,\n    renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n      label: \"disablePortal\",\n      margin: \"normal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 34\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(Autocomplete, Object.assign({}, defaultProps, {\n    id: \"blur-on-select\",\n    blurOnSelect: true,\n    renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n      label: \"blurOnSelect\",\n      margin: \"normal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 34\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(Autocomplete, Object.assign({}, defaultProps, {\n    id: \"clear-on-blur\",\n    clearOnBlur: true,\n    renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n      label: \"clearOnBlur\",\n      margin: \"normal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 34\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(Autocomplete, Object.assign({}, defaultProps, {\n    id: \"select-on-focus\",\n    selectOnFocus: true,\n    renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n      label: \"selectOnFocus\",\n      margin: \"normal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 34\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }\n  })));\n} // Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\n\nconst top100Films = [{\n  title: 'The Shawshank Redemption',\n  year: 1994\n}, {\n  title: 'The Godfather',\n  year: 1972\n}, {\n  title: 'The Godfather: Part II',\n  year: 1974\n}, {\n  title: 'The Dark Knight',\n  year: 2008\n}, {\n  title: '12 Angry Men',\n  year: 1957\n}, {\n  title: \"Schindler's List\",\n  year: 1993\n}, {\n  title: 'Pulp Fiction',\n  year: 1994\n}, {\n  title: 'The Lord of the Rings: The Return of the King',\n  year: 2003\n}, {\n  title: 'The Good, the Bad and the Ugly',\n  year: 1966\n}, {\n  title: 'Fight Club',\n  year: 1999\n}, {\n  title: 'The Lord of the Rings: The Fellowship of the Ring',\n  year: 2001\n}, {\n  title: 'Star Wars: Episode V - The Empire Strikes Back',\n  year: 1980\n}, {\n  title: 'Forrest Gump',\n  year: 1994\n}, {\n  title: 'Inception',\n  year: 2010\n}, {\n  title: 'The Lord of the Rings: The Two Towers',\n  year: 2002\n}, {\n  title: \"One Flew Over the Cuckoo's Nest\",\n  year: 1975\n}, {\n  title: 'Goodfellas',\n  year: 1990\n}, {\n  title: 'The Matrix',\n  year: 1999\n}, {\n  title: 'Seven Samurai',\n  year: 1954\n}, {\n  title: 'Star Wars: Episode IV - A New Hope',\n  year: 1977\n}, {\n  title: 'City of God',\n  year: 2002\n}, {\n  title: 'Se7en',\n  year: 1995\n}, {\n  title: 'The Silence of the Lambs',\n  year: 1991\n}, {\n  title: \"It's a Wonderful Life\",\n  year: 1946\n}, {\n  title: 'Life Is Beautiful',\n  year: 1997\n}, {\n  title: 'The Usual Suspects',\n  year: 1995\n}, {\n  title: 'Léon: The Professional',\n  year: 1994\n}, {\n  title: 'Spirited Away',\n  year: 2001\n}, {\n  title: 'Saving Private Ryan',\n  year: 1998\n}, {\n  title: 'Once Upon a Time in the West',\n  year: 1968\n}, {\n  title: 'American History X',\n  year: 1998\n}, {\n  title: 'Interstellar',\n  year: 2014\n}, {\n  title: 'Casablanca',\n  year: 1942\n}, {\n  title: 'City Lights',\n  year: 1931\n}, {\n  title: 'Psycho',\n  year: 1960\n}, {\n  title: 'The Green Mile',\n  year: 1999\n}, {\n  title: 'The Intouchables',\n  year: 2011\n}, {\n  title: 'Modern Times',\n  year: 1936\n}, {\n  title: 'Raiders of the Lost Ark',\n  year: 1981\n}, {\n  title: 'Rear Window',\n  year: 1954\n}, {\n  title: 'The Pianist',\n  year: 2002\n}, {\n  title: 'The Departed',\n  year: 2006\n}, {\n  title: 'Terminator 2: Judgment Day',\n  year: 1991\n}, {\n  title: 'Back to the Future',\n  year: 1985\n}, {\n  title: 'Whiplash',\n  year: 2014\n}, {\n  title: 'Gladiator',\n  year: 2000\n}, {\n  title: 'Memento',\n  year: 2000\n}, {\n  title: 'The Prestige',\n  year: 2006\n}, {\n  title: 'The Lion King',\n  year: 1994\n}, {\n  title: 'Apocalypse Now',\n  year: 1979\n}, {\n  title: 'Alien',\n  year: 1979\n}, {\n  title: 'Sunset Boulevard',\n  year: 1950\n}, {\n  title: 'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\n  year: 1964\n}, {\n  title: 'The Great Dictator',\n  year: 1940\n}, {\n  title: 'Cinema Paradiso',\n  year: 1988\n}, {\n  title: 'The Lives of Others',\n  year: 2006\n}, {\n  title: 'Grave of the Fireflies',\n  year: 1988\n}, {\n  title: 'Paths of Glory',\n  year: 1957\n}, {\n  title: 'Django Unchained',\n  year: 2012\n}, {\n  title: 'The Shining',\n  year: 1980\n}, {\n  title: 'WALL·E',\n  year: 2008\n}, {\n  title: 'American Beauty',\n  year: 1999\n}, {\n  title: 'The Dark Knight Rises',\n  year: 2012\n}, {\n  title: 'Princess Mononoke',\n  year: 1997\n}, {\n  title: 'Aliens',\n  year: 1986\n}, {\n  title: 'Oldboy',\n  year: 2003\n}, {\n  title: 'Once Upon a Time in America',\n  year: 1984\n}, {\n  title: 'Witness for the Prosecution',\n  year: 1957\n}, {\n  title: 'Das Boot',\n  year: 1981\n}, {\n  title: 'Citizen Kane',\n  year: 1941\n}, {\n  title: 'North by Northwest',\n  year: 1959\n}, {\n  title: 'Vertigo',\n  year: 1958\n}, {\n  title: 'Star Wars: Episode VI - Return of the Jedi',\n  year: 1983\n}, {\n  title: 'Reservoir Dogs',\n  year: 1992\n}, {\n  title: 'Braveheart',\n  year: 1995\n}, {\n  title: 'M',\n  year: 1931\n}, {\n  title: 'Requiem for a Dream',\n  year: 2000\n}, {\n  title: 'Amélie',\n  year: 2001\n}, {\n  title: 'A Clockwork Orange',\n  year: 1971\n}, {\n  title: 'Like Stars on Earth',\n  year: 2007\n}, {\n  title: 'Taxi Driver',\n  year: 1976\n}, {\n  title: 'Lawrence of Arabia',\n  year: 1962\n}, {\n  title: 'Double Indemnity',\n  year: 1944\n}, {\n  title: 'Eternal Sunshine of the Spotless Mind',\n  year: 2004\n}, {\n  title: 'Amadeus',\n  year: 1984\n}, {\n  title: 'To Kill a Mockingbird',\n  year: 1962\n}, {\n  title: 'Toy Story 3',\n  year: 2010\n}, {\n  title: 'Logan',\n  year: 2017\n}, {\n  title: 'Full Metal Jacket',\n  year: 1987\n}, {\n  title: 'Dangal',\n  year: 2016\n}, {\n  title: 'The Sting',\n  year: 1973\n}, {\n  title: '2001: A Space Odyssey',\n  year: 1968\n}, {\n  title: \"Singin' in the Rain\",\n  year: 1952\n}, {\n  title: 'Toy Story',\n  year: 1995\n}, {\n  title: 'Bicycle Thieves',\n  year: 1948\n}, {\n  title: 'The Kid',\n  year: 1921\n}, {\n  title: 'Inglourious Basterds',\n  year: 2009\n}, {\n  title: 'Snatch',\n  year: 2000\n}, {\n  title: '3 Idiots',\n  year: 2009\n}, {\n  title: 'Monty Python and the Holy Grail',\n  year: 1975\n}];","map":{"version":3,"sources":["D:/proyectos_react/Proyecto_sena/src/app/main/documentation/material-ui-components/components/autocomplete/Playground.js"],"names":["React","TextField","Autocomplete","Playground","defaultProps","options","top100Films","getOptionLabel","option","title","flatProps","map","value","setValue","useState","width","params","event","newValue","year"],"mappings":"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","sourcesContent":["/* eslint-disable no-use-before-define */\nimport React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nexport default function Playground() {\n  const defaultProps = {\n    options: top100Films,\n    getOptionLabel: (option) => option.title,\n  };\n\n  const flatProps = {\n    options: top100Films.map((option) => option.title),\n  };\n\n  const [value, setValue] = React.useState(null);\n\n  return (\n    <div style={{ width: 300 }}>\n      <Autocomplete\n        {...defaultProps}\n        id=\"debug\"\n        debug\n        renderInput={(params) => <TextField {...params} label=\"debug\" margin=\"normal\" />}\n      />\n      <Autocomplete\n        {...defaultProps}\n        id=\"disable-close-on-select\"\n        disableCloseOnSelect\n        renderInput={(params) => (\n          <TextField {...params} label=\"disableCloseOnSelect\" margin=\"normal\" />\n        )}\n      />\n      <Autocomplete\n        {...defaultProps}\n        id=\"clear-on-escape\"\n        clearOnEscape\n        renderInput={(params) => <TextField {...params} label=\"clearOnEscape\" margin=\"normal\" />}\n      />\n      <Autocomplete\n        {...defaultProps}\n        id=\"disable-clearable\"\n        disableClearable\n        renderInput={(params) => <TextField {...params} label=\"disableClearable\" margin=\"normal\" />}\n      />\n      <Autocomplete\n        {...defaultProps}\n        id=\"include-input-in-list\"\n        includeInputInList\n        renderInput={(params) => (\n          <TextField {...params} label=\"includeInputInList\" margin=\"normal\" />\n        )}\n      />\n      <Autocomplete\n        {...flatProps}\n        id=\"flat-demo\"\n        renderInput={(params) => <TextField {...params} label=\"flat\" margin=\"normal\" />}\n      />\n      <Autocomplete\n        {...defaultProps}\n        id=\"controlled-demo\"\n        value={value}\n        onChange={(event, newValue) => {\n          setValue(newValue);\n        }}\n        renderInput={(params) => <TextField {...params} label=\"controlled\" margin=\"normal\" />}\n      />\n      <Autocomplete\n        {...defaultProps}\n        id=\"auto-complete\"\n        autoComplete\n        includeInputInList\n        renderInput={(params) => <TextField {...params} label=\"autoComplete\" margin=\"normal\" />}\n      />\n      <Autocomplete\n        {...defaultProps}\n        id=\"disable-list-wrap\"\n        disableListWrap\n        renderInput={(params) => <TextField {...params} label=\"disableListWrap\" margin=\"normal\" />}\n      />\n      <Autocomplete\n        {...defaultProps}\n        id=\"open-on-focus\"\n        openOnFocus\n        renderInput={(params) => <TextField {...params} label=\"openOnFocus\" margin=\"normal\" />}\n      />\n      <Autocomplete\n        {...defaultProps}\n        id=\"auto-highlight\"\n        autoHighlight\n        renderInput={(params) => <TextField {...params} label=\"autoHighlight\" margin=\"normal\" />}\n      />\n      <Autocomplete\n        {...defaultProps}\n        id=\"auto-select\"\n        autoSelect\n        renderInput={(params) => <TextField {...params} label=\"autoSelect\" margin=\"normal\" />}\n      />\n      <Autocomplete\n        {...defaultProps}\n        id=\"disabled\"\n        disabled\n        renderInput={(params) => <TextField {...params} label=\"disabled\" margin=\"normal\" />}\n      />\n      <Autocomplete\n        {...defaultProps}\n        id=\"disable-portal\"\n        disablePortal\n        renderInput={(params) => <TextField {...params} label=\"disablePortal\" margin=\"normal\" />}\n      />\n      <Autocomplete\n        {...defaultProps}\n        id=\"blur-on-select\"\n        blurOnSelect\n        renderInput={(params) => <TextField {...params} label=\"blurOnSelect\" margin=\"normal\" />}\n      />\n      <Autocomplete\n        {...defaultProps}\n        id=\"clear-on-blur\"\n        clearOnBlur\n        renderInput={(params) => <TextField {...params} label=\"clearOnBlur\" margin=\"normal\" />}\n      />\n      <Autocomplete\n        {...defaultProps}\n        id=\"select-on-focus\"\n        selectOnFocus\n        renderInput={(params) => <TextField {...params} label=\"selectOnFocus\" margin=\"normal\" />}\n      />\n    </div>\n  );\n}\n\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\nconst top100Films = [\n  { title: 'The Shawshank Redemption', year: 1994 },\n  { title: 'The Godfather', year: 1972 },\n  { title: 'The Godfather: Part II', year: 1974 },\n  { title: 'The Dark Knight', year: 2008 },\n  { title: '12 Angry Men', year: 1957 },\n  { title: \"Schindler's List\", year: 1993 },\n  { title: 'Pulp Fiction', year: 1994 },\n  { title: 'The Lord of the Rings: The Return of the King', year: 2003 },\n  { title: 'The Good, the Bad and the Ugly', year: 1966 },\n  { title: 'Fight Club', year: 1999 },\n  { title: 'The Lord of the Rings: The Fellowship of the Ring', year: 2001 },\n  { title: 'Star Wars: Episode V - The Empire Strikes Back', year: 1980 },\n  { title: 'Forrest Gump', year: 1994 },\n  { title: 'Inception', year: 2010 },\n  { title: 'The Lord of the Rings: The Two Towers', year: 2002 },\n  { title: \"One Flew Over the Cuckoo's Nest\", year: 1975 },\n  { title: 'Goodfellas', year: 1990 },\n  { title: 'The Matrix', year: 1999 },\n  { title: 'Seven Samurai', year: 1954 },\n  { title: 'Star Wars: Episode IV - A New Hope', year: 1977 },\n  { title: 'City of God', year: 2002 },\n  { title: 'Se7en', year: 1995 },\n  { title: 'The Silence of the Lambs', year: 1991 },\n  { title: \"It's a Wonderful Life\", year: 1946 },\n  { title: 'Life Is Beautiful', year: 1997 },\n  { title: 'The Usual Suspects', year: 1995 },\n  { title: 'Léon: The Professional', year: 1994 },\n  { title: 'Spirited Away', year: 2001 },\n  { title: 'Saving Private Ryan', year: 1998 },\n  { title: 'Once Upon a Time in the West', year: 1968 },\n  { title: 'American History X', year: 1998 },\n  { title: 'Interstellar', year: 2014 },\n  { title: 'Casablanca', year: 1942 },\n  { title: 'City Lights', year: 1931 },\n  { title: 'Psycho', year: 1960 },\n  { title: 'The Green Mile', year: 1999 },\n  { title: 'The Intouchables', year: 2011 },\n  { title: 'Modern Times', year: 1936 },\n  { title: 'Raiders of the Lost Ark', year: 1981 },\n  { title: 'Rear Window', year: 1954 },\n  { title: 'The Pianist', year: 2002 },\n  { title: 'The Departed', year: 2006 },\n  { title: 'Terminator 2: Judgment Day', year: 1991 },\n  { title: 'Back to the Future', year: 1985 },\n  { title: 'Whiplash', year: 2014 },\n  { title: 'Gladiator', year: 2000 },\n  { title: 'Memento', year: 2000 },\n  { title: 'The Prestige', year: 2006 },\n  { title: 'The Lion King', year: 1994 },\n  { title: 'Apocalypse Now', year: 1979 },\n  { title: 'Alien', year: 1979 },\n  { title: 'Sunset Boulevard', year: 1950 },\n  { title: 'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb', year: 1964 },\n  { title: 'The Great Dictator', year: 1940 },\n  { title: 'Cinema Paradiso', year: 1988 },\n  { title: 'The Lives of Others', year: 2006 },\n  { title: 'Grave of the Fireflies', year: 1988 },\n  { title: 'Paths of Glory', year: 1957 },\n  { title: 'Django Unchained', year: 2012 },\n  { title: 'The Shining', year: 1980 },\n  { title: 'WALL·E', year: 2008 },\n  { title: 'American Beauty', year: 1999 },\n  { title: 'The Dark Knight Rises', year: 2012 },\n  { title: 'Princess Mononoke', year: 1997 },\n  { title: 'Aliens', year: 1986 },\n  { title: 'Oldboy', year: 2003 },\n  { title: 'Once Upon a Time in America', year: 1984 },\n  { title: 'Witness for the Prosecution', year: 1957 },\n  { title: 'Das Boot', year: 1981 },\n  { title: 'Citizen Kane', year: 1941 },\n  { title: 'North by Northwest', year: 1959 },\n  { title: 'Vertigo', year: 1958 },\n  { title: 'Star Wars: Episode VI - Return of the Jedi', year: 1983 },\n  { title: 'Reservoir Dogs', year: 1992 },\n  { title: 'Braveheart', year: 1995 },\n  { title: 'M', year: 1931 },\n  { title: 'Requiem for a Dream', year: 2000 },\n  { title: 'Amélie', year: 2001 },\n  { title: 'A Clockwork Orange', year: 1971 },\n  { title: 'Like Stars on Earth', year: 2007 },\n  { title: 'Taxi Driver', year: 1976 },\n  { title: 'Lawrence of Arabia', year: 1962 },\n  { title: 'Double Indemnity', year: 1944 },\n  { title: 'Eternal Sunshine of the Spotless Mind', year: 2004 },\n  { title: 'Amadeus', year: 1984 },\n  { title: 'To Kill a Mockingbird', year: 1962 },\n  { title: 'Toy Story 3', year: 2010 },\n  { title: 'Logan', year: 2017 },\n  { title: 'Full Metal Jacket', year: 1987 },\n  { title: 'Dangal', year: 2016 },\n  { title: 'The Sting', year: 1973 },\n  { title: '2001: A Space Odyssey', year: 1968 },\n  { title: \"Singin' in the Rain\", year: 1952 },\n  { title: 'Toy Story', year: 1995 },\n  { title: 'Bicycle Thieves', year: 1948 },\n  { title: 'The Kid', year: 1921 },\n  { title: 'Inglourious Basterds', year: 2009 },\n  { title: 'Snatch', year: 2000 },\n  { title: '3 Idiots', year: 2009 },\n  { title: 'Monty Python and the Holy Grail', year: 1975 },\n];\n"]},"metadata":{},"sourceType":"module"}