{"ast":null,"code":"var _jsxFileName = \"D:\\\\proyectos_react\\\\Proyecto_sena\\\\src\\\\app\\\\main\\\\apps\\\\chat\\\\ContactListItem.js\";\nimport Avatar from '@material-ui/core/Avatar';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport React from 'react';\nimport StatusIcon from './StatusIcon';\nconst useStyles = makeStyles(theme => ({\n  contactListItem: {\n    borderBottom: `1px solid ${theme.palette.divider}`,\n    '&.active': {\n      backgroundColor: theme.palette.background.paper\n    }\n  },\n  unreadBadge: {\n    backgroundColor: theme.palette.secondary.main,\n    color: theme.palette.secondary.contrastText\n  }\n}));\n\nfunction ContactListItem(props) {\n  const classes = useStyles(props);\n  return /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    className: clsx(classes.contactListItem, 'px-16 py-12 min-h-92', {\n      active: props.selectedContactId === props.contact.id\n    }),\n    onClick: () => props.onContactClick(props.contact.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"relative\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"absolute right-0 bottom-0 -m-4 z-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(StatusIcon, {\n    status: props.contact.status,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 6\n    }\n  })), /*#__PURE__*/React.createElement(Avatar, {\n    src: props.contact.avatar,\n    alt: props.contact.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, !props.contact.avatar || props.contact.avatar === '' ? props.contact.name[0] : '')), /*#__PURE__*/React.createElement(ListItemText, {\n    classes: {\n      root: 'min-w-px px-16',\n      secondary: 'truncate'\n    },\n    primary: props.contact.name,\n    secondary: props.contact.mood,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 4\n    }\n  }), props.contact.chatId && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex flex-col justify-center items-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, props.contact.lastMessageTime && /*#__PURE__*/React.createElement(Typography, {\n    className: \"whitespace-no-wrap mb-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, moment(props.contact.lastMessageTime).format('ll')), props.contact.unread && /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.unreadBadge, 'flex items-center justify-center min-w-24 h-24 rounded-full text-14 text-center'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, props.contact.unread)));\n}\n\nexport default ContactListItem;","map":{"version":3,"sources":["D:/proyectos_react/Proyecto_sena/src/app/main/apps/chat/ContactListItem.js"],"names":["Avatar","ListItem","ListItemText","makeStyles","Typography","clsx","moment","React","StatusIcon","useStyles","theme","contactListItem","borderBottom","palette","divider","backgroundColor","background","paper","unreadBadge","secondary","main","color","contrastText","ContactListItem","props","classes","active","selectedContactId","contact","id","onContactClick","status","avatar","name","root","mood","chatId","lastMessageTime","format","unread"],"mappings":"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","sourcesContent":["import Avatar from '@material-ui/core/Avatar';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport React from 'react';\nimport StatusIcon from './StatusIcon';\n\nconst useStyles = makeStyles(theme => ({\n\tcontactListItem: {\n\t\tborderBottom: `1px solid ${theme.palette.divider}`,\n\t\t'&.active': {\n\t\t\tbackgroundColor: theme.palette.background.paper\n\t\t}\n\t},\n\tunreadBadge: {\n\t\tbackgroundColor: theme.palette.secondary.main,\n\t\tcolor: theme.palette.secondary.contrastText\n\t}\n}));\n\nfunction ContactListItem(props) {\n\tconst classes = useStyles(props);\n\n\treturn (\n\t\t<ListItem\n\t\t\tbutton\n\t\t\tclassName={clsx(classes.contactListItem, 'px-16 py-12 min-h-92', {\n\t\t\t\tactive: props.selectedContactId === props.contact.id\n\t\t\t})}\n\t\t\tonClick={() => props.onContactClick(props.contact.id)}\n\t\t>\n\t\t\t<div className=\"relative\">\n\t\t\t\t<div className=\"absolute right-0 bottom-0 -m-4 z-10\">\n\t\t\t\t\t<StatusIcon status={props.contact.status} />\n\t\t\t\t</div>\n\n\t\t\t\t<Avatar src={props.contact.avatar} alt={props.contact.name}>\n\t\t\t\t\t{!props.contact.avatar || props.contact.avatar === '' ? props.contact.name[0] : ''}\n\t\t\t\t</Avatar>\n\t\t\t</div>\n\n\t\t\t<ListItemText\n\t\t\t\tclasses={{\n\t\t\t\t\troot: 'min-w-px px-16',\n\t\t\t\t\tsecondary: 'truncate'\n\t\t\t\t}}\n\t\t\t\tprimary={props.contact.name}\n\t\t\t\tsecondary={props.contact.mood}\n\t\t\t/>\n\n\t\t\t{props.contact.chatId && (\n\t\t\t\t<div className=\"flex flex-col justify-center items-end\">\n\t\t\t\t\t{props.contact.lastMessageTime && (\n\t\t\t\t\t\t<Typography className=\"whitespace-no-wrap mb-8\">\n\t\t\t\t\t\t\t{moment(props.contact.lastMessageTime).format('ll')}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t)}\n\t\t\t\t\t{props.contact.unread && (\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclassName={clsx(\n\t\t\t\t\t\t\t\tclasses.unreadBadge,\n\t\t\t\t\t\t\t\t'flex items-center justify-center min-w-24 h-24 rounded-full text-14 text-center'\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{props.contact.unread}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</ListItem>\n\t);\n}\n\nexport default ContactListItem;\n"]},"metadata":{},"sourceType":"module"}