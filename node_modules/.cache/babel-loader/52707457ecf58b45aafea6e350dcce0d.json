{"ast":null,"code":"var _jsxFileName = \"D:\\\\proyectos_react\\\\Proyecto_sena\\\\src\\\\app\\\\main\\\\apps\\\\empresa\\\\GoesEmpresas.js\";\n//import React from 'react';\n//import { makeStyles } from '@material-ui/core/styles';\nimport { TextFieldFormsy } from '@fuse/core/formsy';\nimport Button from '@material-ui/core/Button';\nimport Icon from '@material-ui/core/Icon';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Formsy from 'formsy-react';\nimport React, { useEffect, useRef, useState } from 'react'; //import { useDispatch, useSelector } from 'react-redux';\n//import { submitRegister } from 'app/auth/store/registerSlice';\n\n/* import TextField from '@material-ui/core/TextField';\r\nimport clsx from 'clsx'; */\n\n/* const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(),\r\n            width: '50ch',\r\n        },\r\n    },\r\n})); */\n\nconst [isFormValid, setIsFormValid] = useState(false);\nconst formRef = useRef(null);\n/* useEffect(() => {\r\n    if (register.error && (register.error.username || register.error.password || register.error.email)) {\r\n        formRef.current.updateInputsWithError({\r\n            ...register.error\r\n        });\r\n        disableButton();\r\n    }\r\n}, [register.error]); */\n\nfunction disableButton() {\n  setIsFormValid(false);\n}\n\nfunction enableButton() {\n  setIsFormValid(true);\n}\n\nfunction handleSubmit(model) {// dispatch(submitRegister(model));\n}\n\nexport default function BasicTextFields() {\n  //  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"w-full\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Formsy, {\n    onValidSubmit: handleSubmit,\n    onValid: enableButton,\n    onInvalid: disableButton,\n    ref: formRef,\n    className: \"flex flex-col justify-center w-full\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextFieldFormsy, {\n    className: \"mb-16\",\n    type: \"text\",\n    name: \"displayName\",\n    label: \"Display name\",\n    validations: {\n      minLength: 4\n    },\n    validationErrors: {\n      minLength: 'Min character length is 4'\n    },\n    InputProps: {\n      endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        className: \"text-20\",\n        color: \"action\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 33\n        }\n      }, \"person\"))\n    },\n    variant: \"outlined\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(TextFieldFormsy, {\n    className: \"mb-16\",\n    type: \"text\",\n    name: \"email\",\n    label: \"Email\",\n    validations: \"isEmail\",\n    validationErrors: {\n      isEmail: 'Please enter a valid email'\n    },\n    InputProps: {\n      endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        className: \"text-20\",\n        color: \"action\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 33\n        }\n      }, \"email\"))\n    },\n    variant: \"outlined\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(TextFieldFormsy, {\n    className: \"mb-16\",\n    type: \"password\",\n    name: \"password\",\n    label: \"Password\",\n    validations: \"equalsField:password-confirm\",\n    validationErrors: {\n      equalsField: 'Passwords do not match'\n    },\n    InputProps: {\n      endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        className: \"text-20\",\n        color: \"action\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 33\n        }\n      }, \"vpn_key\"))\n    },\n    variant: \"outlined\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(TextFieldFormsy, {\n    className: \"mb-16\",\n    type: \"password\",\n    name: \"password-confirm\",\n    label: \"Confirm Password\",\n    validations: \"equalsField:password\",\n    validationErrors: {\n      equalsField: 'Passwords do not match'\n    },\n    InputProps: {\n      endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        className: \"text-20\",\n        color: \"action\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 33\n        }\n      }, \"vpn_key\"))\n    },\n    variant: \"outlined\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    variant: \"contained\",\n    color: \"primary\",\n    className: \"w-full mx-auto mt-16 normal-case\",\n    \"aria-label\": \"REGISTER\",\n    disabled: !isFormValid,\n    value: \"legacy\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 17\n    }\n  }, \"Register\")));\n  /*  return (\r\n       <div\r\n           className={clsx(\r\n               classes.root,\r\n               'flex flex-col flex-auto items-center justify-center flex-shrink-0 p-16 md:p-24'\r\n           )}\r\n       >\r\n       <form className={classes.root} noValidate autoComplete=\"off\">\r\n           <TextField id=\"standard-basic\" label=\"Standard\" />\r\n           <TextField id=\"filled-basic\" label=\"Filled\" variant=\"filled\" />\r\n           <TextField id=\"outlined-basic\" label=\"Outlined\" variant=\"outlined\" />\r\n           </form>\r\n       </div>\r\n   ); */\n}","map":{"version":3,"sources":["D:/proyectos_react/Proyecto_sena/src/app/main/apps/empresa/GoesEmpresas.js"],"names":["TextFieldFormsy","Button","Icon","InputAdornment","Formsy","React","useEffect","useRef","useState","isFormValid","setIsFormValid","formRef","disableButton","enableButton","handleSubmit","model","BasicTextFields","minLength","endAdornment","isEmail","equalsField"],"mappings":"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","sourcesContent":["//import React from 'react';\r\n//import { makeStyles } from '@material-ui/core/styles';\r\nimport { TextFieldFormsy } from '@fuse/core/formsy';\r\nimport Button from '@material-ui/core/Button';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport Formsy from 'formsy-react';\r\n\r\n import React, { useEffect, useRef, useState } from 'react'; \r\n//import { useDispatch, useSelector } from 'react-redux';\r\n//import { submitRegister } from 'app/auth/store/registerSlice';\r\n\r\n\r\n\r\n/* import TextField from '@material-ui/core/TextField';\r\nimport clsx from 'clsx'; */\r\n\r\n/* const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(),\r\n            width: '50ch',\r\n        },\r\n    },\r\n})); */\r\n\r\nconst [isFormValid, setIsFormValid] = useState(false);\r\nconst formRef = useRef(null);\r\n\r\n/* useEffect(() => {\r\n    if (register.error && (register.error.username || register.error.password || register.error.email)) {\r\n        formRef.current.updateInputsWithError({\r\n            ...register.error\r\n        });\r\n        disableButton();\r\n    }\r\n}, [register.error]); */\r\n\r\nfunction disableButton() {\r\n    setIsFormValid(false);\r\n}\r\n\r\nfunction enableButton() {\r\n    setIsFormValid(true);\r\n}\r\n\r\nfunction handleSubmit(model) {\r\n   // dispatch(submitRegister(model));\r\n}\r\n\r\nexport default function BasicTextFields() {\r\n  //  const classes = useStyles();\r\n    return (\r\n        <div className=\"w-full\">\r\n            <Formsy\r\n                onValidSubmit={handleSubmit}\r\n                onValid={enableButton}\r\n                onInvalid={disableButton}\r\n                ref={formRef}\r\n                className=\"flex flex-col justify-center w-full\"\r\n            >\r\n                <TextFieldFormsy\r\n                    className=\"mb-16\"\r\n                    type=\"text\"\r\n                    name=\"displayName\"\r\n                    label=\"Display name\"\r\n                    validations={{\r\n                        minLength: 4\r\n                    }}\r\n                    validationErrors={{\r\n                        minLength: 'Min character length is 4'\r\n                    }}\r\n                    InputProps={{\r\n                        endAdornment: (\r\n                            <InputAdornment position=\"end\">\r\n                                <Icon className=\"text-20\" color=\"action\">\r\n                                    person\r\n\t\t\t\t\t\t\t\t</Icon>\r\n                            </InputAdornment>\r\n                        )\r\n                    }}\r\n                    variant=\"outlined\"\r\n                    required\r\n                />\r\n\r\n                <TextFieldFormsy\r\n                    className=\"mb-16\"\r\n                    type=\"text\"\r\n                    name=\"email\"\r\n                    label=\"Email\"\r\n                    validations=\"isEmail\"\r\n                    validationErrors={{\r\n                        isEmail: 'Please enter a valid email'\r\n                    }}\r\n                    InputProps={{\r\n                        endAdornment: (\r\n                            <InputAdornment position=\"end\">\r\n                                <Icon className=\"text-20\" color=\"action\">\r\n                                    email\r\n\t\t\t\t\t\t\t\t</Icon>\r\n                            </InputAdornment>\r\n                        )\r\n                    }}\r\n                    variant=\"outlined\"\r\n                    required\r\n                />\r\n\r\n                <TextFieldFormsy\r\n                    className=\"mb-16\"\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    label=\"Password\"\r\n                    validations=\"equalsField:password-confirm\"\r\n                    validationErrors={{\r\n                        equalsField: 'Passwords do not match'\r\n                    }}\r\n                    InputProps={{\r\n                        endAdornment: (\r\n                            <InputAdornment position=\"end\">\r\n                                <Icon className=\"text-20\" color=\"action\">\r\n                                    vpn_key\r\n\t\t\t\t\t\t\t\t</Icon>\r\n                            </InputAdornment>\r\n                        )\r\n                    }}\r\n                    variant=\"outlined\"\r\n                    required\r\n                />\r\n\r\n                <TextFieldFormsy\r\n                    className=\"mb-16\"\r\n                    type=\"password\"\r\n                    name=\"password-confirm\"\r\n                    label=\"Confirm Password\"\r\n                    validations=\"equalsField:password\"\r\n                    validationErrors={{\r\n                        equalsField: 'Passwords do not match'\r\n                    }}\r\n                    InputProps={{\r\n                        endAdornment: (\r\n                            <InputAdornment position=\"end\">\r\n                                <Icon className=\"text-20\" color=\"action\">\r\n                                    vpn_key\r\n\t\t\t\t\t\t\t\t</Icon>\r\n                            </InputAdornment>\r\n                        )\r\n                    }}\r\n                    variant=\"outlined\"\r\n                    required\r\n                />\r\n\r\n                <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className=\"w-full mx-auto mt-16 normal-case\"\r\n                    aria-label=\"REGISTER\"\r\n                    disabled={!isFormValid}\r\n                    value=\"legacy\"\r\n                >\r\n                    Register\r\n\t\t\t\t</Button>\r\n            </Formsy>\r\n        </div>\r\n    );\r\n   /*  return (\r\n        <div\r\n            className={clsx(\r\n                classes.root,\r\n                'flex flex-col flex-auto items-center justify-center flex-shrink-0 p-16 md:p-24'\r\n            )}\r\n        >\r\n        <form className={classes.root} noValidate autoComplete=\"off\">\r\n            <TextField id=\"standard-basic\" label=\"Standard\" />\r\n            <TextField id=\"filled-basic\" label=\"Filled\" variant=\"filled\" />\r\n            <TextField id=\"outlined-basic\" label=\"Outlined\" variant=\"outlined\" />\r\n            </form>\r\n        </div>\r\n    ); */\r\n}"]},"metadata":{},"sourceType":"module"}