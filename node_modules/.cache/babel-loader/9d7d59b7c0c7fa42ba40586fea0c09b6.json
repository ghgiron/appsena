{"ast":null,"code":"var _jsxFileName = \"D:\\\\proyectos_react\\\\Proyecto_sena\\\\src\\\\app\\\\main\\\\apps\\\\notes\\\\NoteListItem.js\";\nimport FuseAnimate from '@fuse/core/FuseAnimate';\nimport Card from '@material-ui/core/Card';\nimport Icon from '@material-ui/core/Icon';\nimport Typography from '@material-ui/core/Typography';\nimport clsx from 'clsx';\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport NoteLabel from './NoteLabel';\nimport NoteReminderLabel from './NoteReminderLabel';\nimport setDescriptionStyle from './setDescriptionStyle';\nimport { openNoteDialog } from './store/notesSlice';\n\nfunction NoteListItem(props) {\n  const dispatch = useDispatch();\n  return /*#__PURE__*/React.createElement(FuseAnimate, {\n    animation: \"transition.fadeIn\",\n    duration: 400,\n    delay: 100,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: clsx('cursor-pointer', props.className),\n    onClick: () => dispatch(openNoteDialog(props.note.id)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 4\n    }\n  }, props.note.image && props.note.image !== '' && /*#__PURE__*/React.createElement(\"img\", {\n    src: props.note.image,\n    className: \"w-full block\",\n    alt: \"note\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 6\n    }\n  }), props.note.title && props.note.title !== '' && /*#__PURE__*/React.createElement(Typography, {\n    className: \"p-16 pb-8 text-14 font-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 6\n    }\n  }, props.note.title), props.note.description && props.note.description !== '' && /*#__PURE__*/React.createElement(Typography, {\n    className: \"py-8 px-16\",\n    component: \"div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx('w-full break-words', props.variateDescSize ? 'font-200' : 'text-14'),\n    ref: el => {\n      setTimeout(() => setDescriptionStyle(props.note.description, el, props.variateDescSize));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, props.note.description)), props.note.checklist && props.note.checklist.length > 0 && /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"py-8 px-16 flex flex-wrap list-reset\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 6\n    }\n  }, props.note.checklist.map(item => /*#__PURE__*/React.createElement(\"li\", {\n    key: item.id,\n    className: \"flex items-center w-full\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    color: \"action\",\n    className: \"text-16\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, item.checked ? 'check_box_outline' : 'check_box_outline_blank'), /*#__PURE__*/React.createElement(Typography, {\n    className: clsx('truncate mx-8', item.checked && 'line-through'),\n    color: item.checked ? 'textSecondary' : 'inherit',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, item.text)))), (props.note.labels.length > 0 || props.note.reminder) && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"py-8 px-16 flex flex-wrap w-full -mx-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 6\n    }\n  }, props.note.reminder && /*#__PURE__*/React.createElement(NoteReminderLabel, {\n    className: \"mt-4 mx-2 max-w-full\",\n    date: props.note.reminder,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 31\n    }\n  }), props.note.labels.map(id => /*#__PURE__*/React.createElement(NoteLabel, {\n    id: id,\n    key: id,\n    className: \"mt-4 mx-2 max-w-full\",\n    linkable: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 8\n    }\n  })))));\n}\n\nexport default NoteListItem;","map":{"version":3,"sources":["D:/proyectos_react/Proyecto_sena/src/app/main/apps/notes/NoteListItem.js"],"names":["FuseAnimate","Card","Icon","Typography","clsx","React","useDispatch","NoteLabel","NoteReminderLabel","setDescriptionStyle","openNoteDialog","NoteListItem","props","dispatch","className","note","id","image","title","description","variateDescSize","el","setTimeout","checklist","length","map","item","checked","text","labels","reminder"],"mappings":";AAAA,OAAOA,WAAP,MAAwB,wBAAxB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;AACA,SAASC,cAAT,QAA+B,oBAA/B;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC5B,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AAEA,sBACC,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAC,mBAAvB;AAA2C,IAAA,QAAQ,EAAE,GAArD;AAA0D,IAAA,KAAK,EAAE,GAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,IAAD;AACC,IAAA,SAAS,EAAEF,IAAI,CAAC,gBAAD,EAAmBQ,KAAK,CAACE,SAAzB,CADhB;AAEC,IAAA,OAAO,EAAE,MAAMD,QAAQ,CAACH,cAAc,CAACE,KAAK,CAACG,IAAN,CAAWC,EAAZ,CAAf,CAFxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIEJ,KAAK,CAACG,IAAN,CAAWE,KAAX,IAAoBL,KAAK,CAACG,IAAN,CAAWE,KAAX,KAAqB,EAAzC,iBACA;AAAK,IAAA,GAAG,EAAEL,KAAK,CAACG,IAAN,CAAWE,KAArB;AAA4B,IAAA,SAAS,EAAC,cAAtC;AAAqD,IAAA,GAAG,EAAC,MAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EAQEL,KAAK,CAACG,IAAN,CAAWG,KAAX,IAAoBN,KAAK,CAACG,IAAN,CAAWG,KAAX,KAAqB,EAAzC,iBACA,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAC,6BAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqDN,KAAK,CAACG,IAAN,CAAWG,KAAhE,CATF,EAYEN,KAAK,CAACG,IAAN,CAAWI,WAAX,IAA0BP,KAAK,CAACG,IAAN,CAAWI,WAAX,KAA2B,EAArD,iBACA,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAC,YAAtB;AAAmC,IAAA,SAAS,EAAC,KAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AACC,IAAA,SAAS,EAAEf,IAAI,CAAC,oBAAD,EAAuBQ,KAAK,CAACQ,eAAN,GAAwB,UAAxB,GAAqC,SAA5D,CADhB;AAEC,IAAA,GAAG,EAAEC,EAAE,IAAI;AACVC,MAAAA,UAAU,CAAC,MACVb,mBAAmB,CAACG,KAAK,CAACG,IAAN,CAAWI,WAAZ,EAAyBE,EAAzB,EAA6BT,KAAK,CAACQ,eAAnC,CADV,CAAV;AAGA,KANF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQER,KAAK,CAACG,IAAN,CAAWI,WARb,CADD,CAbF,EA2BEP,KAAK,CAACG,IAAN,CAAWQ,SAAX,IAAwBX,KAAK,CAACG,IAAN,CAAWQ,SAAX,CAAqBC,MAArB,GAA8B,CAAtD,iBACA;AAAI,IAAA,SAAS,EAAC,sCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEZ,KAAK,CAACG,IAAN,CAAWQ,SAAX,CAAqBE,GAArB,CAAyBC,IAAI,iBAC7B;AAAI,IAAA,GAAG,EAAEA,IAAI,CAACV,EAAd;AAAkB,IAAA,SAAS,EAAC,0BAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAC,QAAZ;AAAqB,IAAA,SAAS,EAAC,SAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEU,IAAI,CAACC,OAAL,GAAe,mBAAf,GAAqC,yBADvC,CADD,eAIC,oBAAC,UAAD;AACC,IAAA,SAAS,EAAEvB,IAAI,CAAC,eAAD,EAAkBsB,IAAI,CAACC,OAAL,IAAgB,cAAlC,CADhB;AAEC,IAAA,KAAK,EAAED,IAAI,CAACC,OAAL,GAAe,eAAf,GAAiC,SAFzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIED,IAAI,CAACE,IAJP,CAJD,CADA,CADF,CA5BF,EA6CE,CAAChB,KAAK,CAACG,IAAN,CAAWc,MAAX,CAAkBL,MAAlB,GAA2B,CAA3B,IAAgCZ,KAAK,CAACG,IAAN,CAAWe,QAA5C,kBACA;AAAK,IAAA,SAAS,EAAC,wCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACElB,KAAK,CAACG,IAAN,CAAWe,QAAX,iBAAuB,oBAAC,iBAAD;AAAmB,IAAA,SAAS,EAAC,sBAA7B;AAAoD,IAAA,IAAI,EAAElB,KAAK,CAACG,IAAN,CAAWe,QAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADzB,EAEElB,KAAK,CAACG,IAAN,CAAWc,MAAX,CAAkBJ,GAAlB,CAAsBT,EAAE,iBACxB,oBAAC,SAAD;AAAW,IAAA,EAAE,EAAEA,EAAf;AAAmB,IAAA,GAAG,EAAEA,EAAxB;AAA4B,IAAA,SAAS,EAAC,sBAAtC;AAA6D,IAAA,QAAQ,MAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CAFF,CA9CF,CADD,CADD;AA0DA;;AAED,eAAeL,YAAf","sourcesContent":["import FuseAnimate from '@fuse/core/FuseAnimate';\nimport Card from '@material-ui/core/Card';\nimport Icon from '@material-ui/core/Icon';\nimport Typography from '@material-ui/core/Typography';\nimport clsx from 'clsx';\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport NoteLabel from './NoteLabel';\nimport NoteReminderLabel from './NoteReminderLabel';\nimport setDescriptionStyle from './setDescriptionStyle';\nimport { openNoteDialog } from './store/notesSlice';\n\nfunction NoteListItem(props) {\n\tconst dispatch = useDispatch();\n\n\treturn (\n\t\t<FuseAnimate animation=\"transition.fadeIn\" duration={400} delay={100}>\n\t\t\t<Card\n\t\t\t\tclassName={clsx('cursor-pointer', props.className)}\n\t\t\t\tonClick={() => dispatch(openNoteDialog(props.note.id))}\n\t\t\t>\n\t\t\t\t{props.note.image && props.note.image !== '' && (\n\t\t\t\t\t<img src={props.note.image} className=\"w-full block\" alt=\"note\" />\n\t\t\t\t)}\n\n\t\t\t\t{props.note.title && props.note.title !== '' && (\n\t\t\t\t\t<Typography className=\"p-16 pb-8 text-14 font-bold\">{props.note.title}</Typography>\n\t\t\t\t)}\n\n\t\t\t\t{props.note.description && props.note.description !== '' && (\n\t\t\t\t\t<Typography className=\"py-8 px-16\" component=\"div\">\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclassName={clsx('w-full break-words', props.variateDescSize ? 'font-200' : 'text-14')}\n\t\t\t\t\t\t\tref={el => {\n\t\t\t\t\t\t\t\tsetTimeout(() =>\n\t\t\t\t\t\t\t\t\tsetDescriptionStyle(props.note.description, el, props.variateDescSize)\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{props.note.description}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Typography>\n\t\t\t\t)}\n\n\t\t\t\t{props.note.checklist && props.note.checklist.length > 0 && (\n\t\t\t\t\t<ul className=\"py-8 px-16 flex flex-wrap list-reset\">\n\t\t\t\t\t\t{props.note.checklist.map(item => (\n\t\t\t\t\t\t\t<li key={item.id} className=\"flex items-center w-full\">\n\t\t\t\t\t\t\t\t<Icon color=\"action\" className=\"text-16\">\n\t\t\t\t\t\t\t\t\t{item.checked ? 'check_box_outline' : 'check_box_outline_blank'}\n\t\t\t\t\t\t\t\t</Icon>\n\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\tclassName={clsx('truncate mx-8', item.checked && 'line-through')}\n\t\t\t\t\t\t\t\t\tcolor={item.checked ? 'textSecondary' : 'inherit'}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{item.text}\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</ul>\n\t\t\t\t)}\n\n\t\t\t\t{(props.note.labels.length > 0 || props.note.reminder) && (\n\t\t\t\t\t<div className=\"py-8 px-16 flex flex-wrap w-full -mx-2\">\n\t\t\t\t\t\t{props.note.reminder && <NoteReminderLabel className=\"mt-4 mx-2 max-w-full\" date={props.note.reminder} />}\n\t\t\t\t\t\t{props.note.labels.map(id => (\n\t\t\t\t\t\t\t<NoteLabel id={id} key={id} className=\"mt-4 mx-2 max-w-full\" linkable />\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</Card>\n\t\t</FuseAnimate>\n\t);\n}\n\nexport default NoteListItem;\n"]},"metadata":{},"sourceType":"module"}