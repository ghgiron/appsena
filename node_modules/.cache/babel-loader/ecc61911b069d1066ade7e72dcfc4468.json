{"ast":null,"code":"import { createSlice, createAsyncThunk, createEntityAdapter } from '@reduxjs/toolkit';\nimport axios from 'axios';\nexport const getOrders = createAsyncThunk('eCommerceApp/orders/getOrders', async () => {\n  const response = await axios.get('/api/e-commerce-app/orders');\n  const data = await response.data;\n  return data;\n});\nconst ordersAdapter = createEntityAdapter({});\nexport const {\n  selectAll: selectOrders,\n  selectById: selectOrderById\n} = ordersAdapter.getSelectors(state => state.eCommerceApp.orders);\nconst ordersSlice = createSlice({\n  name: 'eCommerceApp/orders',\n  initialState: ordersAdapter.getInitialState({\n    searchText: ''\n  }),\n  reducers: {\n    setOrdersSearchText: {\n      reducer: (state, action) => {\n        state.searchText = action.payload;\n      },\n      prepare: event => ({\n        payload: event.target.value || ''\n      })\n    }\n  },\n  extraReducers: {\n    [getOrders.fulfilled]: ordersAdapter.setAll\n  }\n});\nexport const {\n  setOrdersSearchText\n} = ordersSlice.actions;\nexport default ordersSlice.reducer;","map":{"version":3,"sources":["D:/proyectos_react/Proyecto_sena/src/app/main/apps/e-commerce/store/ordersSlice.js"],"names":["createSlice","createAsyncThunk","createEntityAdapter","axios","getOrders","response","get","data","ordersAdapter","selectAll","selectOrders","selectById","selectOrderById","getSelectors","state","eCommerceApp","orders","ordersSlice","name","initialState","getInitialState","searchText","reducers","setOrdersSearchText","reducer","action","payload","prepare","event","target","value","extraReducers","fulfilled","setAll","actions"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,gBAAtB,EAAwCC,mBAAxC,QAAmE,kBAAnE;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,SAAS,GAAGH,gBAAgB,CAAC,+BAAD,EAAkC,YAAY;AACtF,QAAMI,QAAQ,GAAG,MAAMF,KAAK,CAACG,GAAN,CAAU,4BAAV,CAAvB;AACA,QAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAA5B;AAEA,SAAOA,IAAP;AACA,CALwC,CAAlC;AAOP,MAAMC,aAAa,GAAGN,mBAAmB,CAAC,EAAD,CAAzC;AAEA,OAAO,MAAM;AAAEO,EAAAA,SAAS,EAAEC,YAAb;AAA2BC,EAAAA,UAAU,EAAEC;AAAvC,IAA2DJ,aAAa,CAACK,YAAd,CACvEC,KAAK,IAAIA,KAAK,CAACC,YAAN,CAAmBC,MAD2C,CAAjE;AAIP,MAAMC,WAAW,GAAGjB,WAAW,CAAC;AAC/BkB,EAAAA,IAAI,EAAE,qBADyB;AAE/BC,EAAAA,YAAY,EAAEX,aAAa,CAACY,eAAd,CAA8B;AAC3CC,IAAAA,UAAU,EAAE;AAD+B,GAA9B,CAFiB;AAK/BC,EAAAA,QAAQ,EAAE;AACTC,IAAAA,mBAAmB,EAAE;AACpBC,MAAAA,OAAO,EAAE,CAACV,KAAD,EAAQW,MAAR,KAAmB;AAC3BX,QAAAA,KAAK,CAACO,UAAN,GAAmBI,MAAM,CAACC,OAA1B;AACA,OAHmB;AAIpBC,MAAAA,OAAO,EAAEC,KAAK,KAAK;AAAEF,QAAAA,OAAO,EAAEE,KAAK,CAACC,MAAN,CAAaC,KAAb,IAAsB;AAAjC,OAAL;AAJM;AADZ,GALqB;AAa/BC,EAAAA,aAAa,EAAE;AACd,KAAC3B,SAAS,CAAC4B,SAAX,GAAuBxB,aAAa,CAACyB;AADvB;AAbgB,CAAD,CAA/B;AAkBA,OAAO,MAAM;AAAEV,EAAAA;AAAF,IAA0BN,WAAW,CAACiB,OAA5C;AAEP,eAAejB,WAAW,CAACO,OAA3B","sourcesContent":["import { createSlice, createAsyncThunk, createEntityAdapter } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\nexport const getOrders = createAsyncThunk('eCommerceApp/orders/getOrders', async () => {\n\tconst response = await axios.get('/api/e-commerce-app/orders');\n\tconst data = await response.data;\n\n\treturn data;\n});\n\nconst ordersAdapter = createEntityAdapter({});\n\nexport const { selectAll: selectOrders, selectById: selectOrderById } = ordersAdapter.getSelectors(\n\tstate => state.eCommerceApp.orders\n);\n\nconst ordersSlice = createSlice({\n\tname: 'eCommerceApp/orders',\n\tinitialState: ordersAdapter.getInitialState({\n\t\tsearchText: ''\n\t}),\n\treducers: {\n\t\tsetOrdersSearchText: {\n\t\t\treducer: (state, action) => {\n\t\t\t\tstate.searchText = action.payload;\n\t\t\t},\n\t\t\tprepare: event => ({ payload: event.target.value || '' })\n\t\t}\n\t},\n\textraReducers: {\n\t\t[getOrders.fulfilled]: ordersAdapter.setAll\n\t}\n});\n\nexport const { setOrdersSearchText } = ordersSlice.actions;\n\nexport default ordersSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}