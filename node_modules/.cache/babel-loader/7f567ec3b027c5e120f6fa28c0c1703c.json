{"ast":null,"code":"var _jsxFileName = \"D:\\\\proyectos_react\\\\Proyecto_sena\\\\src\\\\app\\\\main\\\\documentation\\\\material-ui-components\\\\components\\\\snackbars\\\\ConsecutiveSnackbars.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nconst useStyles = makeStyles(theme => ({\n  close: {\n    padding: theme.spacing(0.5)\n  }\n}));\nexport default function ConsecutiveSnackbars() {\n  const [snackPack, setSnackPack] = React.useState([]);\n  const [open, setOpen] = React.useState(false);\n  const [messageInfo, setMessageInfo] = React.useState(undefined);\n  React.useEffect(() => {\n    if (snackPack.length && !messageInfo) {\n      // Set a new snack when we don't have an active one\n      setMessageInfo({ ...snackPack[0]\n      });\n      setSnackPack(prev => prev.slice(1));\n      setOpen(true);\n    } else if (snackPack.length && messageInfo && open) {\n      // Close an active snack when a new one is added\n      setOpen(false);\n    }\n  }, [snackPack, messageInfo, open]);\n\n  const handleClick = message => () => {\n    setSnackPack(prev => [...prev, {\n      message,\n      key: new Date().getTime()\n    }]);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  const handleExited = () => {\n    setMessageInfo(undefined);\n  };\n\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClick('Message A'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, \"Show message A\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClick('Message B'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, \"Show message B\"), /*#__PURE__*/React.createElement(Snackbar, {\n    key: messageInfo ? messageInfo.key : undefined,\n    anchorOrigin: {\n      vertical: 'bottom',\n      horizontal: 'left'\n    },\n    open: open,\n    autoHideDuration: 6000,\n    onClose: handleClose,\n    onExited: handleExited,\n    message: messageInfo ? messageInfo.message : undefined,\n    action: /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"secondary\",\n      size: \"small\",\n      onClick: handleClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    }, \"UNDO\"), /*#__PURE__*/React.createElement(IconButton, {\n      \"aria-label\": \"close\",\n      color: \"inherit\",\n      className: classes.close,\n      onClick: handleClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CloseIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 15\n      }\n    }))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["D:/proyectos_react/Proyecto_sena/src/app/main/documentation/material-ui-components/components/snackbars/ConsecutiveSnackbars.js"],"names":["React","makeStyles","Button","Snackbar","IconButton","CloseIcon","useStyles","theme","close","padding","spacing","ConsecutiveSnackbars","snackPack","setSnackPack","useState","open","setOpen","messageInfo","setMessageInfo","undefined","useEffect","length","prev","slice","handleClick","message","key","Date","getTime","handleClose","event","reason","handleExited","classes","vertical","horizontal"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\n\nconst useStyles = makeStyles((theme) => ({\n  close: {\n    padding: theme.spacing(0.5),\n  },\n}));\n\nexport default function ConsecutiveSnackbars() {\n  const [snackPack, setSnackPack] = React.useState([]);\n  const [open, setOpen] = React.useState(false);\n  const [messageInfo, setMessageInfo] = React.useState(undefined);\n\n  React.useEffect(() => {\n    if (snackPack.length && !messageInfo) {\n      // Set a new snack when we don't have an active one\n      setMessageInfo({ ...snackPack[0] });\n      setSnackPack((prev) => prev.slice(1));\n      setOpen(true);\n    } else if (snackPack.length && messageInfo && open) {\n      // Close an active snack when a new one is added\n      setOpen(false);\n    }\n  }, [snackPack, messageInfo, open]);\n\n  const handleClick = (message) => () => {\n    setSnackPack((prev) => [...prev, { message, key: new Date().getTime() }]);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setOpen(false);\n  };\n\n  const handleExited = () => {\n    setMessageInfo(undefined);\n  };\n\n  const classes = useStyles();\n  return (\n    <div>\n      <Button onClick={handleClick('Message A')}>Show message A</Button>\n      <Button onClick={handleClick('Message B')}>Show message B</Button>\n      <Snackbar\n        key={messageInfo ? messageInfo.key : undefined}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'left',\n        }}\n        open={open}\n        autoHideDuration={6000}\n        onClose={handleClose}\n        onExited={handleExited}\n        message={messageInfo ? messageInfo.message : undefined}\n        action={\n          <React.Fragment>\n            <Button color=\"secondary\" size=\"small\" onClick={handleClose}>\n              UNDO\n            </Button>\n            <IconButton\n              aria-label=\"close\"\n              color=\"inherit\"\n              className={classes.close}\n              onClick={handleClose}\n            >\n              <CloseIcon />\n            </IconButton>\n          </React.Fragment>\n        }\n      />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}