{"ast":null,"code":"var _jsxFileName = \"D:\\\\proyectos_react\\\\Proyecto_sena\\\\src\\\\app\\\\main\\\\documentation\\\\third-party-components\\\\react-table\\\\examples\\\\simple.js\";\nimport React from 'react';\nimport MaUTable from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { useTable } from 'react-table';\nimport sampleData from './sampleData';\n\nfunction Table({\n  columns,\n  data\n}) {\n  // Use the state and functions returned from useTable to build your UI\n  const {\n    getTableProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable({\n    columns,\n    data\n  }); // Render the UI for your table\n\n  return /*#__PURE__*/React.createElement(MaUTable, Object.assign({}, getTableProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 3\n    }\n  }), /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 4\n    }\n  }, headerGroups.map(headerGroup => /*#__PURE__*/React.createElement(TableRow, Object.assign({}, headerGroup.getHeaderGroupProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 6\n    }\n  }), headerGroup.headers.map(column => /*#__PURE__*/React.createElement(TableCell, Object.assign({}, column.getHeaderProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 8\n    }\n  }), column.render('Header')))))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 4\n    }\n  }, rows.map((row, i) => {\n    prepareRow(row);\n    return /*#__PURE__*/React.createElement(TableRow, Object.assign({}, row.getRowProps(), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }\n    }), row.cells.map(cell => {\n      return /*#__PURE__*/React.createElement(TableCell, Object.assign({}, cell.getCellProps(), {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 16\n        }\n      }), cell.render('Cell'));\n    }));\n  })));\n}\n\nfunction App() {\n  const columns = React.useMemo(() => [{\n    Header: 'Name',\n    columns: [{\n      Header: 'First Name',\n      accessor: 'firstName'\n    }, {\n      Header: 'Last Name',\n      accessor: 'lastName'\n    }]\n  }, {\n    Header: 'Info',\n    columns: [{\n      Header: 'Age',\n      accessor: 'age'\n    }, {\n      Header: 'Visits',\n      accessor: 'visits'\n    }, {\n      Header: 'Status',\n      accessor: 'status'\n    }, {\n      Header: 'Profile Progress',\n      accessor: 'progress'\n    }]\n  }], []);\n  const data = React.useMemo(() => sampleData, []);\n  return /*#__PURE__*/React.createElement(Table, {\n    columns: columns,\n    data: data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  });\n}\n\nexport default App;","map":{"version":3,"sources":["D:/proyectos_react/Proyecto_sena/src/app/main/documentation/third-party-components/react-table/examples/simple.js"],"names":["React","MaUTable","TableBody","TableCell","TableHead","TableRow","useTable","sampleData","Table","columns","data","getTableProps","headerGroups","rows","prepareRow","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","i","getRowProps","cells","cell","getCellProps","App","useMemo","Header","accessor"],"mappings":"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","sourcesContent":["import React from 'react';\nimport MaUTable from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { useTable } from 'react-table';\nimport sampleData from './sampleData';\n\nfunction Table({ columns, data }) {\n\t// Use the state and functions returned from useTable to build your UI\n\tconst { getTableProps, headerGroups, rows, prepareRow } = useTable({\n\t\tcolumns,\n\t\tdata\n\t});\n\n\t// Render the UI for your table\n\treturn (\n\t\t<MaUTable {...getTableProps()}>\n\t\t\t<TableHead>\n\t\t\t\t{headerGroups.map(headerGroup => (\n\t\t\t\t\t<TableRow {...headerGroup.getHeaderGroupProps()}>\n\t\t\t\t\t\t{headerGroup.headers.map(column => (\n\t\t\t\t\t\t\t<TableCell {...column.getHeaderProps()}>{column.render('Header')}</TableCell>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</TableRow>\n\t\t\t\t))}\n\t\t\t</TableHead>\n\t\t\t<TableBody>\n\t\t\t\t{rows.map((row, i) => {\n\t\t\t\t\tprepareRow(row);\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<TableRow {...row.getRowProps()}>\n\t\t\t\t\t\t\t{row.cells.map(cell => {\n\t\t\t\t\t\t\t\treturn <TableCell {...cell.getCellProps()}>{cell.render('Cell')}</TableCell>;\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</TableBody>\n\t\t</MaUTable>\n\t);\n}\n\nfunction App() {\n\tconst columns = React.useMemo(\n\t\t() => [\n\t\t\t{\n\t\t\t\tHeader: 'Name',\n\t\t\t\tcolumns: [\n\t\t\t\t\t{\n\t\t\t\t\t\tHeader: 'First Name',\n\t\t\t\t\t\taccessor: 'firstName'\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tHeader: 'Last Name',\n\t\t\t\t\t\taccessor: 'lastName'\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\tHeader: 'Info',\n\t\t\t\tcolumns: [\n\t\t\t\t\t{\n\t\t\t\t\t\tHeader: 'Age',\n\t\t\t\t\t\taccessor: 'age'\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tHeader: 'Visits',\n\t\t\t\t\t\taccessor: 'visits'\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tHeader: 'Status',\n\t\t\t\t\t\taccessor: 'status'\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tHeader: 'Profile Progress',\n\t\t\t\t\t\taccessor: 'progress'\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\t[]\n\t);\n\n\tconst data = React.useMemo(() => sampleData, []);\n\n\treturn <Table columns={columns} data={data} />;\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}