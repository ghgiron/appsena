{"ast":null,"code":"import _ from '@lodash';\nimport { blueGrey } from '@material-ui/core/colors';\nimport mock from '../mock';\nconst demoSteps = [{\n  id: '0',\n  title: 'Creacion Grupo de aprendizaje',\n  content: '<h1>Momento 1 - Vamos a crear Grupo de aprendizaje de studiantes del Sena GAES</h1>'\n}, {\n  id: '1',\n  title: 'Tipo de Empresa',\n  content: '<h1>Momento 2 - Vamos a crear tu Empresa</h1>' + '<br>'\n}, {\n  id: '2',\n  title: 'Como se llamara tu Empresa',\n  content: '<h1>Momento 3 - Vamos a crear tu Empresa</h1>' + '<br>'\n}];\nconst academyDB = {\n  categories: [{\n    id: 0,\n    value: 'servicios',\n    label: 'servicios mercadeo',\n    color: blueGrey[500]\n  }, {\n    id: 1,\n    value: 'firebase',\n    label: 'servicios mercadeo2',\n    color: amber[500]\n  }],\n  courses: [{\n    id: '0123456789',\n    title: 'Tonly S.A.S',\n    slug: 'basics-of-typeScript',\n    description: 'Commits that need to be pushed lorem ipsum dolor sit amet, consectetur adipiscing elit.',\n    category: 'servicios',\n    length: 0,\n    totalSteps: 6,\n    activeStep: 0,\n    updated: 'Nov 01, 2017',\n    steps: demoSteps\n  }, {\n    id: '0123456790',\n    title: 'Mango System S.A.S',\n    slug: 'basics-of-typeScript',\n    description: 'Commits that need to be pushed lorem ipsum dolor sit amet, consectetur adipiscing elit.',\n    category: 'servicios',\n    length: 0,\n    totalSteps: 6,\n    activeStep: 0,\n    updated: 'Nov 01, 2020',\n    steps: demoSteps\n  }]\n};\nmock.onGet('/api/academy-app/categories').reply(() => {\n  return [200, academyDB.categories];\n});\nmock.onGet('/api/academy-app/courses').reply(() => {\n  return [200, academyDB.courses.map(_course => _.omit(_course, ['steps']))];\n});\nmock.onGet('/api/academy-app/course').reply(request => {\n  const {\n    courseId\n  } = request.params;\n\n  const response = _.find(academyDB.courses, {\n    id: courseId\n  });\n\n  return [200, response];\n});\nmock.onPost('/api/academy-app/course/save').reply(request => {\n  const data = JSON.parse(request.data);\n  let course = null;\n  academyDB.courses = academyDB.courses.map(_course => {\n    if (_course.id === data.id) {\n      course = data;\n      return course;\n    }\n\n    return _course;\n  });\n\n  if (!course) {\n    course = data;\n    academyDB.courses = [...academyDB.courses, course];\n  }\n\n  return [200, course];\n});\nmock.onPost('/api/academy-app/course/update').reply(request => {\n  const data = JSON.parse(request.data);\n  academyDB.courses = academyDB.courses.map(_course => {\n    if (_course.id === data.id) {\n      return _.merge(_course, data);\n    }\n\n    return _course;\n  });\n  return [200, data];\n});","map":{"version":3,"sources":["D:/proyectos_react/Proyecto_sena_desarrollo/src/@fake-db/db/academy-db.js"],"names":["_","blueGrey","mock","demoSteps","id","title","content","academyDB","categories","value","label","color","amber","courses","slug","description","category","length","totalSteps","activeStep","updated","steps","onGet","reply","map","_course","omit","request","courseId","params","response","find","onPost","data","JSON","parse","course","merge"],"mappings":"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","sourcesContent":["import _ from '@lodash';\nimport { blueGrey } from '@material-ui/core/colors';\nimport mock from '../mock';\n\nconst demoSteps = [\n\t{\n\t\tid: '0',\n\t\ttitle: 'Creacion Grupo de aprendizaje',\n\t\tcontent:\n\t\t\t'<h1>Momento 1 - Vamos a crear Grupo de aprendizaje de studiantes del Sena GAES</h1>' \n\t},\n\t{\n\t\tid: '1',\n\t\ttitle: 'Tipo de Empresa',\n\t\tcontent:\n\t\t\t'<h1>Momento 2 - Vamos a crear tu Empresa</h1>' +\n\t\t\t'<br>'\n\t},\n\t{\n\t\tid: '2',\n\t\ttitle: 'Como se llamara tu Empresa',\n\t\tcontent:\n\t\t\t'<h1>Momento 3 - Vamos a crear tu Empresa</h1>' +\n\t\t\t'<br>'\n\t},\n];\n\nconst academyDB = {\n\tcategories: [\n\t\t{\n\t\t\tid: 0,\n\t\t\tvalue: 'servicios',\n\t\t\tlabel: 'servicios mercadeo',\n\t\t\tcolor: blueGrey[500]\n\t\t},\n\t\t{\n\t\t\tid: 1,\n\t\t\tvalue: 'firebase',\n\t\t\tlabel: 'servicios mercadeo2',\n\t\t\tcolor: amber[500]\n\t\t}\n\t],\n\tcourses: [\n\t\t{\n\t\t\tid: '0123456789',\n\t\t\ttitle: 'Tonly S.A.S',\n\t\t\tslug: 'basics-of-typeScript',\n\t\t\tdescription: 'Commits that need to be pushed lorem ipsum dolor sit amet, consectetur adipiscing elit.',\n\t\t\tcategory: 'servicios',\n\t\t\tlength: 0,\n\t\t\ttotalSteps: 6,\n\t\t\tactiveStep: 0,\n\t\t\tupdated: 'Nov 01, 2017',\n\t\t\tsteps: demoSteps\n\t\t},\n\t\t{\n\t\t\tid: '0123456790',\n\t\t\ttitle: 'Mango System S.A.S',\n\t\t\tslug: 'basics-of-typeScript',\n\t\t\tdescription: 'Commits that need to be pushed lorem ipsum dolor sit amet, consectetur adipiscing elit.',\n\t\t\tcategory: 'servicios',\n\t\t\tlength: 0,\n\t\t\ttotalSteps: 6,\n\t\t\tactiveStep: 0,\n\t\t\tupdated: 'Nov 01, 2020',\n\t\t\tsteps: demoSteps\n\t\t}\n\t]\n};\n\nmock.onGet('/api/academy-app/categories').reply(() => {\n\treturn [200, academyDB.categories];\n});\n\nmock.onGet('/api/academy-app/courses').reply(() => {\n\treturn [200, academyDB.courses.map(_course => _.omit(_course, ['steps']))];\n});\n\nmock.onGet('/api/academy-app/course').reply(request => {\n\tconst { courseId } = request.params;\n\tconst response = _.find(academyDB.courses, { id: courseId });\n\treturn [200, response];\n});\n\n mock.onPost('/api/academy-app/course/save').reply(request => {\n\tconst data = JSON.parse(request.data);\n\tlet course = null;\n\n\tacademyDB.courses = academyDB.courses.map(_course => {\n\t\tif (_course.id === data.id) {\n\t\t\tcourse = data;\n\t\t\treturn course;\n\t\t}\n\t\treturn _course;\n\t});\n\n\tif (!course) {\n\t\tcourse = data;\n\t\tacademyDB.courses = [...academyDB.courses, course];\n\t}\n\n\treturn [200, course];\n}); \n\n mock.onPost('/api/academy-app/course/update').reply(request => {\n\tconst data = JSON.parse(request.data);\n\tacademyDB.courses = academyDB.courses.map(_course => {\n\t\tif (_course.id === data.id) {\n\t\t\treturn _.merge(_course, data);\n\t\t}\n\t\treturn _course;\n\t});\n\n\treturn [200, data];\n}); \n"]},"metadata":{},"sourceType":"module"}