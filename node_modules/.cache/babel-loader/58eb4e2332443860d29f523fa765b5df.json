{"ast":null,"code":"import { createSlice, createAsyncThunk, createEntityAdapter } from '@reduxjs/toolkit';\nimport axios from 'axios';\nexport const getProducts = createAsyncThunk('eCommerceApp/products/getProducts', async () => {\n  const response = await axios.get('/api/e-commerce-app/products');\n  const data = await response.data;\n  return data;\n});\nconst productsAdapter = createEntityAdapter({});\nexport const {\n  selectAll: selectProducts,\n  selectById: selectProductById\n} = productsAdapter.getSelectors(state => state.eCommerceApp.products);\nconst productsSlice = createSlice({\n  name: 'eCommerceApp/products',\n  initialState: productsAdapter.getInitialState({\n    searchText: ''\n  }),\n  reducers: {\n    setProductsSearchText: {\n      reducer: (state, action) => {\n        state.searchText = action.payload;\n      },\n      prepare: event => ({\n        payload: event.target.value || ''\n      })\n    }\n  },\n  extraReducers: {\n    [getProducts.fulfilled]: productsAdapter.setAll\n  }\n});\nexport const {\n  setProductsSearchText\n} = productsSlice.actions;\nexport default productsSlice.reducer;","map":{"version":3,"sources":["D:/proyectos_react/Proyecto_sena/src/app/main/apps/e-commerce/store/productsSlice.js"],"names":["createSlice","createAsyncThunk","createEntityAdapter","axios","getProducts","response","get","data","productsAdapter","selectAll","selectProducts","selectById","selectProductById","getSelectors","state","eCommerceApp","products","productsSlice","name","initialState","getInitialState","searchText","reducers","setProductsSearchText","reducer","action","payload","prepare","event","target","value","extraReducers","fulfilled","setAll","actions"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,gBAAtB,EAAwCC,mBAAxC,QAAmE,kBAAnE;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,WAAW,GAAGH,gBAAgB,CAAC,mCAAD,EAAsC,YAAY;AAC5F,QAAMI,QAAQ,GAAG,MAAMF,KAAK,CAACG,GAAN,CAAU,8BAAV,CAAvB;AACA,QAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAA5B;AAEA,SAAOA,IAAP;AACA,CAL0C,CAApC;AAOP,MAAMC,eAAe,GAAGN,mBAAmB,CAAC,EAAD,CAA3C;AAEA,OAAO,MAAM;AAAEO,EAAAA,SAAS,EAAEC,cAAb;AAA6BC,EAAAA,UAAU,EAAEC;AAAzC,IAA+DJ,eAAe,CAACK,YAAhB,CAC3EC,KAAK,IAAIA,KAAK,CAACC,YAAN,CAAmBC,QAD+C,CAArE;AAIP,MAAMC,aAAa,GAAGjB,WAAW,CAAC;AACjCkB,EAAAA,IAAI,EAAE,uBAD2B;AAEjCC,EAAAA,YAAY,EAAEX,eAAe,CAACY,eAAhB,CAAgC;AAC7CC,IAAAA,UAAU,EAAE;AADiC,GAAhC,CAFmB;AAKjCC,EAAAA,QAAQ,EAAE;AACTC,IAAAA,qBAAqB,EAAE;AACtBC,MAAAA,OAAO,EAAE,CAACV,KAAD,EAAQW,MAAR,KAAmB;AAC3BX,QAAAA,KAAK,CAACO,UAAN,GAAmBI,MAAM,CAACC,OAA1B;AACA,OAHqB;AAItBC,MAAAA,OAAO,EAAEC,KAAK,KAAK;AAAEF,QAAAA,OAAO,EAAEE,KAAK,CAACC,MAAN,CAAaC,KAAb,IAAsB;AAAjC,OAAL;AAJQ;AADd,GALuB;AAajCC,EAAAA,aAAa,EAAE;AACd,KAAC3B,WAAW,CAAC4B,SAAb,GAAyBxB,eAAe,CAACyB;AAD3B;AAbkB,CAAD,CAAjC;AAkBA,OAAO,MAAM;AAAEV,EAAAA;AAAF,IAA4BN,aAAa,CAACiB,OAAhD;AAEP,eAAejB,aAAa,CAACO,OAA7B","sourcesContent":["import { createSlice, createAsyncThunk, createEntityAdapter } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\nexport const getProducts = createAsyncThunk('eCommerceApp/products/getProducts', async () => {\n\tconst response = await axios.get('/api/e-commerce-app/products');\n\tconst data = await response.data;\n\n\treturn data;\n});\n\nconst productsAdapter = createEntityAdapter({});\n\nexport const { selectAll: selectProducts, selectById: selectProductById } = productsAdapter.getSelectors(\n\tstate => state.eCommerceApp.products\n);\n\nconst productsSlice = createSlice({\n\tname: 'eCommerceApp/products',\n\tinitialState: productsAdapter.getInitialState({\n\t\tsearchText: ''\n\t}),\n\treducers: {\n\t\tsetProductsSearchText: {\n\t\t\treducer: (state, action) => {\n\t\t\t\tstate.searchText = action.payload;\n\t\t\t},\n\t\t\tprepare: event => ({ payload: event.target.value || '' })\n\t\t}\n\t},\n\textraReducers: {\n\t\t[getProducts.fulfilled]: productsAdapter.setAll\n\t}\n});\n\nexport const { setProductsSearchText } = productsSlice.actions;\n\nexport default productsSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}