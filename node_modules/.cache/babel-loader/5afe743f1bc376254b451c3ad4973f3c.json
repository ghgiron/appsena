{"ast":null,"code":"var _jsxFileName = \"D:\\\\proyectos_react\\\\Proyecto_sena\\\\src\\\\app\\\\main\\\\documentation\\\\configuration\\\\multi-language\\\\MultiLanguageDoc.js\";\nimport FuseHighlight from '@fuse/core/FuseHighlight';\nimport Typography from '@material-ui/core/Typography';\nimport React from 'react';\n/* eslint import/no-webpack-loader-syntax: off */\n\nfunction MultiLanguageDoc() {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h4\",\n    className: \"mb-24\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 4\n    }\n  }, \"Multi Language\"), /*#__PURE__*/React.createElement(Typography, {\n    className: \"mb-16\",\n    component: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 4\n    }\n  }, \"Fuse React uses\", ' ', /*#__PURE__*/React.createElement(\"a\", {\n    href: \"https://react.i18next.com/\",\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 6\n    }\n  }, \"react-i18next\")), ' ', \"for to support multiple languages.\"), /*#__PURE__*/React.createElement(Typography, {\n    className: \"mb-16 p-16 border-1 bg-yellow-50 rounded-8 text-gray-800\",\n    component: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 4\n    }\n  }, \"Since not everybody need multi-language setup for their apps, we decided NOT to put translations everywhere. If you want to see the translations in action, visit the Mail app, and then change the language from the Toolbar. Mail app is the only app that has translations for demonstration purposes. You can look at its source code to see the usage.\"), /*#__PURE__*/React.createElement(Typography, {\n    className: \"mb-8\",\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 4\n    }\n  }, \"Usage\"), /*#__PURE__*/React.createElement(Typography, {\n    className: \"mb-16\",\n    component: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 4\n    }\n  }, \"In order to use the translations, create your translation file within the folder you want to use the translations. For example, for the Mail app, create \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 57\n    }\n  }, \"i18n/en.js\"), \" file inside the\", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, \"apps/mail\"), \" folder.\"), /*#__PURE__*/React.createElement(FuseHighlight, {\n    component: \"pre\",\n    className: \"language-jsx mb-24\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 4\n    }\n  }, require('!raw-loader!app/main/apps/mail/i18n/en.js')), /*#__PURE__*/React.createElement(Typography, {\n    className: \"mb-16\",\n    component: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 4\n    }\n  }, \"And register the language file with \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 41\n    }\n  }, \"i18next.addResourceBundle()\"), \" at\", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, \"src/app/main/apps/mail/MailAppConfig.js\")), /*#__PURE__*/React.createElement(FuseHighlight, {\n    component: \"pre\",\n    className: \"language-jsx mb-24\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 4\n    }\n  }, require('!raw-loader!app/main/apps/mail/MailAppConfig.js')), /*#__PURE__*/React.createElement(Typography, {\n    className: \"mb-16\",\n    component: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 4\n    }\n  }, \"And use in a component with \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 33\n    }\n  }, \"useTranslation\"), \" hook as below:\"), /*#__PURE__*/React.createElement(FuseHighlight, {\n    component: \"pre\",\n    className: \"language-jsx mb-24\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 4\n    }\n  }, `\n                        import {useTranslation} from 'react-i18next';\n\n                        const {t} = useTranslation('mailApp');\n                    \n                        return (\n                            <div className=\"p-24\">\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    className=\"w-full\"\n                                    onClick={handleOpenDialog}\n                                >\n                                    {t('COMPOSE')}\n                                </Button>\n                        `), /*#__PURE__*/React.createElement(Typography, {\n    className: \"mb-8\",\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 4\n    }\n  }, \"Changing Language\"), /*#__PURE__*/React.createElement(Typography, {\n    className: \"mb-16\",\n    component: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 4\n    }\n  }, \"You should use \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 20\n    }\n  }, \"changeLanguage\"), \" redux action to change language:\"), /*#__PURE__*/React.createElement(FuseHighlight, {\n    component: \"pre\",\n    className: \"language-jsx mb-24\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 4\n    }\n  }, `\n                           import { changeLanguage } from 'app/store/i18nSlice';\n\n                            .\n                            .\n\n                            dispatch(changeLanguage(lng.id));\n                        `), /*#__PURE__*/React.createElement(Typography, {\n    className: \"mb-16\",\n    component: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 4\n    }\n  }, \"Checkout example usage at\", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 5\n    }\n  }, \"src/app/fuse-layouts/shared-components/LanguageSwitcher.js\")));\n}\n\nexport default MultiLanguageDoc;","map":{"version":3,"sources":["D:/proyectos_react/Proyecto_sena/src/app/main/documentation/configuration/multi-language/MultiLanguageDoc.js"],"names":["FuseHighlight","Typography","React","MultiLanguageDoc","require"],"mappings":"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","sourcesContent":["import FuseHighlight from '@fuse/core/FuseHighlight';\nimport Typography from '@material-ui/core/Typography';\nimport React from 'react';\n\n/* eslint import/no-webpack-loader-syntax: off */\n\nfunction MultiLanguageDoc() {\n\treturn (\n\t\t<>\n\t\t\t<Typography variant=\"h4\" className=\"mb-24\">\n\t\t\t\tMulti Language\n\t\t\t</Typography>\n\n\t\t\t<Typography className=\"mb-16\" component=\"p\">\n\t\t\t\tFuse React uses{' '}\n\t\t\t\t<a href=\"https://react.i18next.com/\" target=\"_blank\" rel=\"noopener noreferrer\">\n\t\t\t\t\t<code>react-i18next</code>\n\t\t\t\t</a>{' '}\n\t\t\t\tfor to support multiple languages.\n\t\t\t</Typography>\n\n\t\t\t<Typography className=\"mb-16 p-16 border-1 bg-yellow-50 rounded-8 text-gray-800\" component=\"p\">\n\t\t\t\tSince not everybody need multi-language setup for their apps, we decided NOT to put translations\n\t\t\t\teverywhere. If you want to see the translations in action, visit the Mail app, and then change the\n\t\t\t\tlanguage from the Toolbar. Mail app is the only app that has translations for demonstration purposes.\n\t\t\t\tYou can look at its source code to see the usage.\n\t\t\t</Typography>\n\n\t\t\t<Typography className=\"mb-8\" variant=\"h5\">\n\t\t\t\tUsage\n\t\t\t</Typography>\n\n\t\t\t<Typography className=\"mb-16\" component=\"p\">\n\t\t\t\tIn order to use the translations, create your translation file within the folder you want to use the\n\t\t\t\ttranslations. For example, for the Mail app, create <code>i18n/en.js</code> file inside the\n\t\t\t\t<code>apps/mail</code> folder.\n\t\t\t</Typography>\n\n\t\t\t<FuseHighlight component=\"pre\" className=\"language-jsx mb-24\">\n\t\t\t\t{require('!raw-loader!app/main/apps/mail/i18n/en.js')}\n\t\t\t</FuseHighlight>\n\n\t\t\t<Typography className=\"mb-16\" component=\"p\">\n\t\t\t\tAnd register the language file with <code>i18next.addResourceBundle()</code> at\n\t\t\t\t<code>src/app/main/apps/mail/MailAppConfig.js</code>\n\t\t\t</Typography>\n\n\t\t\t<FuseHighlight component=\"pre\" className=\"language-jsx mb-24\">\n\t\t\t\t{require('!raw-loader!app/main/apps/mail/MailAppConfig.js')}\n\t\t\t</FuseHighlight>\n\n\t\t\t<Typography className=\"mb-16\" component=\"p\">\n\t\t\t\tAnd use in a component with <code>useTranslation</code> hook as below:\n\t\t\t</Typography>\n\n\t\t\t<FuseHighlight component=\"pre\" className=\"language-jsx mb-24\">\n\t\t\t\t{`\n                        import {useTranslation} from 'react-i18next';\n\n                        const {t} = useTranslation('mailApp');\n                    \n                        return (\n                            <div className=\"p-24\">\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    className=\"w-full\"\n                                    onClick={handleOpenDialog}\n                                >\n                                    {t('COMPOSE')}\n                                </Button>\n                        `}\n\t\t\t</FuseHighlight>\n\n\t\t\t<Typography className=\"mb-8\" variant=\"h5\">\n\t\t\t\tChanging Language\n\t\t\t</Typography>\n\n\t\t\t<Typography className=\"mb-16\" component=\"p\">\n\t\t\t\tYou should use <code>changeLanguage</code> redux action to change language:\n\t\t\t</Typography>\n\n\t\t\t<FuseHighlight component=\"pre\" className=\"language-jsx mb-24\">\n\t\t\t\t{`\n                           import { changeLanguage } from 'app/store/i18nSlice';\n\n                            .\n                            .\n\n                            dispatch(changeLanguage(lng.id));\n                        `}\n\t\t\t</FuseHighlight>\n\n\t\t\t<Typography className=\"mb-16\" component=\"p\">\n\t\t\t\tCheckout example usage at\n\t\t\t\t<code>src/app/fuse-layouts/shared-components/LanguageSwitcher.js</code>\n\t\t\t</Typography>\n\t\t</>\n\t);\n}\n\nexport default MultiLanguageDoc;\n"]},"metadata":{},"sourceType":"module"}