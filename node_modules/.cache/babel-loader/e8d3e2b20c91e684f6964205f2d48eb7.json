{"ast":null,"code":"var _jsxFileName = \"D:\\\\proyectos_react\\\\Proyecto_sena\\\\src\\\\app\\\\main\\\\documentation\\\\material-ui-components\\\\components\\\\snackbars\\\\DirectionSnackbar.js\";\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Slide from '@material-ui/core/Slide';\n\nfunction TransitionLeft(props) {\n  return /*#__PURE__*/React.createElement(Slide, Object.assign({}, props, {\n    direction: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 10\n    }\n  }));\n}\n\nfunction TransitionUp(props) {\n  return /*#__PURE__*/React.createElement(Slide, Object.assign({}, props, {\n    direction: \"up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 10\n    }\n  }));\n}\n\nfunction TransitionRight(props) {\n  return /*#__PURE__*/React.createElement(Slide, Object.assign({}, props, {\n    direction: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 10\n    }\n  }));\n}\n\nfunction TransitionDown(props) {\n  return /*#__PURE__*/React.createElement(Slide, Object.assign({}, props, {\n    direction: \"down\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 10\n    }\n  }));\n}\n\nexport default function DirectionSnackbar() {\n  const [open, setOpen] = React.useState(false);\n  const [transition, setTransition] = React.useState(undefined);\n\n  const handleClick = Transition => () => {\n    setTransition(() => Transition);\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClick(TransitionLeft),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, \"Right\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClick(TransitionUp),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, \"Up\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClick(TransitionRight),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, \"Left\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClick(TransitionDown),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, \"Down\"), /*#__PURE__*/React.createElement(Snackbar, {\n    open: open,\n    onClose: handleClose,\n    TransitionComponent: transition,\n    message: \"I love snacks\",\n    key: transition ? transition.name : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["D:/proyectos_react/Proyecto_sena/src/app/main/documentation/material-ui-components/components/snackbars/DirectionSnackbar.js"],"names":["React","Button","Snackbar","Slide","TransitionLeft","props","TransitionUp","TransitionRight","TransitionDown","DirectionSnackbar","open","setOpen","useState","transition","setTransition","undefined","handleClick","Transition","handleClose","name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;;AAEA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAC7B,sBAAO,oBAAC,KAAD,oBAAWA,KAAX;AAAkB,IAAA,SAAS,EAAC,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD;;AAED,SAASC,YAAT,CAAsBD,KAAtB,EAA6B;AAC3B,sBAAO,oBAAC,KAAD,oBAAWA,KAAX;AAAkB,IAAA,SAAS,EAAC,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD;;AAED,SAASE,eAAT,CAAyBF,KAAzB,EAAgC;AAC9B,sBAAO,oBAAC,KAAD,oBAAWA,KAAX;AAAkB,IAAA,SAAS,EAAC,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD;;AAED,SAASG,cAAT,CAAwBH,KAAxB,EAA+B;AAC7B,sBAAO,oBAAC,KAAD,oBAAWA,KAAX;AAAkB,IAAA,SAAS,EAAC,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD;;AAED,eAAe,SAASI,iBAAT,GAA6B;AAC1C,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,KAAK,CAACY,QAAN,CAAe,KAAf,CAAxB;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8Bd,KAAK,CAACY,QAAN,CAAeG,SAAf,CAApC;;AAEA,QAAMC,WAAW,GAAIC,UAAD,IAAgB,MAAM;AACxCH,IAAAA,aAAa,CAAC,MAAMG,UAAP,CAAb;AACAN,IAAAA,OAAO,CAAC,IAAD,CAAP;AACD,GAHD;;AAKA,QAAMO,WAAW,GAAG,MAAM;AACxBP,IAAAA,OAAO,CAAC,KAAD,CAAP;AACD,GAFD;;AAIA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEK,WAAW,CAACZ,cAAD,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAEE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEY,WAAW,CAACV,YAAD,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF,eAGE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEU,WAAW,CAACT,eAAD,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAES,WAAW,CAACR,cAAD,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE,oBAAC,QAAD;AACE,IAAA,IAAI,EAAEE,IADR;AAEE,IAAA,OAAO,EAAEQ,WAFX;AAGE,IAAA,mBAAmB,EAAEL,UAHvB;AAIE,IAAA,OAAO,EAAC,eAJV;AAKE,IAAA,GAAG,EAAEA,UAAU,GAAGA,UAAU,CAACM,IAAd,GAAqB,EALtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF;AAeD","sourcesContent":["import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Slide from '@material-ui/core/Slide';\n\nfunction TransitionLeft(props) {\n  return <Slide {...props} direction=\"left\" />;\n}\n\nfunction TransitionUp(props) {\n  return <Slide {...props} direction=\"up\" />;\n}\n\nfunction TransitionRight(props) {\n  return <Slide {...props} direction=\"right\" />;\n}\n\nfunction TransitionDown(props) {\n  return <Slide {...props} direction=\"down\" />;\n}\n\nexport default function DirectionSnackbar() {\n  const [open, setOpen] = React.useState(false);\n  const [transition, setTransition] = React.useState(undefined);\n\n  const handleClick = (Transition) => () => {\n    setTransition(() => Transition);\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Button onClick={handleClick(TransitionLeft)}>Right</Button>\n      <Button onClick={handleClick(TransitionUp)}>Up</Button>\n      <Button onClick={handleClick(TransitionRight)}>Left</Button>\n      <Button onClick={handleClick(TransitionDown)}>Down</Button>\n      <Snackbar\n        open={open}\n        onClose={handleClose}\n        TransitionComponent={transition}\n        message=\"I love snacks\"\n        key={transition ? transition.name : ''}\n      />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}