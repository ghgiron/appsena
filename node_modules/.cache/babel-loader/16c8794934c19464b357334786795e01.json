{"ast":null,"code":"var _jsxFileName = \"D:\\\\proyectos_react\\\\Proyecto_sena\\\\src\\\\app\\\\main\\\\apps\\\\notes\\\\dialogs\\\\note\\\\NoteDialog.js\";\nimport { useDebounce } from '@fuse/hooks';\nimport Dialog from '@material-ui/core/Dialog';\nimport Slide from '@material-ui/core/Slide';\nimport NoteForm from 'app/main/apps/notes/note-form/NoteForm';\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { closeNoteDialog, removeNote, updateNote } from '../../store/notesSlice';\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return /*#__PURE__*/React.createElement(Slide, Object.assign({\n    direction: \"up\",\n    ref: ref\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }\n  }));\n});\n\nfunction NoteDialog(props) {\n  const dispatch = useDispatch();\n  const notes = useSelector(({\n    notesApp\n  }) => notesApp.notes);\n  const handleOnChange = useDebounce(note => {\n    dispatch(updateNote(note));\n  }, 600);\n\n  function handleOnRemove() {\n    dispatch(removeNote(notes.noteDialogId));\n  }\n\n  if (!notes.entities) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(Dialog, {\n    classes: {\n      paper: 'w-full m-24 rounded-8'\n    },\n    TransitionComponent: Transition,\n    onClose: ev => dispatch(closeNoteDialog()),\n    open: Boolean(notes.noteDialogId),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(NoteForm, {\n    note: notes.entities[notes.noteDialogId],\n    onChange: handleOnChange,\n    onClose: ev => dispatch(closeNoteDialog()),\n    onRemove: handleOnRemove,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 4\n    }\n  }));\n}\n\nexport default NoteDialog;","map":{"version":3,"sources":["D:/proyectos_react/Proyecto_sena/src/app/main/apps/notes/dialogs/note/NoteDialog.js"],"names":["useDebounce","Dialog","Slide","NoteForm","React","useDispatch","useSelector","closeNoteDialog","removeNote","updateNote","Transition","forwardRef","props","ref","NoteDialog","dispatch","notes","notesApp","handleOnChange","note","handleOnRemove","noteDialogId","entities","paper","ev","Boolean"],"mappings":";AAAA,SAASA,WAAT,QAA4B,aAA5B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,QAAP,MAAqB,wCAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,eAAT,EAA0BC,UAA1B,EAAsCC,UAAtC,QAAwD,wBAAxD;AAEA,MAAMC,UAAU,GAAGN,KAAK,CAACO,UAAN,CAAiB,SAASD,UAAT,CAAoBE,KAApB,EAA2BC,GAA3B,EAAgC;AACnE,sBAAO,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAC,IAAjB;AAAsB,IAAA,GAAG,EAAEA;AAA3B,KAAoCD,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACA,CAFkB,CAAnB;;AAIA,SAASE,UAAT,CAAoBF,KAApB,EAA2B;AAC1B,QAAMG,QAAQ,GAAGV,WAAW,EAA5B;AACA,QAAMW,KAAK,GAAGV,WAAW,CAAC,CAAC;AAAEW,IAAAA;AAAF,GAAD,KAAkBA,QAAQ,CAACD,KAA5B,CAAzB;AAEA,QAAME,cAAc,GAAGlB,WAAW,CAACmB,IAAI,IAAI;AAC1CJ,IAAAA,QAAQ,CAACN,UAAU,CAACU,IAAD,CAAX,CAAR;AACA,GAFiC,EAE/B,GAF+B,CAAlC;;AAIA,WAASC,cAAT,GAA0B;AACzBL,IAAAA,QAAQ,CAACP,UAAU,CAACQ,KAAK,CAACK,YAAP,CAAX,CAAR;AACA;;AAED,MAAI,CAACL,KAAK,CAACM,QAAX,EAAqB;AACpB,WAAO,IAAP;AACA;;AAED,sBACC,oBAAC,MAAD;AACC,IAAA,OAAO,EAAE;AACRC,MAAAA,KAAK,EAAE;AADC,KADV;AAIC,IAAA,mBAAmB,EAAEb,UAJtB;AAKC,IAAA,OAAO,EAAEc,EAAE,IAAIT,QAAQ,CAACR,eAAe,EAAhB,CALxB;AAMC,IAAA,IAAI,EAAEkB,OAAO,CAACT,KAAK,CAACK,YAAP,CANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAQC,oBAAC,QAAD;AACC,IAAA,IAAI,EAAEL,KAAK,CAACM,QAAN,CAAeN,KAAK,CAACK,YAArB,CADP;AAEC,IAAA,QAAQ,EAAEH,cAFX;AAGC,IAAA,OAAO,EAAEM,EAAE,IAAIT,QAAQ,CAACR,eAAe,EAAhB,CAHxB;AAIC,IAAA,QAAQ,EAAEa,cAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARD,CADD;AAiBA;;AAED,eAAeN,UAAf","sourcesContent":["import { useDebounce } from '@fuse/hooks';\nimport Dialog from '@material-ui/core/Dialog';\nimport Slide from '@material-ui/core/Slide';\nimport NoteForm from 'app/main/apps/notes/note-form/NoteForm';\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { closeNoteDialog, removeNote, updateNote } from '../../store/notesSlice';\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n\treturn <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nfunction NoteDialog(props) {\n\tconst dispatch = useDispatch();\n\tconst notes = useSelector(({ notesApp }) => notesApp.notes);\n\n\tconst handleOnChange = useDebounce(note => {\n\t\tdispatch(updateNote(note));\n\t}, 600);\n\n\tfunction handleOnRemove() {\n\t\tdispatch(removeNote(notes.noteDialogId));\n\t}\n\n\tif (!notes.entities) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<Dialog\n\t\t\tclasses={{\n\t\t\t\tpaper: 'w-full m-24 rounded-8'\n\t\t\t}}\n\t\t\tTransitionComponent={Transition}\n\t\t\tonClose={ev => dispatch(closeNoteDialog())}\n\t\t\topen={Boolean(notes.noteDialogId)}\n\t\t>\n\t\t\t<NoteForm\n\t\t\t\tnote={notes.entities[notes.noteDialogId]}\n\t\t\t\tonChange={handleOnChange}\n\t\t\t\tonClose={ev => dispatch(closeNoteDialog())}\n\t\t\t\tonRemove={handleOnRemove}\n\t\t\t/>\n\t\t</Dialog>\n\t);\n}\n\nexport default NoteDialog;\n"]},"metadata":{},"sourceType":"module"}