{"ast":null,"code":"import FuseUtils from '@fuse/utils/FuseUtils';\nimport axios from 'axios';\nimport jwtDecode from 'jwt-decode';\n/* eslint-disable camelcase */\n\nclass JwtService extends FuseUtils.EventEmitter {\n  constructor(...args) {\n    super(...args);\n\n    this.setInterceptors = () => {\n      axios.interceptors.response.use(response => {\n        return response;\n      }, err => {\n        return new Promise((resolve, reject) => {\n          if (err.response.status === 401 && err.config && !err.config.__isRetryRequest) {\n            // if you ever get an unauthorized response, logout the user\n            this.emit('onAutoLogout', 'Invalid access_token');\n            this.setSession(null);\n          }\n\n          throw err;\n        });\n      });\n    };\n\n    this.handleAuthentication = () => {\n      const access_token = this.getAccessToken();\n\n      if (!access_token) {\n        this.emit('onNoAccessToken');\n        return;\n      }\n\n      if (this.isAuthTokenValid(access_token)) {\n        this.setSession(access_token);\n        this.emit('onAutoLogin', true);\n      } else {\n        this.setSession(null);\n        this.emit('onAutoLogout', 'access_token expired');\n      }\n    };\n\n    this.createUser = data => {\n      return new Promise((resolve, reject) => {\n        axios.post('/api/auth/register', data).then(response => {\n          if (response.data.user) {\n            this.setSession(response.data.access_token);\n            resolve(response.data.user);\n          } else {\n            reject(response.data.error);\n          }\n        });\n      });\n    };\n\n    this.signInWithEmailAndPassword = (email, password) => {\n      return new Promise((resolve, reject) => {\n        axios.get('/api/auth', {\n          data: {\n            email,\n            password\n          }\n        }).then(response => {\n          if (response.data.user) {\n            this.setSession(response.data.access_token);\n            resolve(response.data.user);\n          } else {\n            reject(response.data.error);\n          }\n        });\n      });\n    };\n\n    this.signInWithToken = () => {\n      return new Promise((resolve, reject) => {\n        axios.get('/api/auth/access-token', {\n          data: {\n            access_token: this.getAccessToken()\n          }\n        }).then(response => {\n          if (response.data.user) {\n            this.setSession(response.data.access_token);\n            resolve(response.data.user);\n          } else {\n            this.logout();\n            reject(new Error('Failed to login with token.'));\n          }\n        }).catch(error => {\n          this.logout();\n          reject(new Error('Failed to login with token.'));\n        });\n      });\n    };\n\n    this.updateUserData = user => {\n      return axios.post('/api/auth/user/update', {\n        user\n      });\n    };\n\n    this.setSession = access_token => {\n      if (access_token) {\n        sesionStorage.setItem('jwt_access_token', access_token);\n        axios.defaults.headers.common.Authorization = `Bearer ${access_token}`;\n      } else {\n        sesionStorage.removeItem('jwt_access_token');\n        delete axios.defaults.headers.common.Authorization;\n      }\n    };\n\n    this.logout = () => {\n      this.setSession(null);\n    };\n\n    this.isAuthTokenValid = access_token => {\n      if (!access_token) {\n        return false;\n      }\n\n      const decoded = jwtDecode(access_token);\n      const currentTime = Date.now() / 1000;\n\n      if (decoded.exp < currentTime) {\n        console.warn('access token expired');\n        return false;\n      }\n\n      return true;\n    };\n\n    this.getAccessToken = () => {\n      return window.sesionStorage.getItem('jwt_access_token');\n    };\n  }\n\n  init() {\n    this.setInterceptors();\n    this.handleAuthentication();\n  }\n\n}\n\nconst instance = new JwtService();\nexport default instance;","map":{"version":3,"sources":["D:/proyectos_react/Proyecto_sena_desarrollo/src/app/services/jwtService/jwtService.js"],"names":["FuseUtils","axios","jwtDecode","JwtService","EventEmitter","setInterceptors","interceptors","response","use","err","Promise","resolve","reject","status","config","__isRetryRequest","emit","setSession","handleAuthentication","access_token","getAccessToken","isAuthTokenValid","createUser","data","post","then","user","error","signInWithEmailAndPassword","email","password","get","signInWithToken","logout","Error","catch","updateUserData","sesionStorage","setItem","defaults","headers","common","Authorization","removeItem","decoded","currentTime","Date","now","exp","console","warn","window","getItem","init","instance"],"mappings":"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","sourcesContent":["import FuseUtils from '@fuse/utils/FuseUtils';\nimport axios from 'axios';\nimport jwtDecode from 'jwt-decode';\n/* eslint-disable camelcase */\n\nclass JwtService extends FuseUtils.EventEmitter {\n\tinit() {\n\t\tthis.setInterceptors();\n\t\tthis.handleAuthentication();\n\t}\n\n\tsetInterceptors = () => {\n\t\taxios.interceptors.response.use(\n\t\t\tresponse => {\n\t\t\t\treturn response;\n\t\t\t},\n\t\t\terr => {\n\t\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\t\tif (err.response.status === 401 && err.config && !err.config.__isRetryRequest) {\n\t\t\t\t\t\t// if you ever get an unauthorized response, logout the user\n\t\t\t\t\t\tthis.emit('onAutoLogout', 'Invalid access_token');\n\t\t\t\t\t\tthis.setSession(null);\n\t\t\t\t\t}\n\t\t\t\t\tthrow err;\n\t\t\t\t});\n\t\t\t}\n\t\t);\n\t};\n\n\thandleAuthentication = () => {\n\t\tconst access_token = this.getAccessToken();\n\n\t\tif (!access_token) {\n\t\t\tthis.emit('onNoAccessToken');\n\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.isAuthTokenValid(access_token)) {\n\t\t\tthis.setSession(access_token);\n\t\t\tthis.emit('onAutoLogin', true);\n\t\t} else {\n\t\t\tthis.setSession(null);\n\t\t\tthis.emit('onAutoLogout', 'access_token expired');\n\t\t}\n\t};\n\n\tcreateUser = data => {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\taxios.post('/api/auth/register', data).then(response => {\n\t\t\t\tif (response.data.user) {\n\t\t\t\t\tthis.setSession(response.data.access_token);\n\t\t\t\t\tresolve(response.data.user);\n\t\t\t\t} else {\n\t\t\t\t\treject(response.data.error);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t};\n\n\tsignInWithEmailAndPassword = (email, password) => {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\taxios.get('/api/auth', {\n\t\t\t\t\tdata: {\n\t\t\t\t\t\temail,\n\t\t\t\t\t\tpassword\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.then(response => {\n\t\t\t\t\tif (response.data.user) {\n\t\t\t\t\t\tthis.setSession(response.data.access_token);\n\t\t\t\t\t\tresolve(response.data.user);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treject(response.data.error);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t});\n\t};\n\n\tsignInWithToken = () => {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\taxios\n\t\t\t\t.get('/api/auth/access-token', {\n\t\t\t\t\tdata: {\n\t\t\t\t\t\taccess_token: this.getAccessToken()\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.then(response => {\n\t\t\t\t\tif (response.data.user) {\n\t\t\t\t\t\tthis.setSession(response.data.access_token);\n\t\t\t\t\t\tresolve(response.data.user);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.logout();\n\t\t\t\t\t\treject(new Error('Failed to login with token.'));\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.catch(error => {\n\t\t\t\t\tthis.logout();\n\t\t\t\t\treject(new Error('Failed to login with token.'));\n\t\t\t\t});\n\t\t});\n\t};\n\n\tupdateUserData = user => {\n\t\treturn axios.post('/api/auth/user/update', {\n\t\t\tuser\n\t\t});\n\t};\n\n\tsetSession = access_token => {\n\t\tif (access_token) {\n\t\t\tsesionStorage.setItem('jwt_access_token', access_token);\n\t\t\taxios.defaults.headers.common.Authorization = `Bearer ${access_token}`;\n\t\t} else {\n\t\t\tsesionStorage.removeItem('jwt_access_token');\n\t\t\tdelete axios.defaults.headers.common.Authorization;\n\t\t}\n\t};\n\n\tlogout = () => {\n\t\tthis.setSession(null);\n\t};\n\n\tisAuthTokenValid = access_token => {\n\t\tif (!access_token) {\n\t\t\treturn false;\n\t\t}\n\t\tconst decoded = jwtDecode(access_token);\n\t\tconst currentTime = Date.now() / 1000;\n\t\tif (decoded.exp < currentTime) {\n\t\t\tconsole.warn('access token expired');\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t};\n\n\tgetAccessToken = () => {\n\t\treturn window.sesionStorage.getItem('jwt_access_token');\n\t};\n}\n\nconst instance = new JwtService();\n\nexport default instance;\n"]},"metadata":{},"sourceType":"module"}