{"ast":null,"code":"var _jsxFileName = \"D:\\\\proyectos_react\\\\Proyecto_sena\\\\src\\\\app\\\\main\\\\documentation\\\\material-ui-components\\\\components\\\\autocomplete\\\\GitHubLabel.js\";\n\n/* eslint-disable no-use-before-define */\nimport React from 'react';\nimport { useTheme, fade, makeStyles } from '@material-ui/core/styles';\nimport Popper from '@material-ui/core/Popper';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport CloseIcon from '@material-ui/icons/Close';\nimport DoneIcon from '@material-ui/icons/Done';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport ButtonBase from '@material-ui/core/ButtonBase';\nimport InputBase from '@material-ui/core/InputBase';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: 221,\n    fontSize: 13\n  },\n  button: {\n    fontSize: 13,\n    width: '100%',\n    textAlign: 'left',\n    paddingBottom: 8,\n    color: '#586069',\n    fontWeight: 600,\n    '&:hover,&:focus': {\n      color: '#0366d6'\n    },\n    '& span': {\n      width: '100%'\n    },\n    '& svg': {\n      width: 16,\n      height: 16\n    }\n  },\n  tag: {\n    marginTop: 3,\n    height: 20,\n    padding: '.15em 4px',\n    fontWeight: 600,\n    lineHeight: '15px',\n    borderRadius: 2\n  },\n  popper: {\n    border: '1px solid rgba(27,31,35,.15)',\n    boxShadow: '0 3px 12px rgba(27,31,35,.15)',\n    borderRadius: 3,\n    width: 300,\n    zIndex: 1,\n    fontSize: 13,\n    color: '#586069',\n    backgroundColor: '#f6f8fa'\n  },\n  header: {\n    borderBottom: '1px solid #e1e4e8',\n    padding: '8px 10px',\n    fontWeight: 600\n  },\n  inputBase: {\n    padding: 10,\n    width: '100%',\n    borderBottom: '1px solid #dfe2e5',\n    '& input': {\n      borderRadius: 4,\n      backgroundColor: theme.palette.common.white,\n      padding: 8,\n      transition: theme.transitions.create(['border-color', 'box-shadow']),\n      border: '1px solid #ced4da',\n      fontSize: 14,\n      '&:focus': {\n        boxShadow: `${fade(theme.palette.primary.main, 0.25)} 0 0 0 0.2rem`,\n        borderColor: theme.palette.primary.main\n      }\n    }\n  },\n  paper: {\n    boxShadow: 'none',\n    margin: 0,\n    color: '#586069',\n    fontSize: 13\n  },\n  option: {\n    minHeight: 'auto',\n    alignItems: 'flex-start',\n    padding: 8,\n    '&[aria-selected=\"true\"]': {\n      backgroundColor: 'transparent'\n    },\n    '&[data-focus=\"true\"]': {\n      backgroundColor: theme.palette.action.hover\n    }\n  },\n  popperDisablePortal: {\n    position: 'relative'\n  },\n  iconSelected: {\n    width: 17,\n    height: 17,\n    marginRight: 5,\n    marginLeft: -2\n  },\n  color: {\n    width: 14,\n    height: 14,\n    flexShrink: 0,\n    borderRadius: 3,\n    marginRight: 8,\n    marginTop: 2\n  },\n  text: {\n    flexGrow: 1\n  },\n  close: {\n    opacity: 0.6,\n    width: 18,\n    height: 18\n  }\n}));\nexport default function GitHubLabel() {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [value, setValue] = React.useState([labels[1], labels[11]]);\n  const [pendingValue, setPendingValue] = React.useState([]);\n  const theme = useTheme();\n\n  const handleClick = event => {\n    setPendingValue(value);\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === 'toggleInput') {\n      return;\n    }\n\n    setValue(pendingValue);\n\n    if (anchorEl) {\n      anchorEl.focus();\n    }\n\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n  const id = open ? 'github-label' : undefined;\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ButtonBase, {\n    disableRipple: true,\n    className: classes.button,\n    \"aria-describedby\": id,\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 11\n    }\n  }, \"Labels\"), /*#__PURE__*/React.createElement(SettingsIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 11\n    }\n  })), value.map(label => /*#__PURE__*/React.createElement(\"div\", {\n    key: label.name,\n    className: classes.tag,\n    style: {\n      backgroundColor: label.color,\n      color: theme.palette.getContrastText(label.color)\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 11\n    }\n  }, label.name))), /*#__PURE__*/React.createElement(Popper, {\n    id: id,\n    open: open,\n    anchorEl: anchorEl,\n    placement: \"bottom-start\",\n    className: classes.popper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.header,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }\n  }, \"Apply labels to this pull request\"), /*#__PURE__*/React.createElement(Autocomplete, {\n    open: true,\n    onClose: handleClose,\n    multiple: true,\n    classes: {\n      paper: classes.paper,\n      option: classes.option,\n      popperDisablePortal: classes.popperDisablePortal\n    },\n    value: pendingValue,\n    onChange: (event, newValue) => {\n      setPendingValue(newValue);\n    },\n    disableCloseOnSelect: true,\n    disablePortal: true,\n    renderTags: () => null,\n    noOptionsText: \"No labels\",\n    renderOption: (option, {\n      selected\n    }) => /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(DoneIcon, {\n      className: classes.iconSelected,\n      style: {\n        visibility: selected ? 'visible' : 'hidden'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: classes.color,\n      style: {\n        backgroundColor: option.color\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.text,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 15\n      }\n    }, option.name, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 17\n      }\n    }), option.description), /*#__PURE__*/React.createElement(CloseIcon, {\n      className: classes.close,\n      style: {\n        visibility: selected ? 'visible' : 'hidden'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 15\n      }\n    })),\n    options: [...labels].sort((a, b) => {\n      // Display the selected labels first.\n      let ai = value.indexOf(a);\n      ai = ai === -1 ? value.length + labels.indexOf(a) : ai;\n      let bi = value.indexOf(b);\n      bi = bi === -1 ? value.length + labels.indexOf(b) : bi;\n      return ai - bi;\n    }),\n    getOptionLabel: option => option.name,\n    renderInput: params => /*#__PURE__*/React.createElement(InputBase, {\n      ref: params.InputProps.ref,\n      inputProps: params.inputProps,\n      autoFocus: true,\n      className: classes.inputBase,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 13\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 9\n    }\n  })));\n} // From https://github.com/abdonrd/github-labels\n\nconst labels = [{\n  name: 'good first issue',\n  color: '#7057ff',\n  description: 'Good for newcomers'\n}, {\n  name: 'help wanted',\n  color: '#008672',\n  description: 'Extra attention is needed'\n}, {\n  name: 'priority: critical',\n  color: '#b60205',\n  description: ''\n}, {\n  name: 'priority: high',\n  color: '#d93f0b',\n  description: ''\n}, {\n  name: 'priority: low',\n  color: '#0e8a16',\n  description: ''\n}, {\n  name: 'priority: medium',\n  color: '#fbca04',\n  description: ''\n}, {\n  name: \"status: can't reproduce\",\n  color: '#fec1c1',\n  description: ''\n}, {\n  name: 'status: confirmed',\n  color: '#215cea',\n  description: ''\n}, {\n  name: 'status: duplicate',\n  color: '#cfd3d7',\n  description: 'This issue or pull request already exists'\n}, {\n  name: 'status: needs information',\n  color: '#fef2c0',\n  description: ''\n}, {\n  name: 'status: wont do/fix',\n  color: '#eeeeee',\n  description: 'This will not be worked on'\n}, {\n  name: 'type: bug',\n  color: '#d73a4a',\n  description: \"Something isn't working\"\n}, {\n  name: 'type: discussion',\n  color: '#d4c5f9',\n  description: ''\n}, {\n  name: 'type: documentation',\n  color: '#006b75',\n  description: ''\n}, {\n  name: 'type: enhancement',\n  color: '#84b6eb',\n  description: ''\n}, {\n  name: 'type: epic',\n  color: '#3e4b9e',\n  description: 'A theme of work that contain sub-tasks'\n}, {\n  name: 'type: feature request',\n  color: '#fbca04',\n  description: 'New feature or request'\n}, {\n  name: 'type: question',\n  color: '#d876e3',\n  description: 'Further information is requested'\n}];","map":{"version":3,"sources":["D:/proyectos_react/Proyecto_sena/src/app/main/documentation/material-ui-components/components/autocomplete/GitHubLabel.js"],"names":["React","useTheme","fade","makeStyles","Popper","SettingsIcon","CloseIcon","DoneIcon","Autocomplete","ButtonBase","InputBase","useStyles","theme","root","width","fontSize","button","textAlign","paddingBottom","color","fontWeight","height","tag","marginTop","padding","lineHeight","borderRadius","popper","border","boxShadow","zIndex","backgroundColor","header","borderBottom","inputBase","palette","common","white","transition","transitions","create","primary","main","borderColor","paper","margin","option","minHeight","alignItems","action","hover","popperDisablePortal","position","iconSelected","marginRight","marginLeft","flexShrink","text","flexGrow","close","opacity","GitHubLabel","classes","anchorEl","setAnchorEl","useState","value","setValue","labels","pendingValue","setPendingValue","handleClick","event","currentTarget","handleClose","reason","focus","open","Boolean","id","undefined","map","label","name","getContrastText","newValue","selected","visibility","description","sort","a","b","ai","indexOf","length","bi","params","InputProps","ref","inputProps"],"mappings":";;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,IAAnB,EAAyBC,UAAzB,QAA2C,0BAA3C;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AAEA,MAAMC,SAAS,GAAGR,UAAU,CAAES,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE,GADH;AAEJC,IAAAA,QAAQ,EAAE;AAFN,GADiC;AAKvCC,EAAAA,MAAM,EAAE;AACND,IAAAA,QAAQ,EAAE,EADJ;AAEND,IAAAA,KAAK,EAAE,MAFD;AAGNG,IAAAA,SAAS,EAAE,MAHL;AAINC,IAAAA,aAAa,EAAE,CAJT;AAKNC,IAAAA,KAAK,EAAE,SALD;AAMNC,IAAAA,UAAU,EAAE,GANN;AAON,uBAAmB;AACjBD,MAAAA,KAAK,EAAE;AADU,KAPb;AAUN,cAAU;AACRL,MAAAA,KAAK,EAAE;AADC,KAVJ;AAaN,aAAS;AACPA,MAAAA,KAAK,EAAE,EADA;AAEPO,MAAAA,MAAM,EAAE;AAFD;AAbH,GAL+B;AAuBvCC,EAAAA,GAAG,EAAE;AACHC,IAAAA,SAAS,EAAE,CADR;AAEHF,IAAAA,MAAM,EAAE,EAFL;AAGHG,IAAAA,OAAO,EAAE,WAHN;AAIHJ,IAAAA,UAAU,EAAE,GAJT;AAKHK,IAAAA,UAAU,EAAE,MALT;AAMHC,IAAAA,YAAY,EAAE;AANX,GAvBkC;AA+BvCC,EAAAA,MAAM,EAAE;AACNC,IAAAA,MAAM,EAAE,8BADF;AAENC,IAAAA,SAAS,EAAE,+BAFL;AAGNH,IAAAA,YAAY,EAAE,CAHR;AAINZ,IAAAA,KAAK,EAAE,GAJD;AAKNgB,IAAAA,MAAM,EAAE,CALF;AAMNf,IAAAA,QAAQ,EAAE,EANJ;AAONI,IAAAA,KAAK,EAAE,SAPD;AAQNY,IAAAA,eAAe,EAAE;AARX,GA/B+B;AAyCvCC,EAAAA,MAAM,EAAE;AACNC,IAAAA,YAAY,EAAE,mBADR;AAENT,IAAAA,OAAO,EAAE,UAFH;AAGNJ,IAAAA,UAAU,EAAE;AAHN,GAzC+B;AA8CvCc,EAAAA,SAAS,EAAE;AACTV,IAAAA,OAAO,EAAE,EADA;AAETV,IAAAA,KAAK,EAAE,MAFE;AAGTmB,IAAAA,YAAY,EAAE,mBAHL;AAIT,eAAW;AACTP,MAAAA,YAAY,EAAE,CADL;AAETK,MAAAA,eAAe,EAAEnB,KAAK,CAACuB,OAAN,CAAcC,MAAd,CAAqBC,KAF7B;AAGTb,MAAAA,OAAO,EAAE,CAHA;AAITc,MAAAA,UAAU,EAAE1B,KAAK,CAAC2B,WAAN,CAAkBC,MAAlB,CAAyB,CAAC,cAAD,EAAiB,YAAjB,CAAzB,CAJH;AAKTZ,MAAAA,MAAM,EAAE,mBALC;AAMTb,MAAAA,QAAQ,EAAE,EAND;AAOT,iBAAW;AACTc,QAAAA,SAAS,EAAG,GAAE3B,IAAI,CAACU,KAAK,CAACuB,OAAN,CAAcM,OAAd,CAAsBC,IAAvB,EAA6B,IAA7B,CAAmC,eAD5C;AAETC,QAAAA,WAAW,EAAE/B,KAAK,CAACuB,OAAN,CAAcM,OAAd,CAAsBC;AAF1B;AAPF;AAJF,GA9C4B;AA+DvCE,EAAAA,KAAK,EAAE;AACLf,IAAAA,SAAS,EAAE,MADN;AAELgB,IAAAA,MAAM,EAAE,CAFH;AAGL1B,IAAAA,KAAK,EAAE,SAHF;AAILJ,IAAAA,QAAQ,EAAE;AAJL,GA/DgC;AAqEvC+B,EAAAA,MAAM,EAAE;AACNC,IAAAA,SAAS,EAAE,MADL;AAENC,IAAAA,UAAU,EAAE,YAFN;AAGNxB,IAAAA,OAAO,EAAE,CAHH;AAIN,+BAA2B;AACzBO,MAAAA,eAAe,EAAE;AADQ,KAJrB;AAON,4BAAwB;AACtBA,MAAAA,eAAe,EAAEnB,KAAK,CAACuB,OAAN,CAAcc,MAAd,CAAqBC;AADhB;AAPlB,GArE+B;AAgFvCC,EAAAA,mBAAmB,EAAE;AACnBC,IAAAA,QAAQ,EAAE;AADS,GAhFkB;AAmFvCC,EAAAA,YAAY,EAAE;AACZvC,IAAAA,KAAK,EAAE,EADK;AAEZO,IAAAA,MAAM,EAAE,EAFI;AAGZiC,IAAAA,WAAW,EAAE,CAHD;AAIZC,IAAAA,UAAU,EAAE,CAAC;AAJD,GAnFyB;AAyFvCpC,EAAAA,KAAK,EAAE;AACLL,IAAAA,KAAK,EAAE,EADF;AAELO,IAAAA,MAAM,EAAE,EAFH;AAGLmC,IAAAA,UAAU,EAAE,CAHP;AAIL9B,IAAAA,YAAY,EAAE,CAJT;AAKL4B,IAAAA,WAAW,EAAE,CALR;AAML/B,IAAAA,SAAS,EAAE;AANN,GAzFgC;AAiGvCkC,EAAAA,IAAI,EAAE;AACJC,IAAAA,QAAQ,EAAE;AADN,GAjGiC;AAoGvCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,OAAO,EAAE,GADJ;AAEL9C,IAAAA,KAAK,EAAE,EAFF;AAGLO,IAAAA,MAAM,EAAE;AAHH;AApGgC,CAAZ,CAAD,CAA5B;AA2GA,eAAe,SAASwC,WAAT,GAAuB;AACpC,QAAMC,OAAO,GAAGnD,SAAS,EAAzB;AACA,QAAM,CAACoD,QAAD,EAAWC,WAAX,IAA0BhE,KAAK,CAACiE,QAAN,CAAe,IAAf,CAAhC;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBnE,KAAK,CAACiE,QAAN,CAAe,CAACG,MAAM,CAAC,CAAD,CAAP,EAAYA,MAAM,CAAC,EAAD,CAAlB,CAAf,CAA1B;AACA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCtE,KAAK,CAACiE,QAAN,CAAe,EAAf,CAAxC;AACA,QAAMrD,KAAK,GAAGX,QAAQ,EAAtB;;AAEA,QAAMsE,WAAW,GAAIC,KAAD,IAAW;AAC7BF,IAAAA,eAAe,CAACJ,KAAD,CAAf;AACAF,IAAAA,WAAW,CAACQ,KAAK,CAACC,aAAP,CAAX;AACD,GAHD;;AAKA,QAAMC,WAAW,GAAG,CAACF,KAAD,EAAQG,MAAR,KAAmB;AACrC,QAAIA,MAAM,KAAK,aAAf,EAA8B;AAC5B;AACD;;AACDR,IAAAA,QAAQ,CAACE,YAAD,CAAR;;AACA,QAAIN,QAAJ,EAAc;AACZA,MAAAA,QAAQ,CAACa,KAAT;AACD;;AACDZ,IAAAA,WAAW,CAAC,IAAD,CAAX;AACD,GATD;;AAWA,QAAMa,IAAI,GAAGC,OAAO,CAACf,QAAD,CAApB;AACA,QAAMgB,EAAE,GAAGF,IAAI,GAAG,cAAH,GAAoBG,SAAnC;AAEA,sBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAElB,OAAO,CAACjD,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AACE,IAAA,aAAa,MADf;AAEE,IAAA,SAAS,EAAEiD,OAAO,CAAC9C,MAFrB;AAGE,wBAAkB+D,EAHpB;AAIE,IAAA,OAAO,EAAER,WAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANF,eAOE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADF,EAUGL,KAAK,CAACe,GAAN,CAAWC,KAAD,iBACT;AACE,IAAA,GAAG,EAAEA,KAAK,CAACC,IADb;AAEE,IAAA,SAAS,EAAErB,OAAO,CAACxC,GAFrB;AAGE,IAAA,KAAK,EAAE;AACLS,MAAAA,eAAe,EAAEmD,KAAK,CAAC/D,KADlB;AAELA,MAAAA,KAAK,EAAEP,KAAK,CAACuB,OAAN,CAAciD,eAAd,CAA8BF,KAAK,CAAC/D,KAApC;AAFF,KAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQG+D,KAAK,CAACC,IART,CADD,CAVH,CADF,eAwBE,oBAAC,MAAD;AACE,IAAA,EAAE,EAAEJ,EADN;AAEE,IAAA,IAAI,EAAEF,IAFR;AAGE,IAAA,QAAQ,EAAEd,QAHZ;AAIE,IAAA,SAAS,EAAC,cAJZ;AAKE,IAAA,SAAS,EAAED,OAAO,CAACnC,MALrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE;AAAK,IAAA,SAAS,EAAEmC,OAAO,CAAC9B,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAPF,eAQE,oBAAC,YAAD;AACE,IAAA,IAAI,MADN;AAEE,IAAA,OAAO,EAAE0C,WAFX;AAGE,IAAA,QAAQ,MAHV;AAIE,IAAA,OAAO,EAAE;AACP9B,MAAAA,KAAK,EAAEkB,OAAO,CAAClB,KADR;AAEPE,MAAAA,MAAM,EAAEgB,OAAO,CAAChB,MAFT;AAGPK,MAAAA,mBAAmB,EAAEW,OAAO,CAACX;AAHtB,KAJX;AASE,IAAA,KAAK,EAAEkB,YATT;AAUE,IAAA,QAAQ,EAAE,CAACG,KAAD,EAAQa,QAAR,KAAqB;AAC7Bf,MAAAA,eAAe,CAACe,QAAD,CAAf;AACD,KAZH;AAaE,IAAA,oBAAoB,MAbtB;AAcE,IAAA,aAAa,MAdf;AAeE,IAAA,UAAU,EAAE,MAAM,IAfpB;AAgBE,IAAA,aAAa,EAAC,WAhBhB;AAiBE,IAAA,YAAY,EAAE,CAACvC,MAAD,EAAS;AAAEwC,MAAAA;AAAF,KAAT,kBACZ,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,QAAD;AACE,MAAA,SAAS,EAAExB,OAAO,CAACT,YADrB;AAEE,MAAA,KAAK,EAAE;AAAEkC,QAAAA,UAAU,EAAED,QAAQ,GAAG,SAAH,GAAe;AAArC,OAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAKE;AAAM,MAAA,SAAS,EAAExB,OAAO,CAAC3C,KAAzB;AAAgC,MAAA,KAAK,EAAE;AAAEY,QAAAA,eAAe,EAAEe,MAAM,CAAC3B;AAA1B,OAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,eAME;AAAK,MAAA,SAAS,EAAE2C,OAAO,CAACL,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGX,MAAM,CAACqC,IADV,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGGrC,MAAM,CAAC0C,WAHV,CANF,eAWE,oBAAC,SAAD;AACE,MAAA,SAAS,EAAE1B,OAAO,CAACH,KADrB;AAEE,MAAA,KAAK,EAAE;AAAE4B,QAAAA,UAAU,EAAED,QAAQ,GAAG,SAAH,GAAe;AAArC,OAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXF,CAlBJ;AAmCE,IAAA,OAAO,EAAE,CAAC,GAAGlB,MAAJ,EAAYqB,IAAZ,CAAiB,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAClC;AACA,UAAIC,EAAE,GAAG1B,KAAK,CAAC2B,OAAN,CAAcH,CAAd,CAAT;AACAE,MAAAA,EAAE,GAAGA,EAAE,KAAK,CAAC,CAAR,GAAY1B,KAAK,CAAC4B,MAAN,GAAe1B,MAAM,CAACyB,OAAP,CAAeH,CAAf,CAA3B,GAA+CE,EAApD;AACA,UAAIG,EAAE,GAAG7B,KAAK,CAAC2B,OAAN,CAAcF,CAAd,CAAT;AACAI,MAAAA,EAAE,GAAGA,EAAE,KAAK,CAAC,CAAR,GAAY7B,KAAK,CAAC4B,MAAN,GAAe1B,MAAM,CAACyB,OAAP,CAAeF,CAAf,CAA3B,GAA+CI,EAApD;AACA,aAAOH,EAAE,GAAGG,EAAZ;AACD,KAPQ,CAnCX;AA2CE,IAAA,cAAc,EAAGjD,MAAD,IAAYA,MAAM,CAACqC,IA3CrC;AA4CE,IAAA,WAAW,EAAGa,MAAD,iBACX,oBAAC,SAAD;AACE,MAAA,GAAG,EAAEA,MAAM,CAACC,UAAP,CAAkBC,GADzB;AAEE,MAAA,UAAU,EAAEF,MAAM,CAACG,UAFrB;AAGE,MAAA,SAAS,MAHX;AAIE,MAAA,SAAS,EAAErC,OAAO,CAAC5B,SAJrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA7CJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CAxBF,CADF;AAyFD,C,CAED;;AACA,MAAMkC,MAAM,GAAG,CACb;AACEe,EAAAA,IAAI,EAAE,kBADR;AAEEhE,EAAAA,KAAK,EAAE,SAFT;AAGEqE,EAAAA,WAAW,EAAE;AAHf,CADa,EAMb;AACEL,EAAAA,IAAI,EAAE,aADR;AAEEhE,EAAAA,KAAK,EAAE,SAFT;AAGEqE,EAAAA,WAAW,EAAE;AAHf,CANa,EAWb;AACEL,EAAAA,IAAI,EAAE,oBADR;AAEEhE,EAAAA,KAAK,EAAE,SAFT;AAGEqE,EAAAA,WAAW,EAAE;AAHf,CAXa,EAgBb;AACEL,EAAAA,IAAI,EAAE,gBADR;AAEEhE,EAAAA,KAAK,EAAE,SAFT;AAGEqE,EAAAA,WAAW,EAAE;AAHf,CAhBa,EAqBb;AACEL,EAAAA,IAAI,EAAE,eADR;AAEEhE,EAAAA,KAAK,EAAE,SAFT;AAGEqE,EAAAA,WAAW,EAAE;AAHf,CArBa,EA0Bb;AACEL,EAAAA,IAAI,EAAE,kBADR;AAEEhE,EAAAA,KAAK,EAAE,SAFT;AAGEqE,EAAAA,WAAW,EAAE;AAHf,CA1Ba,EA+Bb;AACEL,EAAAA,IAAI,EAAE,yBADR;AAEEhE,EAAAA,KAAK,EAAE,SAFT;AAGEqE,EAAAA,WAAW,EAAE;AAHf,CA/Ba,EAoCb;AACEL,EAAAA,IAAI,EAAE,mBADR;AAEEhE,EAAAA,KAAK,EAAE,SAFT;AAGEqE,EAAAA,WAAW,EAAE;AAHf,CApCa,EAyCb;AACEL,EAAAA,IAAI,EAAE,mBADR;AAEEhE,EAAAA,KAAK,EAAE,SAFT;AAGEqE,EAAAA,WAAW,EAAE;AAHf,CAzCa,EA8Cb;AACEL,EAAAA,IAAI,EAAE,2BADR;AAEEhE,EAAAA,KAAK,EAAE,SAFT;AAGEqE,EAAAA,WAAW,EAAE;AAHf,CA9Ca,EAmDb;AACEL,EAAAA,IAAI,EAAE,qBADR;AAEEhE,EAAAA,KAAK,EAAE,SAFT;AAGEqE,EAAAA,WAAW,EAAE;AAHf,CAnDa,EAwDb;AACEL,EAAAA,IAAI,EAAE,WADR;AAEEhE,EAAAA,KAAK,EAAE,SAFT;AAGEqE,EAAAA,WAAW,EAAE;AAHf,CAxDa,EA6Db;AACEL,EAAAA,IAAI,EAAE,kBADR;AAEEhE,EAAAA,KAAK,EAAE,SAFT;AAGEqE,EAAAA,WAAW,EAAE;AAHf,CA7Da,EAkEb;AACEL,EAAAA,IAAI,EAAE,qBADR;AAEEhE,EAAAA,KAAK,EAAE,SAFT;AAGEqE,EAAAA,WAAW,EAAE;AAHf,CAlEa,EAuEb;AACEL,EAAAA,IAAI,EAAE,mBADR;AAEEhE,EAAAA,KAAK,EAAE,SAFT;AAGEqE,EAAAA,WAAW,EAAE;AAHf,CAvEa,EA4Eb;AACEL,EAAAA,IAAI,EAAE,YADR;AAEEhE,EAAAA,KAAK,EAAE,SAFT;AAGEqE,EAAAA,WAAW,EAAE;AAHf,CA5Ea,EAiFb;AACEL,EAAAA,IAAI,EAAE,uBADR;AAEEhE,EAAAA,KAAK,EAAE,SAFT;AAGEqE,EAAAA,WAAW,EAAE;AAHf,CAjFa,EAsFb;AACEL,EAAAA,IAAI,EAAE,gBADR;AAEEhE,EAAAA,KAAK,EAAE,SAFT;AAGEqE,EAAAA,WAAW,EAAE;AAHf,CAtFa,CAAf","sourcesContent":["/* eslint-disable no-use-before-define */\nimport React from 'react';\nimport { useTheme, fade, makeStyles } from '@material-ui/core/styles';\nimport Popper from '@material-ui/core/Popper';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport CloseIcon from '@material-ui/icons/Close';\nimport DoneIcon from '@material-ui/icons/Done';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport ButtonBase from '@material-ui/core/ButtonBase';\nimport InputBase from '@material-ui/core/InputBase';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: 221,\n    fontSize: 13,\n  },\n  button: {\n    fontSize: 13,\n    width: '100%',\n    textAlign: 'left',\n    paddingBottom: 8,\n    color: '#586069',\n    fontWeight: 600,\n    '&:hover,&:focus': {\n      color: '#0366d6',\n    },\n    '& span': {\n      width: '100%',\n    },\n    '& svg': {\n      width: 16,\n      height: 16,\n    },\n  },\n  tag: {\n    marginTop: 3,\n    height: 20,\n    padding: '.15em 4px',\n    fontWeight: 600,\n    lineHeight: '15px',\n    borderRadius: 2,\n  },\n  popper: {\n    border: '1px solid rgba(27,31,35,.15)',\n    boxShadow: '0 3px 12px rgba(27,31,35,.15)',\n    borderRadius: 3,\n    width: 300,\n    zIndex: 1,\n    fontSize: 13,\n    color: '#586069',\n    backgroundColor: '#f6f8fa',\n  },\n  header: {\n    borderBottom: '1px solid #e1e4e8',\n    padding: '8px 10px',\n    fontWeight: 600,\n  },\n  inputBase: {\n    padding: 10,\n    width: '100%',\n    borderBottom: '1px solid #dfe2e5',\n    '& input': {\n      borderRadius: 4,\n      backgroundColor: theme.palette.common.white,\n      padding: 8,\n      transition: theme.transitions.create(['border-color', 'box-shadow']),\n      border: '1px solid #ced4da',\n      fontSize: 14,\n      '&:focus': {\n        boxShadow: `${fade(theme.palette.primary.main, 0.25)} 0 0 0 0.2rem`,\n        borderColor: theme.palette.primary.main,\n      },\n    },\n  },\n  paper: {\n    boxShadow: 'none',\n    margin: 0,\n    color: '#586069',\n    fontSize: 13,\n  },\n  option: {\n    minHeight: 'auto',\n    alignItems: 'flex-start',\n    padding: 8,\n    '&[aria-selected=\"true\"]': {\n      backgroundColor: 'transparent',\n    },\n    '&[data-focus=\"true\"]': {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n  popperDisablePortal: {\n    position: 'relative',\n  },\n  iconSelected: {\n    width: 17,\n    height: 17,\n    marginRight: 5,\n    marginLeft: -2,\n  },\n  color: {\n    width: 14,\n    height: 14,\n    flexShrink: 0,\n    borderRadius: 3,\n    marginRight: 8,\n    marginTop: 2,\n  },\n  text: {\n    flexGrow: 1,\n  },\n  close: {\n    opacity: 0.6,\n    width: 18,\n    height: 18,\n  },\n}));\n\nexport default function GitHubLabel() {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [value, setValue] = React.useState([labels[1], labels[11]]);\n  const [pendingValue, setPendingValue] = React.useState([]);\n  const theme = useTheme();\n\n  const handleClick = (event) => {\n    setPendingValue(value);\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === 'toggleInput') {\n      return;\n    }\n    setValue(pendingValue);\n    if (anchorEl) {\n      anchorEl.focus();\n    }\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n  const id = open ? 'github-label' : undefined;\n\n  return (\n    <React.Fragment>\n      <div className={classes.root}>\n        <ButtonBase\n          disableRipple\n          className={classes.button}\n          aria-describedby={id}\n          onClick={handleClick}\n        >\n          <span>Labels</span>\n          <SettingsIcon />\n        </ButtonBase>\n        {value.map((label) => (\n          <div\n            key={label.name}\n            className={classes.tag}\n            style={{\n              backgroundColor: label.color,\n              color: theme.palette.getContrastText(label.color),\n            }}\n          >\n            {label.name}\n          </div>\n        ))}\n      </div>\n      <Popper\n        id={id}\n        open={open}\n        anchorEl={anchorEl}\n        placement=\"bottom-start\"\n        className={classes.popper}\n      >\n        <div className={classes.header}>Apply labels to this pull request</div>\n        <Autocomplete\n          open\n          onClose={handleClose}\n          multiple\n          classes={{\n            paper: classes.paper,\n            option: classes.option,\n            popperDisablePortal: classes.popperDisablePortal,\n          }}\n          value={pendingValue}\n          onChange={(event, newValue) => {\n            setPendingValue(newValue);\n          }}\n          disableCloseOnSelect\n          disablePortal\n          renderTags={() => null}\n          noOptionsText=\"No labels\"\n          renderOption={(option, { selected }) => (\n            <React.Fragment>\n              <DoneIcon\n                className={classes.iconSelected}\n                style={{ visibility: selected ? 'visible' : 'hidden' }}\n              />\n              <span className={classes.color} style={{ backgroundColor: option.color }} />\n              <div className={classes.text}>\n                {option.name}\n                <br />\n                {option.description}\n              </div>\n              <CloseIcon\n                className={classes.close}\n                style={{ visibility: selected ? 'visible' : 'hidden' }}\n              />\n            </React.Fragment>\n          )}\n          options={[...labels].sort((a, b) => {\n            // Display the selected labels first.\n            let ai = value.indexOf(a);\n            ai = ai === -1 ? value.length + labels.indexOf(a) : ai;\n            let bi = value.indexOf(b);\n            bi = bi === -1 ? value.length + labels.indexOf(b) : bi;\n            return ai - bi;\n          })}\n          getOptionLabel={(option) => option.name}\n          renderInput={(params) => (\n            <InputBase\n              ref={params.InputProps.ref}\n              inputProps={params.inputProps}\n              autoFocus\n              className={classes.inputBase}\n            />\n          )}\n        />\n      </Popper>\n    </React.Fragment>\n  );\n}\n\n// From https://github.com/abdonrd/github-labels\nconst labels = [\n  {\n    name: 'good first issue',\n    color: '#7057ff',\n    description: 'Good for newcomers',\n  },\n  {\n    name: 'help wanted',\n    color: '#008672',\n    description: 'Extra attention is needed',\n  },\n  {\n    name: 'priority: critical',\n    color: '#b60205',\n    description: '',\n  },\n  {\n    name: 'priority: high',\n    color: '#d93f0b',\n    description: '',\n  },\n  {\n    name: 'priority: low',\n    color: '#0e8a16',\n    description: '',\n  },\n  {\n    name: 'priority: medium',\n    color: '#fbca04',\n    description: '',\n  },\n  {\n    name: \"status: can't reproduce\",\n    color: '#fec1c1',\n    description: '',\n  },\n  {\n    name: 'status: confirmed',\n    color: '#215cea',\n    description: '',\n  },\n  {\n    name: 'status: duplicate',\n    color: '#cfd3d7',\n    description: 'This issue or pull request already exists',\n  },\n  {\n    name: 'status: needs information',\n    color: '#fef2c0',\n    description: '',\n  },\n  {\n    name: 'status: wont do/fix',\n    color: '#eeeeee',\n    description: 'This will not be worked on',\n  },\n  {\n    name: 'type: bug',\n    color: '#d73a4a',\n    description: \"Something isn't working\",\n  },\n  {\n    name: 'type: discussion',\n    color: '#d4c5f9',\n    description: '',\n  },\n  {\n    name: 'type: documentation',\n    color: '#006b75',\n    description: '',\n  },\n  {\n    name: 'type: enhancement',\n    color: '#84b6eb',\n    description: '',\n  },\n  {\n    name: 'type: epic',\n    color: '#3e4b9e',\n    description: 'A theme of work that contain sub-tasks',\n  },\n  {\n    name: 'type: feature request',\n    color: '#fbca04',\n    description: 'New feature or request',\n  },\n  {\n    name: 'type: question',\n    color: '#d876e3',\n    description: 'Further information is requested',\n  },\n];\n"]},"metadata":{},"sourceType":"module"}