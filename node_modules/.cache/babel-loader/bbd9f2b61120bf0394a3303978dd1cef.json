{"ast":null,"code":"var _jsxFileName = \"D:\\\\proyectos_react\\\\Proyecto_sena\\\\src\\\\app\\\\main\\\\documentation\\\\material-ui-components\\\\components\\\\dialogs\\\\ConfirmationDialog.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Radio from '@material-ui/core/Radio';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nconst options = ['None', 'Atria', 'Callisto', 'Dione', 'Ganymede', 'Hangouts Call', 'Luna', 'Oberon', 'Phobos', 'Pyxis', 'Sedna', 'Titania', 'Triton', 'Umbriel'];\n\nfunction ConfirmationDialogRaw(props) {\n  const {\n    onClose,\n    value: valueProp,\n    open,\n    ...other\n  } = props;\n  const [value, setValue] = React.useState(valueProp);\n  const radioGroupRef = React.useRef(null);\n  React.useEffect(() => {\n    if (!open) {\n      setValue(valueProp);\n    }\n  }, [valueProp, open]);\n\n  const handleEntering = () => {\n    if (radioGroupRef.current != null) {\n      radioGroupRef.current.focus();\n    }\n  };\n\n  const handleCancel = () => {\n    onClose();\n  };\n\n  const handleOk = () => {\n    onClose(value);\n  };\n\n  const handleChange = event => {\n    setValue(event.target.value);\n  };\n\n  return /*#__PURE__*/React.createElement(Dialog, Object.assign({\n    disableBackdropClick: true,\n    disableEscapeKeyDown: true,\n    maxWidth: \"xs\",\n    onEntering: handleEntering,\n    \"aria-labelledby\": \"confirmation-dialog-title\",\n    open: open\n  }, other, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"confirmation-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, \"Phone Ringtone\"), /*#__PURE__*/React.createElement(DialogContent, {\n    dividers: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(RadioGroup, {\n    ref: radioGroupRef,\n    \"aria-label\": \"ringtone\",\n    name: \"ringtone\",\n    value: value,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, options.map(option => /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: option,\n    key: option,\n    control: /*#__PURE__*/React.createElement(Radio, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 68\n      }\n    }),\n    label: option,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    autoFocus: true,\n    onClick: handleCancel,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleOk,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, \"Ok\")));\n}\n\nConfirmationDialogRaw.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  value: PropTypes.string.isRequired\n};\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper\n  },\n  paper: {\n    width: '80%',\n    maxHeight: 435\n  }\n}));\nexport default function ConfirmationDialog() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [value, setValue] = React.useState('Dione');\n\n  const handleClickListItem = () => {\n    setOpen(true);\n  };\n\n  const handleClose = newValue => {\n    setOpen(false);\n\n    if (newValue) {\n      setValue(newValue);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    component: \"div\",\n    role: \"list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    divider: true,\n    disabled: true,\n    role: \"listitem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ListItemText, {\n    primary: \"Interruptions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    divider: true,\n    \"aria-haspopup\": \"true\",\n    \"aria-controls\": \"ringtone-menu\",\n    \"aria-label\": \"phone ringtone\",\n    onClick: handleClickListItem,\n    role: \"listitem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ListItemText, {\n    primary: \"Phone ringtone\",\n    secondary: value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    divider: true,\n    disabled: true,\n    role: \"listitem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ListItemText, {\n    primary: \"Default notification ringtone\",\n    secondary: \"Tethys\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(ConfirmationDialogRaw, {\n    classes: {\n      paper: classes.paper\n    },\n    id: \"ringtone-menu\",\n    keepMounted: true,\n    open: open,\n    onClose: handleClose,\n    value: value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["D:/proyectos_react/Proyecto_sena/src/app/main/documentation/material-ui-components/components/dialogs/ConfirmationDialog.js"],"names":["React","PropTypes","makeStyles","Button","List","ListItem","ListItemText","DialogTitle","DialogContent","DialogActions","Dialog","RadioGroup","Radio","FormControlLabel","options","ConfirmationDialogRaw","props","onClose","value","valueProp","open","other","setValue","useState","radioGroupRef","useRef","useEffect","handleEntering","current","focus","handleCancel","handleOk","handleChange","event","target","map","option","propTypes","func","isRequired","bool","string","useStyles","theme","root","width","maxWidth","backgroundColor","palette","background","paper","maxHeight","ConfirmationDialog","classes","setOpen","handleClickListItem","handleClose","newValue"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Radio from '@material-ui/core/Radio';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\nconst options = [\n  'None',\n  'Atria',\n  'Callisto',\n  'Dione',\n  'Ganymede',\n  'Hangouts Call',\n  'Luna',\n  'Oberon',\n  'Phobos',\n  'Pyxis',\n  'Sedna',\n  'Titania',\n  'Triton',\n  'Umbriel',\n];\n\nfunction ConfirmationDialogRaw(props) {\n  const { onClose, value: valueProp, open, ...other } = props;\n  const [value, setValue] = React.useState(valueProp);\n  const radioGroupRef = React.useRef(null);\n\n  React.useEffect(() => {\n    if (!open) {\n      setValue(valueProp);\n    }\n  }, [valueProp, open]);\n\n  const handleEntering = () => {\n    if (radioGroupRef.current != null) {\n      radioGroupRef.current.focus();\n    }\n  };\n\n  const handleCancel = () => {\n    onClose();\n  };\n\n  const handleOk = () => {\n    onClose(value);\n  };\n\n  const handleChange = (event) => {\n    setValue(event.target.value);\n  };\n\n  return (\n    <Dialog\n      disableBackdropClick\n      disableEscapeKeyDown\n      maxWidth=\"xs\"\n      onEntering={handleEntering}\n      aria-labelledby=\"confirmation-dialog-title\"\n      open={open}\n      {...other}\n    >\n      <DialogTitle id=\"confirmation-dialog-title\">Phone Ringtone</DialogTitle>\n      <DialogContent dividers>\n        <RadioGroup\n          ref={radioGroupRef}\n          aria-label=\"ringtone\"\n          name=\"ringtone\"\n          value={value}\n          onChange={handleChange}\n        >\n          {options.map((option) => (\n            <FormControlLabel value={option} key={option} control={<Radio />} label={option} />\n          ))}\n        </RadioGroup>\n      </DialogContent>\n      <DialogActions>\n        <Button autoFocus onClick={handleCancel} color=\"primary\">\n          Cancel\n        </Button>\n        <Button onClick={handleOk} color=\"primary\">\n          Ok\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nConfirmationDialogRaw.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  value: PropTypes.string.isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n  },\n  paper: {\n    width: '80%',\n    maxHeight: 435,\n  },\n}));\n\nexport default function ConfirmationDialog() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [value, setValue] = React.useState('Dione');\n\n  const handleClickListItem = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (newValue) => {\n    setOpen(false);\n\n    if (newValue) {\n      setValue(newValue);\n    }\n  };\n\n  return (\n    <div className={classes.root}>\n      <List component=\"div\" role=\"list\">\n        <ListItem button divider disabled role=\"listitem\">\n          <ListItemText primary=\"Interruptions\" />\n        </ListItem>\n        <ListItem\n          button\n          divider\n          aria-haspopup=\"true\"\n          aria-controls=\"ringtone-menu\"\n          aria-label=\"phone ringtone\"\n          onClick={handleClickListItem}\n          role=\"listitem\"\n        >\n          <ListItemText primary=\"Phone ringtone\" secondary={value} />\n        </ListItem>\n        <ListItem button divider disabled role=\"listitem\">\n          <ListItemText primary=\"Default notification ringtone\" secondary=\"Tethys\" />\n        </ListItem>\n        <ConfirmationDialogRaw\n          classes={{\n            paper: classes.paper,\n          }}\n          id=\"ringtone-menu\"\n          keepMounted\n          open={open}\n          onClose={handleClose}\n          value={value}\n        />\n      </List>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}