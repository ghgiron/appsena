{"ast":null,"code":"var _jsxFileName = \"D:\\\\proyectos_react\\\\Proyecto_sena\\\\src\\\\app\\\\main\\\\apps\\\\mail\\\\mails\\\\MailsToolbar.js\";\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Icon from '@material-ui/core/Icon';\nimport IconButton from '@material-ui/core/IconButton';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectFolders } from '../store/foldersSlice';\nimport { selectLabels } from '../store/labelsSlice';\nimport { toggleLabelOnSelectedMails, setFolderOnSelectedMails, selectMailsByParameter, deselectAllMails, selectAllMails, selectMails } from '../store/mailsSlice';\n\nfunction MailToolbar(props) {\n  const dispatch = useDispatch();\n  const selectedMailIds = useSelector(({\n    mailApp\n  }) => mailApp.mails.selectedMailIds);\n  const mails = useSelector(selectMails);\n  const labels = useSelector(selectLabels);\n  const folders = useSelector(selectFolders);\n  const [menu, setMenu] = useState({\n    selectMenu: null,\n    foldersMenu: null,\n    labelsMenu: null\n  });\n\n  function handleMenuOpen(event, _menu) {\n    setMenu({ ..._menu,\n      [_menu]: event.currentTarget\n    });\n  }\n\n  function handleMenuClose(event, _menu) {\n    setMenu({ ..._menu,\n      [_menu]: null\n    });\n  }\n\n  function handleCheckChange(event) {\n    return event.target.checked ? dispatch(selectAllMails()) : dispatch(deselectAllMails());\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex flex-1 items-center sm:px-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    onChange: handleCheckChange,\n    checked: selectedMailIds.length === Object.keys(mails).length && selectedMailIds.length > 0,\n    indeterminate: selectedMailIds.length !== Object.keys(mails).length && selectedMailIds.length > 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(IconButton, {\n    className: \"\",\n    size: \"small\",\n    \"aria-label\": \"More\",\n    \"aria-owns\": menu.select ? 'select-menu' : null,\n    \"aria-haspopup\": \"true\",\n    onClick: ev => handleMenuOpen(ev, 'select'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, \"arrow_drop_down\")), /*#__PURE__*/React.createElement(Menu, {\n    id: \"select-menu\",\n    anchorEl: menu.select,\n    open: Boolean(menu.select),\n    onClose: ev => handleMenuClose(ev, 'select'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    onClick: ev => {\n      dispatch(selectAllMails());\n      handleMenuClose(ev, 'select');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }, \"All\"), /*#__PURE__*/React.createElement(MenuItem, {\n    onClick: ev => {\n      dispatch(deselectAllMails());\n      handleMenuClose(ev, 'select');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }\n  }, \"None\"), /*#__PURE__*/React.createElement(MenuItem, {\n    onClick: ev => {\n      dispatch(selectMailsByParameter(['read', true]));\n      handleMenuClose(ev, 'select');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }\n  }, \"Read\"), /*#__PURE__*/React.createElement(MenuItem, {\n    onClick: ev => {\n      dispatch(selectMailsByParameter(['read', false]));\n      handleMenuClose(ev, 'select');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 5\n    }\n  }, \"Unread\"), /*#__PURE__*/React.createElement(MenuItem, {\n    onClick: ev => {\n      dispatch(selectMailsByParameter(['starred', true]));\n      handleMenuClose(ev, 'select');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 5\n    }\n  }, \"Starred\"), /*#__PURE__*/React.createElement(MenuItem, {\n    onClick: ev => {\n      dispatch(selectMailsByParameter(['starred', false]));\n      handleMenuClose(ev, 'select');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 5\n    }\n  }, \"Unstarred\"), /*#__PURE__*/React.createElement(MenuItem, {\n    onClick: ev => {\n      dispatch(selectMailsByParameter(['important', true]));\n      handleMenuClose(ev, 'select');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 5\n    }\n  }, \"Important\"), /*#__PURE__*/React.createElement(MenuItem, {\n    onClick: ev => {\n      dispatch(selectMailsByParameter(['important', false]));\n      handleMenuClose(ev, 'select');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 5\n    }\n  }, \"Unimportant\")), selectedMailIds.length > 0 && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"border-r-1 h-48 w-1 mx-12 my-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 6\n    }\n  }), /*#__PURE__*/React.createElement(IconButton, {\n    onClick: ev => dispatch(setFolderOnSelectedMails(4)),\n    \"aria-label\": \"Delete\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }\n  }, \"delete\")), /*#__PURE__*/React.createElement(IconButton, {\n    \"aria-label\": \"More\",\n    \"aria-owns\": menu.folders ? 'folders-menu' : null,\n    \"aria-haspopup\": \"true\",\n    onClick: ev => handleMenuOpen(ev, 'folders'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }\n  }, \"folder\")), /*#__PURE__*/React.createElement(Menu, {\n    id: \"folders-menu\",\n    anchorEl: menu.folders,\n    open: Boolean(menu.folders),\n    onClose: ev => handleMenuClose(ev, 'folders'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 6\n    }\n  }, folders.length > 0 && folders.map(folder => /*#__PURE__*/React.createElement(MenuItem, {\n    onClick: ev => {\n      dispatch(setFolderOnSelectedMails(folder.id));\n      handleMenuClose(ev, 'folders');\n    },\n    key: folder.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 9\n    }\n  }, folder.title))), /*#__PURE__*/React.createElement(IconButton, {\n    \"aria-label\": \"More\",\n    \"aria-owns\": menu.labels ? 'labels-menu' : null,\n    \"aria-haspopup\": \"true\",\n    onClick: ev => handleMenuOpen(ev, 'labels'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }\n  }, \"label\")), /*#__PURE__*/React.createElement(Menu, {\n    id: \"folders-menu\",\n    anchorEl: menu.labels,\n    open: Boolean(menu.labels),\n    onClose: ev => handleMenuClose(ev, 'labels'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 6\n    }\n  }, labels.length > 0 && labels.map(label => /*#__PURE__*/React.createElement(MenuItem, {\n    onClick: ev => {\n      dispatch(toggleLabelOnSelectedMails(label.id));\n      handleMenuClose(ev, 'labels');\n    },\n    key: label.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 9\n    }\n  }, label.title)))));\n}\n\nexport default MailToolbar;","map":{"version":3,"sources":["D:/proyectos_react/Proyecto_sena/src/app/main/apps/mail/mails/MailsToolbar.js"],"names":["Checkbox","Icon","IconButton","Menu","MenuItem","React","useState","useDispatch","useSelector","selectFolders","selectLabels","toggleLabelOnSelectedMails","setFolderOnSelectedMails","selectMailsByParameter","deselectAllMails","selectAllMails","selectMails","MailToolbar","props","dispatch","selectedMailIds","mailApp","mails","labels","folders","menu","setMenu","selectMenu","foldersMenu","labelsMenu","handleMenuOpen","event","_menu","currentTarget","handleMenuClose","handleCheckChange","target","checked","length","Object","keys","select","ev","Boolean","map","folder","id","title","label"],"mappings":"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","sourcesContent":["import Checkbox from '@material-ui/core/Checkbox';\nimport Icon from '@material-ui/core/Icon';\nimport IconButton from '@material-ui/core/IconButton';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectFolders } from '../store/foldersSlice';\nimport { selectLabels } from '../store/labelsSlice';\nimport {\n\ttoggleLabelOnSelectedMails,\n\tsetFolderOnSelectedMails,\n\tselectMailsByParameter,\n\tdeselectAllMails,\n\tselectAllMails,\n\tselectMails\n} from '../store/mailsSlice';\n\nfunction MailToolbar(props) {\n\tconst dispatch = useDispatch();\n\tconst selectedMailIds = useSelector(({ mailApp }) => mailApp.mails.selectedMailIds);\n\tconst mails = useSelector(selectMails);\n\tconst labels = useSelector(selectLabels);\n\tconst folders = useSelector(selectFolders);\n\n\tconst [menu, setMenu] = useState({\n\t\tselectMenu: null,\n\t\tfoldersMenu: null,\n\t\tlabelsMenu: null\n\t});\n\n\tfunction handleMenuOpen(event, _menu) {\n\t\tsetMenu({\n\t\t\t..._menu,\n\t\t\t[_menu]: event.currentTarget\n\t\t});\n\t}\n\n\tfunction handleMenuClose(event, _menu) {\n\t\tsetMenu({\n\t\t\t..._menu,\n\t\t\t[_menu]: null\n\t\t});\n\t}\n\n\tfunction handleCheckChange(event) {\n\t\treturn event.target.checked ? dispatch(selectAllMails()) : dispatch(deselectAllMails());\n\t}\n\n\treturn (\n\t\t<div className=\"flex flex-1 items-center sm:px-8\">\n\t\t\t<Checkbox\n\t\t\t\tonChange={handleCheckChange}\n\t\t\t\tchecked={selectedMailIds.length === Object.keys(mails).length && selectedMailIds.length > 0}\n\t\t\t\tindeterminate={selectedMailIds.length !== Object.keys(mails).length && selectedMailIds.length > 0}\n\t\t\t/>\n\n\t\t\t<IconButton\n\t\t\t\tclassName=\"\"\n\t\t\t\tsize=\"small\"\n\t\t\t\taria-label=\"More\"\n\t\t\t\taria-owns={menu.select ? 'select-menu' : null}\n\t\t\t\taria-haspopup=\"true\"\n\t\t\t\tonClick={ev => handleMenuOpen(ev, 'select')}\n\t\t\t>\n\t\t\t\t<Icon>arrow_drop_down</Icon>\n\t\t\t</IconButton>\n\n\t\t\t<Menu\n\t\t\t\tid=\"select-menu\"\n\t\t\t\tanchorEl={menu.select}\n\t\t\t\topen={Boolean(menu.select)}\n\t\t\t\tonClose={ev => handleMenuClose(ev, 'select')}\n\t\t\t>\n\t\t\t\t<MenuItem\n\t\t\t\t\tonClick={ev => {\n\t\t\t\t\t\tdispatch(selectAllMails());\n\t\t\t\t\t\thandleMenuClose(ev, 'select');\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\tAll\n\t\t\t\t</MenuItem>\n\t\t\t\t<MenuItem\n\t\t\t\t\tonClick={ev => {\n\t\t\t\t\t\tdispatch(deselectAllMails());\n\t\t\t\t\t\thandleMenuClose(ev, 'select');\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\tNone\n\t\t\t\t</MenuItem>\n\t\t\t\t<MenuItem\n\t\t\t\t\tonClick={ev => {\n\t\t\t\t\t\tdispatch(selectMailsByParameter(['read', true]));\n\t\t\t\t\t\thandleMenuClose(ev, 'select');\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\tRead\n\t\t\t\t</MenuItem>\n\t\t\t\t<MenuItem\n\t\t\t\t\tonClick={ev => {\n\t\t\t\t\t\tdispatch(selectMailsByParameter(['read', false]));\n\t\t\t\t\t\thandleMenuClose(ev, 'select');\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\tUnread\n\t\t\t\t</MenuItem>\n\t\t\t\t<MenuItem\n\t\t\t\t\tonClick={ev => {\n\t\t\t\t\t\tdispatch(selectMailsByParameter(['starred', true]));\n\t\t\t\t\t\thandleMenuClose(ev, 'select');\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\tStarred\n\t\t\t\t</MenuItem>\n\t\t\t\t<MenuItem\n\t\t\t\t\tonClick={ev => {\n\t\t\t\t\t\tdispatch(selectMailsByParameter(['starred', false]));\n\t\t\t\t\t\thandleMenuClose(ev, 'select');\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\tUnstarred\n\t\t\t\t</MenuItem>\n\t\t\t\t<MenuItem\n\t\t\t\t\tonClick={ev => {\n\t\t\t\t\t\tdispatch(selectMailsByParameter(['important', true]));\n\t\t\t\t\t\thandleMenuClose(ev, 'select');\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\tImportant\n\t\t\t\t</MenuItem>\n\t\t\t\t<MenuItem\n\t\t\t\t\tonClick={ev => {\n\t\t\t\t\t\tdispatch(selectMailsByParameter(['important', false]));\n\t\t\t\t\t\thandleMenuClose(ev, 'select');\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\tUnimportant\n\t\t\t\t</MenuItem>\n\t\t\t</Menu>\n\n\t\t\t{selectedMailIds.length > 0 && (\n\t\t\t\t<>\n\t\t\t\t\t<div className=\"border-r-1 h-48 w-1 mx-12 my-0\" />\n\n\t\t\t\t\t<IconButton onClick={ev => dispatch(setFolderOnSelectedMails(4))} aria-label=\"Delete\">\n\t\t\t\t\t\t<Icon>delete</Icon>\n\t\t\t\t\t</IconButton>\n\n\t\t\t\t\t<IconButton\n\t\t\t\t\t\taria-label=\"More\"\n\t\t\t\t\t\taria-owns={menu.folders ? 'folders-menu' : null}\n\t\t\t\t\t\taria-haspopup=\"true\"\n\t\t\t\t\t\tonClick={ev => handleMenuOpen(ev, 'folders')}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Icon>folder</Icon>\n\t\t\t\t\t</IconButton>\n\n\t\t\t\t\t<Menu\n\t\t\t\t\t\tid=\"folders-menu\"\n\t\t\t\t\t\tanchorEl={menu.folders}\n\t\t\t\t\t\topen={Boolean(menu.folders)}\n\t\t\t\t\t\tonClose={ev => handleMenuClose(ev, 'folders')}\n\t\t\t\t\t>\n\t\t\t\t\t\t{folders.length > 0 &&\n\t\t\t\t\t\t\tfolders.map(folder => (\n\t\t\t\t\t\t\t\t<MenuItem\n\t\t\t\t\t\t\t\t\tonClick={ev => {\n\t\t\t\t\t\t\t\t\t\tdispatch(setFolderOnSelectedMails(folder.id));\n\t\t\t\t\t\t\t\t\t\thandleMenuClose(ev, 'folders');\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tkey={folder.id}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{folder.title}\n\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t</Menu>\n\n\t\t\t\t\t<IconButton\n\t\t\t\t\t\taria-label=\"More\"\n\t\t\t\t\t\taria-owns={menu.labels ? 'labels-menu' : null}\n\t\t\t\t\t\taria-haspopup=\"true\"\n\t\t\t\t\t\tonClick={ev => handleMenuOpen(ev, 'labels')}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Icon>label</Icon>\n\t\t\t\t\t</IconButton>\n\n\t\t\t\t\t<Menu\n\t\t\t\t\t\tid=\"folders-menu\"\n\t\t\t\t\t\tanchorEl={menu.labels}\n\t\t\t\t\t\topen={Boolean(menu.labels)}\n\t\t\t\t\t\tonClose={ev => handleMenuClose(ev, 'labels')}\n\t\t\t\t\t>\n\t\t\t\t\t\t{labels.length > 0 &&\n\t\t\t\t\t\t\tlabels.map(label => (\n\t\t\t\t\t\t\t\t<MenuItem\n\t\t\t\t\t\t\t\t\tonClick={ev => {\n\t\t\t\t\t\t\t\t\t\tdispatch(toggleLabelOnSelectedMails(label.id));\n\t\t\t\t\t\t\t\t\t\thandleMenuClose(ev, 'labels');\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tkey={label.id}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{label.title}\n\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t</Menu>\n\t\t\t\t</>\n\t\t\t)}\n\t\t</div>\n\t);\n}\n\nexport default MailToolbar;\n"]},"metadata":{},"sourceType":"module"}