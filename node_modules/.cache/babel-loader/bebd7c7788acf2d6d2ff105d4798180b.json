{"ast":null,"code":"var _jsxFileName = \"D:\\\\proyectos_react\\\\Proyecto_sena\\\\src\\\\app\\\\fuse-layouts\\\\shared-components\\\\SettingsPanel.js\";\nimport FuseScrollbars from '@fuse/core/FuseScrollbars';\nimport FuseSettings from '@fuse/core/FuseSettings';\nimport Button from '@material-ui/core/Button';\nimport { red } from '@material-ui/core/colors';\nimport Dialog from '@material-ui/core/Dialog';\nimport Icon from '@material-ui/core/Icon';\nimport IconButton from '@material-ui/core/IconButton';\nimport Slide from '@material-ui/core/Slide';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport clsx from 'clsx';\nimport React, { useState } from 'react';\nimport FuseThemeSchemes from '@fuse/core/FuseThemeSchemes';\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  const theme = useTheme();\n  return /*#__PURE__*/React.createElement(Slide, Object.assign({\n    direction: theme.direction === 'ltr' ? 'left' : 'right',\n    ref: ref\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }));\n});\nconst useStyles = makeStyles(theme => ({\n  buttonWrapper: {\n    position: 'absolute',\n    right: 0,\n    top: 160,\n    display: 'flex',\n    flexDirection: 'column',\n    items: 'center',\n    justify: 'center',\n    overflow: 'hidden',\n    opacity: 0.9,\n    padding: 0,\n    borderTopLeftRadius: 6,\n    borderBottomLeftRadius: 6,\n    borderBottomRightRadius: 0,\n    borderTopRightRadius: 0,\n    zIndex: 999,\n    color: theme.palette.getContrastText(red[500]),\n    backgroundColor: red[500],\n    '&:hover': {\n      backgroundColor: red[500],\n      opacity: 1\n    }\n  },\n  button: {\n    minWidth: 40,\n    width: 40,\n    height: 40,\n    margin: 0\n  },\n  settingsButton: {\n    '& $buttonIcon': {\n      animation: '$rotating 3s linear infinite'\n    }\n  },\n  schemesButton: {},\n  '@keyframes rotating': {\n    from: {\n      transform: 'rotate(0deg)'\n    },\n    to: {\n      transform: 'rotate(360deg)'\n    }\n  },\n  buttonIcon: {\n    fontSize: 20\n  },\n  dialogPaper: {\n    position: 'fixed',\n    width: 380,\n    maxWidth: '90vw',\n    backgroundColor: theme.palette.background.paper,\n    boxShadow: theme.shadows[5],\n    top: 0,\n    height: '100%',\n    minHeight: '100%',\n    bottom: 0,\n    right: 0,\n    margin: 0,\n    zIndex: 1000,\n    borderRadius: 0\n  }\n}));\n\nfunction SettingsPanel() {\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n\n  const handleOpen = panelId => {\n    setOpen(panelId);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Dialog, {\n    TransitionComponent: Transition,\n    \"aria-labelledby\": \"settings-panel\",\n    \"aria-describedby\": \"settings\",\n    open: open === 'settings',\n    keepMounted: true,\n    onClose: handleClose,\n    BackdropProps: {\n      invisible: true\n    },\n    classes: {\n      paper: classes.dialogPaper\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(FuseScrollbars, {\n    className: \"p-16 sm:p-32\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    className: \"fixed top-0 ltr:right-0 rtl:left-0 z-10\",\n    onClick: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  }, \"close\")), /*#__PURE__*/React.createElement(Typography, {\n    className: \"mb-32\",\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 6\n    }\n  }, \"Theme Settings\"), /*#__PURE__*/React.createElement(FuseSettings, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 6\n    }\n  }))), /*#__PURE__*/React.createElement(Dialog, {\n    TransitionComponent: Transition,\n    \"aria-labelledby\": \"schemes-panel\",\n    \"aria-describedby\": \"schemes\",\n    open: open === 'schemes',\n    keepMounted: true,\n    onClose: handleClose,\n    BackdropProps: {\n      invisible: true\n    },\n    classes: {\n      paper: classes.dialogPaper\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(FuseScrollbars, {\n    className: \"p-16 sm:p-32\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    className: \"fixed top-0 ltr:right-0 rtl:left-0 z-10\",\n    onClick: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }\n  }, \"close\")), /*#__PURE__*/React.createElement(Typography, {\n    className: \"mb-32\",\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 6\n    }\n  }, \"Theme Color Schemes\"), /*#__PURE__*/React.createElement(Typography, {\n    className: \"mb-24 text-12 italic text-justify\",\n    color: \"textSecondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 6\n    }\n  }, \"* Selected color scheme will be applied to all theme layout elements (navbar, toolbar, etc.). You can also select a different color scheme for each layout element at theme settings.\"), /*#__PURE__*/React.createElement(FuseThemeSchemes, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 6\n    }\n  }))));\n}\n\nexport default React.memo(SettingsPanel);","map":{"version":3,"sources":["D:/proyectos_react/Proyecto_sena/src/app/fuse-layouts/shared-components/SettingsPanel.js"],"names":["FuseScrollbars","FuseSettings","Button","red","Dialog","Icon","IconButton","Slide","makeStyles","useTheme","Typography","clsx","React","useState","FuseThemeSchemes","Transition","forwardRef","props","ref","theme","direction","useStyles","buttonWrapper","position","right","top","display","flexDirection","items","justify","overflow","opacity","padding","borderTopLeftRadius","borderBottomLeftRadius","borderBottomRightRadius","borderTopRightRadius","zIndex","color","palette","getContrastText","backgroundColor","button","minWidth","width","height","margin","settingsButton","animation","schemesButton","from","transform","to","buttonIcon","fontSize","dialogPaper","maxWidth","background","paper","boxShadow","shadows","minHeight","bottom","borderRadius","SettingsPanel","classes","open","setOpen","handleOpen","panelId","handleClose","invisible","memo"],"mappings":"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","sourcesContent":["import FuseScrollbars from '@fuse/core/FuseScrollbars';\nimport FuseSettings from '@fuse/core/FuseSettings';\nimport Button from '@material-ui/core/Button';\nimport { red } from '@material-ui/core/colors';\nimport Dialog from '@material-ui/core/Dialog';\nimport Icon from '@material-ui/core/Icon';\nimport IconButton from '@material-ui/core/IconButton';\nimport Slide from '@material-ui/core/Slide';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport clsx from 'clsx';\nimport React, { useState } from 'react';\nimport FuseThemeSchemes from '@fuse/core/FuseThemeSchemes';\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n\tconst theme = useTheme();\n\treturn <Slide direction={theme.direction === 'ltr' ? 'left' : 'right'} ref={ref} {...props} />;\n});\n\nconst useStyles = makeStyles(theme => ({\n\tbuttonWrapper: {\n\t\tposition: 'absolute',\n\t\tright: 0,\n\t\ttop: 160,\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'column',\n\t\titems: 'center',\n\t\tjustify: 'center',\n\t\toverflow: 'hidden',\n\t\topacity: 0.9,\n\t\tpadding: 0,\n\t\tborderTopLeftRadius: 6,\n\t\tborderBottomLeftRadius: 6,\n\t\tborderBottomRightRadius: 0,\n\t\tborderTopRightRadius: 0,\n\t\tzIndex: 999,\n\t\tcolor: theme.palette.getContrastText(red[500]),\n\t\tbackgroundColor: red[500],\n\t\t'&:hover': {\n\t\t\tbackgroundColor: red[500],\n\t\t\topacity: 1\n\t\t}\n\t},\n\tbutton: {\n\t\tminWidth: 40,\n\t\twidth: 40,\n\t\theight: 40,\n\t\tmargin: 0\n\t},\n\tsettingsButton: {\n\t\t'& $buttonIcon': {\n\t\t\tanimation: '$rotating 3s linear infinite'\n\t\t}\n\t},\n\tschemesButton: {},\n\t'@keyframes rotating': {\n\t\tfrom: {\n\t\t\ttransform: 'rotate(0deg)'\n\t\t},\n\t\tto: {\n\t\t\ttransform: 'rotate(360deg)'\n\t\t}\n\t},\n\tbuttonIcon: {\n\t\tfontSize: 20\n\t},\n\tdialogPaper: {\n\t\tposition: 'fixed',\n\t\twidth: 380,\n\t\tmaxWidth: '90vw',\n\t\tbackgroundColor: theme.palette.background.paper,\n\t\tboxShadow: theme.shadows[5],\n\t\ttop: 0,\n\t\theight: '100%',\n\t\tminHeight: '100%',\n\t\tbottom: 0,\n\t\tright: 0,\n\t\tmargin: 0,\n\t\tzIndex: 1000,\n\t\tborderRadius: 0\n\t}\n}));\n\nfunction SettingsPanel() {\n\tconst classes = useStyles();\n\tconst [open, setOpen] = useState(false);\n\n\tconst handleOpen = panelId => {\n\t\tsetOpen(panelId);\n\t};\n\n\tconst handleClose = () => {\n\t\tsetOpen(false);\n\t};\n\n\treturn (\n\t\t<>\n\t\t\n\n\t\t\t<Dialog\n\t\t\t\tTransitionComponent={Transition}\n\t\t\t\taria-labelledby=\"settings-panel\"\n\t\t\t\taria-describedby=\"settings\"\n\t\t\t\topen={open === 'settings'}\n\t\t\t\tkeepMounted\n\t\t\t\tonClose={handleClose}\n\t\t\t\tBackdropProps={{ invisible: true }}\n\t\t\t\tclasses={{\n\t\t\t\t\tpaper: classes.dialogPaper\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<FuseScrollbars className=\"p-16 sm:p-32\">\n\t\t\t\t\t<IconButton className=\"fixed top-0 ltr:right-0 rtl:left-0 z-10\" onClick={handleClose}>\n\t\t\t\t\t\t<Icon>close</Icon>\n\t\t\t\t\t</IconButton>\n\n\t\t\t\t\t<Typography className=\"mb-32\" variant=\"h6\">\n\t\t\t\t\t\tTheme Settings\n\t\t\t\t\t</Typography>\n\n\t\t\t\t\t<FuseSettings />\n\t\t\t\t</FuseScrollbars>\n\t\t\t</Dialog>\n\n\t\t\t<Dialog\n\t\t\t\tTransitionComponent={Transition}\n\t\t\t\taria-labelledby=\"schemes-panel\"\n\t\t\t\taria-describedby=\"schemes\"\n\t\t\t\topen={open === 'schemes'}\n\t\t\t\tkeepMounted\n\t\t\t\tonClose={handleClose}\n\t\t\t\tBackdropProps={{ invisible: true }}\n\t\t\t\tclasses={{\n\t\t\t\t\tpaper: classes.dialogPaper\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<FuseScrollbars className=\"p-16 sm:p-32\">\n\t\t\t\t\t<IconButton className=\"fixed top-0 ltr:right-0 rtl:left-0 z-10\" onClick={handleClose}>\n\t\t\t\t\t\t<Icon>close</Icon>\n\t\t\t\t\t</IconButton>\n\n\t\t\t\t\t<Typography className=\"mb-32\" variant=\"h6\">\n\t\t\t\t\t\tTheme Color Schemes\n\t\t\t\t\t</Typography>\n\n\t\t\t\t\t<Typography className=\"mb-24 text-12 italic text-justify\" color=\"textSecondary\">\n\t\t\t\t\t\t* Selected color scheme will be applied to all theme layout elements (navbar, toolbar, etc.).\n\t\t\t\t\t\tYou can also select a different color scheme for each layout element at theme settings.\n\t\t\t\t\t</Typography>\n\n\t\t\t\t\t<FuseThemeSchemes />\n\t\t\t\t</FuseScrollbars>\n\t\t\t</Dialog>\n\t\t</>\n\t);\n}\n\nexport default React.memo(SettingsPanel);\n"]},"metadata":{},"sourceType":"module"}