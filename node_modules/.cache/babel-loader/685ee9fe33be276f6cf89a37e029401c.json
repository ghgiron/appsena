{"ast":null,"code":"var _jsxFileName = \"D:\\\\proyectos_react\\\\Proyecto_sena\\\\src\\\\app\\\\main\\\\apps\\\\notes\\\\note-form\\\\NoteFormLabelMenu.js\";\nimport _ from '@lodash';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport Icon from '@material-ui/core/Icon';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Popover from '@material-ui/core/Popover';\nimport React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\n\nfunction NoteFormLabelMenu(props) {\n  const labels = useSelector(({\n    notesApp\n  }) => notesApp.labels.entities);\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  function handleMenuClick(event) {\n    setAnchorEl(event.currentTarget);\n  }\n\n  function handleMenuClose() {\n    setAnchorEl(null);\n  }\n\n  function handleToggleLabel(id) {\n    props.onChange(_.xor(props.note.labels, [id]));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    className: \"w-32 h-32 mx-4 p-0\",\n    onClick: handleMenuClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    fontSize: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, \"label\")), /*#__PURE__*/React.createElement(Popover, {\n    hideBackdrop: true,\n    open: Boolean(anchorEl),\n    anchorEl: anchorEl,\n    onClose: handleMenuClose,\n    anchorOrigin: {\n      vertical: 'bottom',\n      horizontal: 'center'\n    },\n    transformOrigin: {\n      vertical: 'top',\n      horizontal: 'center'\n    },\n    className: \"pointer-events-none\",\n    classes: {\n      paper: 'pointer-events-auto py-8 prevent-add-close'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(ClickAwayListener, {\n    onClickAway: handleMenuClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    className: \"p-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 6\n    }\n  }, Object.entries(labels).map(([key, label]) => /*#__PURE__*/React.createElement(ListItem, {\n    key: label.id,\n    button: true,\n    dense: true,\n    onClick: () => handleToggleLabel(label.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    className: \"list-item-icon text-16\",\n    color: \"action\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, props.note.labels.includes(label.id) ? 'check_box' : 'check_box_outline_blank'), /*#__PURE__*/React.createElement(ListItemText, {\n    className: \"truncate px-8\",\n    primary: label.name,\n    disableTypography: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  })))))));\n}\n\nexport default NoteFormLabelMenu;","map":{"version":3,"sources":["D:/proyectos_react/Proyecto_sena/src/app/main/apps/notes/note-form/NoteFormLabelMenu.js"],"names":["_","ClickAwayListener","Icon","IconButton","List","ListItem","ListItemText","Popover","React","useState","useSelector","NoteFormLabelMenu","props","labels","notesApp","entities","anchorEl","setAnchorEl","handleMenuClick","event","currentTarget","handleMenuClose","handleToggleLabel","id","onChange","xor","note","Boolean","vertical","horizontal","paper","Object","entries","map","key","label","includes","name"],"mappings":"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","sourcesContent":["import _ from '@lodash';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport Icon from '@material-ui/core/Icon';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Popover from '@material-ui/core/Popover';\nimport React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\n\nfunction NoteFormLabelMenu(props) {\n\tconst labels = useSelector(({ notesApp }) => notesApp.labels.entities);\n\n\tconst [anchorEl, setAnchorEl] = useState(null);\n\n\tfunction handleMenuClick(event) {\n\t\tsetAnchorEl(event.currentTarget);\n\t}\n\n\tfunction handleMenuClose() {\n\t\tsetAnchorEl(null);\n\t}\n\n\tfunction handleToggleLabel(id) {\n\t\tprops.onChange(_.xor(props.note.labels, [id]));\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t<IconButton className=\"w-32 h-32 mx-4 p-0\" onClick={handleMenuClick}>\n\t\t\t\t<Icon fontSize=\"small\">label</Icon>\n\t\t\t</IconButton>\n\t\t\t<Popover\n\t\t\t\thideBackdrop\n\t\t\t\topen={Boolean(anchorEl)}\n\t\t\t\tanchorEl={anchorEl}\n\t\t\t\tonClose={handleMenuClose}\n\t\t\t\tanchorOrigin={{\n\t\t\t\t\tvertical: 'bottom',\n\t\t\t\t\thorizontal: 'center'\n\t\t\t\t}}\n\t\t\t\ttransformOrigin={{\n\t\t\t\t\tvertical: 'top',\n\t\t\t\t\thorizontal: 'center'\n\t\t\t\t}}\n\t\t\t\tclassName=\"pointer-events-none\"\n\t\t\t\tclasses={{\n\t\t\t\t\tpaper: 'pointer-events-auto py-8 prevent-add-close'\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<ClickAwayListener onClickAway={handleMenuClose}>\n\t\t\t\t\t<List className=\"p-0\">\n\t\t\t\t\t\t{Object.entries(labels).map(([key, label]) => (\n\t\t\t\t\t\t\t<ListItem key={label.id} button dense onClick={() => handleToggleLabel(label.id)}>\n\t\t\t\t\t\t\t\t<Icon className=\"list-item-icon text-16\" color=\"action\">\n\t\t\t\t\t\t\t\t\t{props.note.labels.includes(label.id) ? 'check_box' : 'check_box_outline_blank'}\n\t\t\t\t\t\t\t\t</Icon>\n\t\t\t\t\t\t\t\t<ListItemText className=\"truncate px-8\" primary={label.name} disableTypography />\n\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</List>\n\t\t\t\t</ClickAwayListener>\n\t\t\t</Popover>\n\t\t</div>\n\t);\n}\n\nexport default NoteFormLabelMenu;\n"]},"metadata":{},"sourceType":"module"}