{"ast":null,"code":"import { createSlice, createAsyncThunk, createEntityAdapter } from '@reduxjs/toolkit';\nimport axios from 'axios';\nexport const getFiles = createAsyncThunk('fileManagerApp/files/getFiles', async () => {\n  const response = await axios.get('/api/file-manager-app/files');\n  const data = await response.data;\n  return data;\n});\nconst filesAdapter = createEntityAdapter({});\nexport const {\n  selectAll: selectFiles,\n  selectEntities: selectFilesEntities,\n  selectById: selectFileById\n} = filesAdapter.getSelectors(state => state.fileManagerApp.files);\nconst filesSlice = createSlice({\n  name: 'fileManagerApp/files',\n  initialState: filesAdapter.getInitialState({\n    selectedItemId: '1'\n  }),\n  reducers: {\n    setSelectedItem: (state, action) => {\n      state.selectedItemId = action.payload;\n    }\n  },\n  extraReducers: {\n    [getFiles.fulfilled]: filesAdapter.setAll\n  }\n});\nexport const {\n  setSelectedItem\n} = filesSlice.actions;\nexport default filesSlice.reducer;","map":{"version":3,"sources":["D:/proyectos_react/Proyecto_sena/src/app/main/apps/file-manager/store/filesSlice.js"],"names":["createSlice","createAsyncThunk","createEntityAdapter","axios","getFiles","response","get","data","filesAdapter","selectAll","selectFiles","selectEntities","selectFilesEntities","selectById","selectFileById","getSelectors","state","fileManagerApp","files","filesSlice","name","initialState","getInitialState","selectedItemId","reducers","setSelectedItem","action","payload","extraReducers","fulfilled","setAll","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,gBAAtB,EAAwCC,mBAAxC,QAAmE,kBAAnE;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,QAAQ,GAAGH,gBAAgB,CAAC,+BAAD,EAAkC,YAAY;AACrF,QAAMI,QAAQ,GAAG,MAAMF,KAAK,CAACG,GAAN,CAAU,6BAAV,CAAvB;AACA,QAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAA5B;AAEA,SAAOA,IAAP;AACA,CALuC,CAAjC;AAOP,MAAMC,YAAY,GAAGN,mBAAmB,CAAC,EAAD,CAAxC;AAEA,OAAO,MAAM;AACZO,EAAAA,SAAS,EAAEC,WADC;AAEZC,EAAAA,cAAc,EAAEC,mBAFJ;AAGZC,EAAAA,UAAU,EAAEC;AAHA,IAITN,YAAY,CAACO,YAAb,CAA0BC,KAAK,IAAIA,KAAK,CAACC,cAAN,CAAqBC,KAAxD,CAJG;AAMP,MAAMC,UAAU,GAAGnB,WAAW,CAAC;AAC9BoB,EAAAA,IAAI,EAAE,sBADwB;AAE9BC,EAAAA,YAAY,EAAEb,YAAY,CAACc,eAAb,CAA6B;AAC1CC,IAAAA,cAAc,EAAE;AAD0B,GAA7B,CAFgB;AAK9BC,EAAAA,QAAQ,EAAE;AACTC,IAAAA,eAAe,EAAE,CAACT,KAAD,EAAQU,MAAR,KAAmB;AACnCV,MAAAA,KAAK,CAACO,cAAN,GAAuBG,MAAM,CAACC,OAA9B;AACA;AAHQ,GALoB;AAU9BC,EAAAA,aAAa,EAAE;AACd,KAACxB,QAAQ,CAACyB,SAAV,GAAsBrB,YAAY,CAACsB;AADrB;AAVe,CAAD,CAA9B;AAeA,OAAO,MAAM;AAAEL,EAAAA;AAAF,IAAsBN,UAAU,CAACY,OAAvC;AAEP,eAAeZ,UAAU,CAACa,OAA1B","sourcesContent":["import { createSlice, createAsyncThunk, createEntityAdapter } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\nexport const getFiles = createAsyncThunk('fileManagerApp/files/getFiles', async () => {\n\tconst response = await axios.get('/api/file-manager-app/files');\n\tconst data = await response.data;\n\n\treturn data;\n});\n\nconst filesAdapter = createEntityAdapter({});\n\nexport const {\n\tselectAll: selectFiles,\n\tselectEntities: selectFilesEntities,\n\tselectById: selectFileById\n} = filesAdapter.getSelectors(state => state.fileManagerApp.files);\n\nconst filesSlice = createSlice({\n\tname: 'fileManagerApp/files',\n\tinitialState: filesAdapter.getInitialState({\n\t\tselectedItemId: '1'\n\t}),\n\treducers: {\n\t\tsetSelectedItem: (state, action) => {\n\t\t\tstate.selectedItemId = action.payload;\n\t\t}\n\t},\n\textraReducers: {\n\t\t[getFiles.fulfilled]: filesAdapter.setAll\n\t}\n});\n\nexport const { setSelectedItem } = filesSlice.actions;\n\nexport default filesSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}