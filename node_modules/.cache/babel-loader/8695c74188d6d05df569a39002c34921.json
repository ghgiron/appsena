{"ast":null,"code":"var _jsxFileName = \"D:\\\\proyectos_react\\\\Proyecto_sena\\\\src\\\\app\\\\main\\\\documentation\\\\theming\\\\rtl-support\\\\RTLSupportDoc.js\";\nimport FuseHighlight from '@fuse/core/FuseHighlight';\nimport Typography from '@material-ui/core/Typography';\nimport React from 'react';\n/* eslint import/no-webpack-loader-syntax: off */\n\nfunction RTLSupportDoc() {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h4\",\n    className: \"mb-24\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 4\n    }\n  }, \"RTL Support\"), /*#__PURE__*/React.createElement(Typography, {\n    className: \"mb-16\",\n    component: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 4\n    }\n  }, \"Fuse React supports Right-to-left languages such as Arabic, Persian or Hebrew, etc.\"), /*#__PURE__*/React.createElement(Typography, {\n    className: \"mb-8\",\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 4\n    }\n  }, \"Development\"), /*#__PURE__*/React.createElement(Typography, {\n    className: \"mb-16\",\n    component: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 4\n    }\n  }, \"There are two plugins\", ' ', /*#__PURE__*/React.createElement(\"a\", {\n    href: \"https://github.com/RonMelkhior/tailwindcss-dir\",\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 6\n    }\n  }, \"tailwindcss-dir\")), ' ', \"and\", ' ', /*#__PURE__*/React.createElement(\"a\", {\n    href: \"https://github.com/alitaheri/jss-rtl\",\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 6\n    }\n  }, \"jss-rtl\")), ' ', \"that we use to develop RTL support of the Fuse React.\"), /*#__PURE__*/React.createElement(Typography, {\n    className: \"mb-16\",\n    component: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"https://github.com/alitaheri/jss-rtl\",\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 6\n    }\n  }, \"jss-rtl\")), ' ', \"enables right-to-left support by flipping every rule of the jss styles on the x-axis. You can write the application left-to-right and then turn it into right-to-left using this plugin. Or you can start right-to-left and turn it into left-to-right.\"), /*#__PURE__*/React.createElement(Typography, {\n    className: \"mb-16\",\n    component: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"https://github.com/RonMelkhior/tailwindcss-dir\",\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 6\n    }\n  }, \"tailwindcss-dir\")), ' ', \"adds a custom direction variant to your tailwind project, letting you have custom CSS rules for LTR and RTL layouts. For example:\"), /*#__PURE__*/React.createElement(FuseHighlight, {\n    component: \"pre\",\n    className: \"language-jsx mb-24\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 4\n    }\n  }, `\n                            <div class=\"text-green text-2xl ltr:pl-4 rtl:pr-4\">\n                                Hello, world.\n                            </div>\n                        `), /*#__PURE__*/React.createElement(Typography, {\n    className: \"mb-8\",\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 4\n    }\n  }, \"Configuration\"), /*#__PURE__*/React.createElement(Typography, {\n    className: \"mb-16\",\n    component: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 4\n    }\n  }, \"To change the default direction of the Fuse React, you need to change \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 75\n    }\n  }, \"direction\"), \"setting in the file \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 25\n    }\n  }, \"src/app/fuse-configs/settingsConfig.js\")), /*#__PURE__*/React.createElement(FuseHighlight, {\n    component: \"pre\",\n    className: \"language-jsx mb-24\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 4\n    }\n  }, require('!raw-loader!app/fuse-configs/settingsConfig.js')), /*#__PURE__*/React.createElement(Typography, {\n    className: \"mb-8\",\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 4\n    }\n  }, \"Dynamically Direction Changing\"), /*#__PURE__*/React.createElement(Typography, {\n    className: \"mb-16\",\n    component: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 4\n    }\n  }, \"If you need to change theme direction dynamically, for example when you need to change LTR to RTL language, you need dispatch an action as below:\"), /*#__PURE__*/React.createElement(FuseHighlight, {\n    component: \"pre\",\n    className: \"language-jsx mb-24\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 4\n    }\n  }, `\n                            dispatch(setDefaultSettings({direction: 'rtl'}));\n                        `), /*#__PURE__*/React.createElement(Typography, {\n    className: \"mb-16\",\n    component: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 4\n    }\n  }, \"Checkout example usage at\", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 5\n    }\n  }, \"src/app/fuse-layouts/shared-components/LanguageSwitcher.js\")));\n}\n\nexport default RTLSupportDoc;","map":{"version":3,"sources":["D:/proyectos_react/Proyecto_sena/src/app/main/documentation/theming/rtl-support/RTLSupportDoc.js"],"names":["FuseHighlight","Typography","React","RTLSupportDoc","require"],"mappings":"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","sourcesContent":["import FuseHighlight from '@fuse/core/FuseHighlight';\nimport Typography from '@material-ui/core/Typography';\nimport React from 'react';\n\n/* eslint import/no-webpack-loader-syntax: off */\n\nfunction RTLSupportDoc() {\n\treturn (\n\t\t<>\n\t\t\t<Typography variant=\"h4\" className=\"mb-24\">\n\t\t\t\tRTL Support\n\t\t\t</Typography>\n\n\t\t\t<Typography className=\"mb-16\" component=\"p\">\n\t\t\t\tFuse React supports Right-to-left languages such as Arabic, Persian or Hebrew, etc.\n\t\t\t</Typography>\n\n\t\t\t<Typography className=\"mb-8\" variant=\"h5\">\n\t\t\t\tDevelopment\n\t\t\t</Typography>\n\n\t\t\t<Typography className=\"mb-16\" component=\"p\">\n\t\t\t\tThere are two plugins{' '}\n\t\t\t\t<a\n\t\t\t\t\thref=\"https://github.com/RonMelkhior/tailwindcss-dir\"\n\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t>\n\t\t\t\t\t<code>tailwindcss-dir</code>\n\t\t\t\t</a>{' '}\n\t\t\t\tand{' '}\n\t\t\t\t<a\n\t\t\t\t\thref=\"https://github.com/alitaheri/jss-rtl\"\n\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t>\n\t\t\t\t\t<code>jss-rtl</code>\n\t\t\t\t</a>{' '}\n\t\t\t\tthat we use to develop RTL support of the Fuse React.\n\t\t\t</Typography>\n\n\t\t\t<Typography className=\"mb-16\" component=\"p\">\n\t\t\t\t<a\n\t\t\t\t\thref=\"https://github.com/alitaheri/jss-rtl\"\n\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t>\n\t\t\t\t\t<code>jss-rtl</code>\n\t\t\t\t</a>{' '}\n\t\t\t\tenables right-to-left support by flipping every rule of the jss styles on the x-axis. You can write the\n\t\t\t\tapplication left-to-right and then turn it into right-to-left using this plugin. Or you can start\n\t\t\t\tright-to-left and turn it into left-to-right.\n\t\t\t</Typography>\n\n\t\t\t<Typography className=\"mb-16\" component=\"p\">\n\t\t\t\t<a\n\t\t\t\t\thref=\"https://github.com/RonMelkhior/tailwindcss-dir\"\n\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t>\n\t\t\t\t\t<code>tailwindcss-dir</code>\n\t\t\t\t</a>{' '}\n\t\t\t\tadds a custom direction variant to your tailwind project, letting you have custom CSS rules for LTR and\n\t\t\t\tRTL layouts. For example:\n\t\t\t</Typography>\n\n\t\t\t<FuseHighlight component=\"pre\" className=\"language-jsx mb-24\">\n\t\t\t\t{`\n                            <div class=\"text-green text-2xl ltr:pl-4 rtl:pr-4\">\n                                Hello, world.\n                            </div>\n                        `}\n\t\t\t</FuseHighlight>\n\n\t\t\t<Typography className=\"mb-8\" variant=\"h5\">\n\t\t\t\tConfiguration\n\t\t\t</Typography>\n\n\t\t\t<Typography className=\"mb-16\" component=\"p\">\n\t\t\t\tTo change the default direction of the Fuse React, you need to change <code>direction</code>\n\t\t\t\tsetting in the file <code>src/app/fuse-configs/settingsConfig.js</code>\n\t\t\t</Typography>\n\n\t\t\t<FuseHighlight component=\"pre\" className=\"language-jsx mb-24\">\n\t\t\t\t{require('!raw-loader!app/fuse-configs/settingsConfig.js')}\n\t\t\t</FuseHighlight>\n\n\t\t\t<Typography className=\"mb-8\" variant=\"h5\">\n\t\t\t\tDynamically Direction Changing\n\t\t\t</Typography>\n\n\t\t\t<Typography className=\"mb-16\" component=\"p\">\n\t\t\t\tIf you need to change theme direction dynamically, for example when you need to change LTR to RTL\n\t\t\t\tlanguage, you need dispatch an action as below:\n\t\t\t</Typography>\n\n\t\t\t<FuseHighlight component=\"pre\" className=\"language-jsx mb-24\">\n\t\t\t\t{`\n                            dispatch(setDefaultSettings({direction: 'rtl'}));\n                        `}\n\t\t\t</FuseHighlight>\n\n\t\t\t<Typography className=\"mb-16\" component=\"p\">\n\t\t\t\tCheckout example usage at\n\t\t\t\t<code>src/app/fuse-layouts/shared-components/LanguageSwitcher.js</code>\n\t\t\t</Typography>\n\t\t</>\n\t);\n}\n\nexport default RTLSupportDoc;\n"]},"metadata":{},"sourceType":"module"}