{"ast":null,"code":"var _jsxFileName = \"D:\\\\proyectos_react\\\\Proyecto_sena\\\\src\\\\app\\\\main\\\\documentation\\\\material-ui-components\\\\pages\\\\RadioButtons.js\";\nimport React from 'react';\nimport FuseExample from '@fuse/core/FuseExample';\nimport FuseHighlight from '@fuse/core/FuseHighlight';\nimport Button from '@material-ui/core/Button';\nimport Icon from '@material-ui/core/Icon';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n/* eslint import/no-webpack-loader-syntax: off */\n\n/* eslint no-unused-vars: off */\n\n/* eslint-disable jsx-a11y/accessible-emoji */\n\nconst useStyles = makeStyles(theme => ({\n  layoutRoot: {\n    '& .description': {\n      marginBottom: 16\n    }\n  }\n}));\n\nfunction RadioButtonsDoc(props) {\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex flex-1 flex-grow-0 items-center justify-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"normal-case\",\n    variant: \"outlined\",\n    component: \"a\",\n    href: \"https://material-ui.com/components/radio-buttons\",\n    target: \"_blank\",\n    role: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 21\n    }\n  }, \"link\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"mx-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 21\n    }\n  }, \"Reference\"))), /*#__PURE__*/React.createElement(Typography, {\n    className: \"text-44 mt-32 mb-8\",\n    component: \"h1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, \"Radio\"), /*#__PURE__*/React.createElement(Typography, {\n    className: \"description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, \"Radio buttons allow the user to select one option from a set.\"), /*#__PURE__*/React.createElement(Typography, {\n    className: \"mb-16\",\n    component: \"div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, \"Use \", /*#__PURE__*/React.createElement(\"a\", {\n    href: \"https://material.io/design/components/selection-controls.html#radio-buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 63\n    }\n  }, \"radio buttons\"), \" when the user needs to see all available options. If available options can be collapsed, consider using a dropdown menu because it uses less space.\"), /*#__PURE__*/React.createElement(Typography, {\n    className: \"mb-16\",\n    component: \"div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, \"Radio buttons should have the most commonly used option selected by default.\"), /*#__PURE__*/React.createElement(Typography, {\n    className: \"text-32 mt-32 mb-8\",\n    component: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, \"RadioGroup\"), /*#__PURE__*/React.createElement(Typography, {\n    className: \"mb-16\",\n    component: \"div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 59\n    }\n  }, `RadioGroup`), \" is a helpful wrapper used to group \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 122\n    }\n  }, `Radio`), \" components that provides an easier API, and proper keyboard accessibility to the group.\"), /*#__PURE__*/React.createElement(Typography, {\n    className: \"mb-16\",\n    component: \"div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FuseExample, {\n    className: \"my-24\",\n    iframe: false,\n    component: require('app/main/documentation/material-ui-components/components/radio-buttons/RadioButtonsGroup.js').default,\n    raw: require('!raw-loader!app/main/documentation/material-ui-components/components/radio-buttons/RadioButtonsGroup.js'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 59\n    }\n  })), /*#__PURE__*/React.createElement(Typography, {\n    className: \"mb-16\",\n    component: \"div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, \"To lay out the buttons horizontally, set the \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 104\n    }\n  }, `row`), \" prop: \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 131\n    }\n  }, `<RadioGroup row />`), \".\"), /*#__PURE__*/React.createElement(Typography, {\n    className: \"text-32 mt-32 mb-8\",\n    component: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, \"Standalone radio buttons\"), /*#__PURE__*/React.createElement(Typography, {\n    className: \"mb-16\",\n    component: \"div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 59\n    }\n  }, `Radio`), \" can also be used standalone, without the RadioGroup wrapper.\"), /*#__PURE__*/React.createElement(Typography, {\n    className: \"mb-16\",\n    component: \"div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FuseExample, {\n    className: \"my-24\",\n    iframe: false,\n    component: require('app/main/documentation/material-ui-components/components/radio-buttons/RadioButtons.js').default,\n    raw: require('!raw-loader!app/main/documentation/material-ui-components/components/radio-buttons/RadioButtons.js'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 59\n    }\n  })), /*#__PURE__*/React.createElement(Typography, {\n    className: \"text-32 mt-32 mb-8\",\n    component: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, \"Label placement\"), /*#__PURE__*/React.createElement(Typography, {\n    className: \"mb-16\",\n    component: \"div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, \"You can change the placement of the label with the \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }\n  }, `FormControlLabel`), \" component's \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 71\n    }\n  }, `labelPlacement`), \" prop:\"), /*#__PURE__*/React.createElement(Typography, {\n    className: \"mb-16\",\n    component: \"div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FuseExample, {\n    className: \"my-24\",\n    iframe: false,\n    component: require('app/main/documentation/material-ui-components/components/radio-buttons/FormControlLabelPlacement.js').default,\n    raw: require('!raw-loader!app/main/documentation/material-ui-components/components/radio-buttons/FormControlLabelPlacement.js'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 59\n    }\n  })), /*#__PURE__*/React.createElement(Typography, {\n    className: \"text-32 mt-32 mb-8\",\n    component: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, \"Show error\"), /*#__PURE__*/React.createElement(Typography, {\n    className: \"mb-16\",\n    component: \"div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, \"In general, radio buttons should have a value selected by default. If this is not the case, you can display an error if no value is selected when the form is submitted:\"), /*#__PURE__*/React.createElement(Typography, {\n    className: \"mb-16\",\n    component: \"div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FuseExample, {\n    className: \"my-24\",\n    iframe: false,\n    component: require('app/main/documentation/material-ui-components/components/radio-buttons/ErrorRadios.js').default,\n    raw: require('!raw-loader!app/main/documentation/material-ui-components/components/radio-buttons/ErrorRadios.js'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 59\n    }\n  })), /*#__PURE__*/React.createElement(Typography, {\n    className: \"text-32 mt-32 mb-8\",\n    component: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, \"Customized radios\"), /*#__PURE__*/React.createElement(Typography, {\n    className: \"mb-16\",\n    component: \"div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, \"Here is an example of customizing the component. You can learn more about this in the\", /*#__PURE__*/React.createElement(\"a\", {\n    href: \"/customization/components/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }, \"overrides documentation page\"), \".\"), /*#__PURE__*/React.createElement(Typography, {\n    className: \"mb-16\",\n    component: \"div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FuseExample, {\n    className: \"my-24\",\n    iframe: false,\n    component: require('app/main/documentation/material-ui-components/components/radio-buttons/CustomizedRadios.js').default,\n    raw: require('!raw-loader!app/main/documentation/material-ui-components/components/radio-buttons/CustomizedRadios.js'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 59\n    }\n  })), /*#__PURE__*/React.createElement(Typography, {\n    className: \"text-32 mt-32 mb-8\",\n    component: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, \"When to use\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"https://www.nngroup.com/articles/checkboxes-vs-radio-buttons/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 21\n    }\n  }, \"Checkboxes vs. Radio Buttons\"))), /*#__PURE__*/React.createElement(Typography, {\n    className: \"text-32 mt-32 mb-8\",\n    component: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, \"Accessibility\"), /*#__PURE__*/React.createElement(Typography, {\n    className: \"mb-16\",\n    component: \"div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, \"(WAI-ARIA: \", /*#__PURE__*/React.createElement(\"a\", {\n    href: \"https://www.w3.org/TR/wai-aria-practices/#radiobutton\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 70\n    }\n  }, \"https://www.w3.org/TR/wai-aria-practices/#radiobutton\"), \")\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }, \"All form controls should have labels, and this includes radio buttons, checkboxes, and switches. In most cases, this is done by using the \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 159\n    }\n  }, `<label>`), \" element (\", /*#__PURE__*/React.createElement(\"a\", {\n    href: \"/api/form-control-label/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 193\n    }\n  }, \"FormControlLabel\"), \").\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  }, \"When a label can't be used, it's necessary to add an attribute directly to the input component. In this case, you can apply the additional attribute (e.g. \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 80\n    }\n  }, `aria-label`), \", \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 109\n    }\n  }, `aria-labelledby`), \", \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 143\n    }\n  }, `title`), \") via the \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 25\n    }\n  }, `inputProps`), \" property.\")), /*#__PURE__*/React.createElement(FuseHighlight, {\n    component: \"pre\",\n    className: \"language-jsx\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }, ` \n<RadioButton\n  value=\"radioA\"\n  inputProps={{ 'aria-label': 'Radio A' \n/>\n`));\n}\n\nexport default RadioButtonsDoc;","map":{"version":3,"sources":["D:/proyectos_react/Proyecto_sena/src/app/main/documentation/material-ui-components/pages/RadioButtons.js"],"names":["React","FuseExample","FuseHighlight","Button","Icon","Typography","makeStyles","useStyles","theme","layoutRoot","marginBottom","RadioButtonsDoc","props","classes","require","default"],"mappings":"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","sourcesContent":["import React from 'react';\nimport FuseExample from '@fuse/core/FuseExample';\nimport FuseHighlight from '@fuse/core/FuseHighlight';\nimport Button from '@material-ui/core/Button';\nimport Icon from '@material-ui/core/Icon';\nimport Typography from '@material-ui/core/Typography';\nimport {makeStyles} from '@material-ui/core/styles';\n/* eslint import/no-webpack-loader-syntax: off */\n/* eslint no-unused-vars: off */\n/* eslint-disable jsx-a11y/accessible-emoji */\nconst useStyles = makeStyles(theme => ({\n    layoutRoot: {\n        '& .description': {\n            marginBottom: 16\n        }\n    }\n}));\n\nfunction RadioButtonsDoc(props)\n{\n    const classes = useStyles();\n    return (\n\n        <>\n            <div className=\"flex flex-1 flex-grow-0 items-center justify-end\">\n                <Button\n                    className=\"normal-case\"\n                    variant=\"outlined\"\n                    component=\"a\"\n                    href=\"https://material-ui.com/components/radio-buttons\"\n                    target=\"_blank\"\n                    role=\"button\"\n                >\n                    <Icon>link</Icon>\n                    <span className=\"mx-4\">Reference</span>\n                </Button>\n            </div>\n            <Typography className=\"text-44 mt-32 mb-8\" component=\"h1\">Radio</Typography>\n            <Typography className=\"description\">Radio buttons allow the user to select one option from a set.</Typography>\n\n            <Typography className=\"mb-16\" component=\"div\">Use <a href=\"https://material.io/design/components/selection-controls.html#radio-buttons\">radio buttons</a> when the user needs to see all\n                available options.\n                If available options can be collapsed, consider using a dropdown menu because it uses less space.</Typography>\n            <Typography className=\"mb-16\" component=\"div\">Radio buttons should have the most commonly used option selected by default.</Typography>\n            <Typography className=\"text-32 mt-32 mb-8\" component=\"h2\">RadioGroup</Typography>\n            <Typography className=\"mb-16\" component=\"div\"><code>{`RadioGroup`}</code> is a helpful wrapper used to group <code>{`Radio`}</code> components that provides an easier API, and proper\n                keyboard accessibility to the group.</Typography>\n            <Typography className=\"mb-16\" component=\"div\"><FuseExample\n                className=\"my-24\"\n                iframe={false}\n                component={require('app/main/documentation/material-ui-components/components/radio-buttons/RadioButtonsGroup.js').default}\n                raw={require('!raw-loader!app/main/documentation/material-ui-components/components/radio-buttons/RadioButtonsGroup.js')}\n            /></Typography>\n            <Typography className=\"mb-16\" component=\"div\">To lay out the buttons horizontally, set the <code>{`row`}</code> prop: <code>{`<RadioGroup row />`}</code>.</Typography>\n            <Typography className=\"text-32 mt-32 mb-8\" component=\"h2\">Standalone radio buttons</Typography>\n            <Typography className=\"mb-16\" component=\"div\"><code>{`Radio`}</code> can also be used standalone, without the RadioGroup wrapper.</Typography>\n            <Typography className=\"mb-16\" component=\"div\"><FuseExample\n                className=\"my-24\"\n                iframe={false}\n                component={require('app/main/documentation/material-ui-components/components/radio-buttons/RadioButtons.js').default}\n                raw={require('!raw-loader!app/main/documentation/material-ui-components/components/radio-buttons/RadioButtons.js')}\n            /></Typography>\n            <Typography className=\"text-32 mt-32 mb-8\" component=\"h2\">Label placement</Typography>\n            <Typography className=\"mb-16\" component=\"div\">You can change the placement of the label with\n                the <code>{`FormControlLabel`}</code> component&#39;s <code>{`labelPlacement`}</code> prop:</Typography>\n            <Typography className=\"mb-16\" component=\"div\"><FuseExample\n                className=\"my-24\"\n                iframe={false}\n                component={require('app/main/documentation/material-ui-components/components/radio-buttons/FormControlLabelPlacement.js').default}\n                raw={require('!raw-loader!app/main/documentation/material-ui-components/components/radio-buttons/FormControlLabelPlacement.js')}\n            /></Typography>\n            <Typography className=\"text-32 mt-32 mb-8\" component=\"h2\">Show error</Typography>\n            <Typography className=\"mb-16\" component=\"div\">In general, radio buttons should have a value selected by default. If this is not the case, you can display an error if no value is selected\n                when the form is submitted:</Typography>\n            <Typography className=\"mb-16\" component=\"div\"><FuseExample\n                className=\"my-24\"\n                iframe={false}\n                component={require('app/main/documentation/material-ui-components/components/radio-buttons/ErrorRadios.js').default}\n                raw={require('!raw-loader!app/main/documentation/material-ui-components/components/radio-buttons/ErrorRadios.js')}\n            /></Typography>\n            <Typography className=\"text-32 mt-32 mb-8\" component=\"h2\">Customized radios</Typography>\n            <Typography className=\"mb-16\" component=\"div\">Here is an example of customizing the component. You can learn more about this in the\n                <a href=\"/customization/components/\">overrides documentation page</a>.</Typography>\n            <Typography className=\"mb-16\" component=\"div\"><FuseExample\n                className=\"my-24\"\n                iframe={false}\n                component={require('app/main/documentation/material-ui-components/components/radio-buttons/CustomizedRadios.js').default}\n                raw={require('!raw-loader!app/main/documentation/material-ui-components/components/radio-buttons/CustomizedRadios.js')}\n            /></Typography>\n            <Typography className=\"text-32 mt-32 mb-8\" component=\"h2\">When to use</Typography>\n            <ul>\n                <li><a href=\"https://www.nngroup.com/articles/checkboxes-vs-radio-buttons/\">Checkboxes vs. Radio Buttons</a></li>\n            </ul>\n            <Typography className=\"text-32 mt-32 mb-8\" component=\"h2\">Accessibility</Typography>\n            <Typography className=\"mb-16\" component=\"div\">(WAI-ARIA: <a\n                href=\"https://www.w3.org/TR/wai-aria-practices/#radiobutton\">https://www.w3.org/TR/wai-aria-practices/#radiobutton</a>)</Typography>\n            <ul>\n                <li>All form controls should have labels, and this includes radio buttons, checkboxes, and switches. In most cases, this is done by using the <code>{`<label>`}</code> element (<a\n                    href=\"/api/form-control-label/\">FormControlLabel</a>).\n                </li>\n                <li>When a label can&#39;t be used, it&#39;s necessary to add an attribute directly to the input component.\n                    In this case, you can apply the additional attribute (e.g. <code>{`aria-label`}</code>, <code>{`aria-labelledby`}</code>, <code>{`title`}</code>) via\n                    the <code>{`inputProps`}</code> property.\n                </li>\n            </ul>\n\n            <FuseHighlight component=\"pre\" className=\"language-jsx\">\n                {` \n<RadioButton\n  value=\"radioA\"\n  inputProps={{ 'aria-label': 'Radio A' \n/>\n`}\n            </FuseHighlight>\n\n        </>\n\n    );\n}\n\nexport default RadioButtonsDoc;\n"]},"metadata":{},"sourceType":"module"}