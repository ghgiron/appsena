{"ast":null,"code":"var _jsxFileName = \"D:\\\\proyectos_react\\\\Proyecto_sena\\\\src\\\\app\\\\main\\\\apps\\\\contacts\\\\ContactsList.js\";\nimport FuseAnimate from '@fuse/core/FuseAnimate';\nimport FuseUtils from '@fuse/utils';\nimport Avatar from '@material-ui/core/Avatar';\nimport Icon from '@material-ui/core/Icon';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ContactsMultiSelectMenu from './ContactsMultiSelectMenu';\nimport ContactsTable from './ContactsTable';\nimport { openEditContactDialog, removeContact, toggleStarredContact, selectContacts } from './store/contactsSlice';\n\nfunction ContactsList(props) {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const searchText = useSelector(({\n    contactsApp\n  }) => contactsApp.contacts.searchText);\n  const user = useSelector(({\n    contactsApp\n  }) => contactsApp.user);\n  const [filteredData, setFilteredData] = useState(null);\n  const columns = React.useMemo(() => [{\n    Header: ({\n      selectedFlatRows\n    }) => {\n      const selectedRowIds = selectedFlatRows.map(row => row.original.id);\n      return selectedFlatRows.length > 0 && /*#__PURE__*/React.createElement(ContactsMultiSelectMenu, {\n        selectedContactIds: selectedRowIds,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 38\n        }\n      });\n    },\n    accessor: 'avatar',\n    Cell: ({\n      row\n    }) => {\n      return /*#__PURE__*/React.createElement(Avatar, {\n        className: \"mx-8\",\n        alt: row.original.name,\n        src: row.original.avatar,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }\n      });\n    },\n    className: 'justify-center',\n    width: 64,\n    sortable: false\n  }, {\n    Header: 'First Name',\n    accessor: 'name',\n    className: 'font-bold',\n    sortable: true\n  }, {\n    Header: 'Last Name',\n    accessor: 'lastName',\n    className: 'font-bold',\n    sortable: true\n  }, {\n    Header: 'Company',\n    accessor: 'company',\n    sortable: true\n  }, {\n    Header: 'Job Title',\n    accessor: 'jobTitle',\n    sortable: true\n  }, {\n    Header: 'Email',\n    accessor: 'email',\n    sortable: true\n  }, {\n    Header: 'Phone',\n    accessor: 'phone',\n    sortable: true\n  }, {\n    id: 'action',\n    width: 128,\n    sortable: false,\n    Cell: ({\n      row\n    }) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flex items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      onClick: ev => {\n        ev.stopPropagation();\n        dispatch(toggleStarredContact(row.original.id));\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }\n    }, user.starred && user.starred.includes(row.original.id) ? /*#__PURE__*/React.createElement(Icon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    }, \"star\") : /*#__PURE__*/React.createElement(Icon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }\n    }, \"star_border\")), /*#__PURE__*/React.createElement(IconButton, {\n      onClick: ev => {\n        ev.stopPropagation();\n        dispatch(removeContact(row.original.id));\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 8\n      }\n    }, \"delete\")))\n  }], [dispatch, user.starred]);\n  useEffect(() => {\n    function getFilteredArray(entities, _searchText) {\n      if (_searchText.length === 0) {\n        return contacts;\n      }\n\n      return FuseUtils.filterArrayByString(contacts, _searchText);\n    }\n\n    if (contacts) {\n      setFilteredData(getFilteredArray(contacts, searchText));\n    }\n  }, [contacts, searchText]);\n\n  if (!filteredData) {\n    return null;\n  }\n\n  if (filteredData.length === 0) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flex flex-1 items-center justify-center h-full\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      color: \"textSecondary\",\n      variant: \"h5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 5\n      }\n    }, \"There are no contacts!\"));\n  }\n\n  return /*#__PURE__*/React.createElement(FuseAnimate, {\n    animation: \"transition.slideUpIn\",\n    delay: 300,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(ContactsTable, {\n    columns: columns,\n    data: filteredData,\n    onRowClick: (ev, row) => {\n      if (row) {\n        dispatch(openEditContactDialog(row.original));\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 4\n    }\n  }));\n}\n\nexport default ContactsList;","map":{"version":3,"sources":["D:/proyectos_react/Proyecto_sena/src/app/main/apps/contacts/ContactsList.js"],"names":["FuseAnimate","FuseUtils","Avatar","Icon","IconButton","Typography","React","useEffect","useState","useDispatch","useSelector","ContactsMultiSelectMenu","ContactsTable","openEditContactDialog","removeContact","toggleStarredContact","selectContacts","ContactsList","props","dispatch","contacts","searchText","contactsApp","user","filteredData","setFilteredData","columns","useMemo","Header","selectedFlatRows","selectedRowIds","map","row","original","id","length","accessor","Cell","name","avatar","className","width","sortable","ev","stopPropagation","starred","includes","getFilteredArray","entities","_searchText","filterArrayByString"],"mappings":"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","sourcesContent":["import FuseAnimate from '@fuse/core/FuseAnimate';\nimport FuseUtils from '@fuse/utils';\nimport Avatar from '@material-ui/core/Avatar';\nimport Icon from '@material-ui/core/Icon';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ContactsMultiSelectMenu from './ContactsMultiSelectMenu';\nimport ContactsTable from './ContactsTable';\nimport { openEditContactDialog, removeContact, toggleStarredContact, selectContacts } from './store/contactsSlice';\n\nfunction ContactsList(props) {\n\tconst dispatch = useDispatch();\n\tconst contacts = useSelector(selectContacts);\n\tconst searchText = useSelector(({ contactsApp }) => contactsApp.contacts.searchText);\n\tconst user = useSelector(({ contactsApp }) => contactsApp.user);\n\n\tconst [filteredData, setFilteredData] = useState(null);\n\n\tconst columns = React.useMemo(\n\t\t() => [\n\t\t\t{\n\t\t\t\tHeader: ({ selectedFlatRows }) => {\n\t\t\t\t\tconst selectedRowIds = selectedFlatRows.map(row => row.original.id);\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\tselectedFlatRows.length > 0 && <ContactsMultiSelectMenu selectedContactIds={selectedRowIds} />\n\t\t\t\t\t);\n\t\t\t\t},\n\t\t\t\taccessor: 'avatar',\n\t\t\t\tCell: ({ row }) => {\n\t\t\t\t\treturn <Avatar className=\"mx-8\" alt={row.original.name} src={row.original.avatar} />;\n\t\t\t\t},\n\t\t\t\tclassName: 'justify-center',\n\t\t\t\twidth: 64,\n\t\t\t\tsortable: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tHeader: 'First Name',\n\t\t\t\taccessor: 'name',\n\t\t\t\tclassName: 'font-bold',\n\t\t\t\tsortable: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tHeader: 'Last Name',\n\t\t\t\taccessor: 'lastName',\n\t\t\t\tclassName: 'font-bold',\n\t\t\t\tsortable: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tHeader: 'Company',\n\t\t\t\taccessor: 'company',\n\t\t\t\tsortable: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tHeader: 'Job Title',\n\t\t\t\taccessor: 'jobTitle',\n\t\t\t\tsortable: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tHeader: 'Email',\n\t\t\t\taccessor: 'email',\n\t\t\t\tsortable: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tHeader: 'Phone',\n\t\t\t\taccessor: 'phone',\n\t\t\t\tsortable: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: 'action',\n\t\t\t\twidth: 128,\n\t\t\t\tsortable: false,\n\t\t\t\tCell: ({ row }) => (\n\t\t\t\t\t<div className=\"flex items-center\">\n\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\tonClick={ev => {\n\t\t\t\t\t\t\t\tev.stopPropagation();\n\t\t\t\t\t\t\t\tdispatch(toggleStarredContact(row.original.id));\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{user.starred && user.starred.includes(row.original.id) ? (\n\t\t\t\t\t\t\t\t<Icon>star</Icon>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<Icon>star_border</Icon>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\tonClick={ev => {\n\t\t\t\t\t\t\t\tev.stopPropagation();\n\t\t\t\t\t\t\t\tdispatch(removeContact(row.original.id));\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Icon>delete</Icon>\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t</div>\n\t\t\t\t)\n\t\t\t}\n\t\t],\n\t\t[dispatch, user.starred]\n\t);\n\n\tuseEffect(() => {\n\t\tfunction getFilteredArray(entities, _searchText) {\n\t\t\tif (_searchText.length === 0) {\n\t\t\t\treturn contacts;\n\t\t\t}\n\t\t\treturn FuseUtils.filterArrayByString(contacts, _searchText);\n\t\t}\n\n\t\tif (contacts) {\n\t\t\tsetFilteredData(getFilteredArray(contacts, searchText));\n\t\t}\n\t}, [contacts, searchText]);\n\n\tif (!filteredData) {\n\t\treturn null;\n\t}\n\n\tif (filteredData.length === 0) {\n\t\treturn (\n\t\t\t<div className=\"flex flex-1 items-center justify-center h-full\">\n\t\t\t\t<Typography color=\"textSecondary\" variant=\"h5\">\n\t\t\t\t\tThere are no contacts!\n\t\t\t\t</Typography>\n\t\t\t</div>\n\t\t);\n\t}\n\n\treturn (\n\t\t<FuseAnimate animation=\"transition.slideUpIn\" delay={300}>\n\t\t\t<ContactsTable\n\t\t\t\tcolumns={columns}\n\t\t\t\tdata={filteredData}\n\t\t\t\tonRowClick={(ev, row) => {\n\t\t\t\t\tif (row) {\n\t\t\t\t\t\tdispatch(openEditContactDialog(row.original));\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t/>\n\t\t</FuseAnimate>\n\t);\n}\n\nexport default ContactsList;\n"]},"metadata":{},"sourceType":"module"}