{"ast":null,"code":"var _jsxFileName = \"D:\\\\proyectos_react\\\\Proyecto_sena\\\\src\\\\app\\\\main\\\\apps\\\\mail\\\\mails\\\\MailListItem.js\";\nimport _ from '@lodash';\nimport Avatar from '@material-ui/core/Avatar';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport ListItem from '@material-ui/core/ListItem';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport clsx from 'clsx';\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { withRouter, useParams } from 'react-router-dom';\nimport MailChip from '../MailChip';\nimport { toggleInSelectedMails } from '../store/mailsSlice';\nimport { selectLabelsEntities } from '../store/labelsSlice';\n\nconst pathToRegexp = require('path-to-regexp');\n\nconst useStyles = makeStyles(theme => ({\n  mailItem: {\n    borderBottom: `1px solid  ${theme.palette.divider}`,\n    '&.unread': {\n      background: 'rgba(0,0,0,0.03)'\n    },\n    '&.selected': {\n      '&::after': {\n        content: '\"\"',\n        position: 'absolute',\n        left: 0,\n        display: 'block',\n        height: '100%',\n        width: 3,\n        backgroundColor: theme.palette.primary.main\n      }\n    }\n  },\n  avatar: {\n    backgroundColor: theme.palette.primary[500]\n  }\n}));\n\nconst MailListItem = props => {\n  const dispatch = useDispatch();\n  const selectedMailIds = useSelector(({\n    mailApp\n  }) => mailApp.mails.selectedMailIds);\n  const labels = useSelector(selectLabelsEntities);\n  const routeParams = useParams();\n  const classes = useStyles(props);\n  const toPath = pathToRegexp.compile(props.match.path);\n  const checked = selectedMailIds.length > 0 && selectedMailIds.find(id => id === props.mail.id) !== undefined;\n  return /*#__PURE__*/React.createElement(ListItem, {\n    dense: true,\n    button: true,\n    onClick: () => props.history.push(toPath({ ...routeParams,\n      mailId: props.mail.id\n    })),\n    className: clsx(classes.mailItem, checked && 'selected', !props.mail.read && 'unread', 'py-16 px-0 md:px-8'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    tabIndex: -1,\n    disableRipple: true,\n    checked: checked,\n    onChange: () => dispatch(toggleInSelectedMails(props.mail.id)),\n    onClick: ev => ev.stopPropagation(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex flex-1 flex-col relative overflow-hidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex items-center justify-between px-16 pb-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 6\n    }\n  }, props.mail.from.avatar ? /*#__PURE__*/React.createElement(Avatar, {\n    alt: props.mail.from.name,\n    src: props.mail.from.avatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 8\n    }\n  }) : /*#__PURE__*/React.createElement(Avatar, {\n    className: classes.avatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 8\n    }\n  }, props.mail.from.name[0]), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    className: \"mx-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, props.mail.from.name)), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 6\n    }\n  }, props.mail.time)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex flex-col px-16 py-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: \"truncate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 6\n    }\n  }, props.mail.subject), /*#__PURE__*/React.createElement(Typography, {\n    color: \"textSecondary\",\n    className: \"truncate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 6\n    }\n  }, _.truncate(props.mail.message.replace(/<(?:.|\\n)*?>/gm, ''), {\n    length: 180\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex justify-end px-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 5\n    }\n  }, !_.isEmpty(labels) && props.mail.labels.map(label => /*#__PURE__*/React.createElement(MailChip, {\n    className: \"mx-2 mt-4\",\n    title: labels[label].title,\n    color: labels[label].color,\n    key: label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 8\n    }\n  })))));\n};\n\nexport default withRouter(MailListItem);","map":{"version":3,"sources":["D:/proyectos_react/Proyecto_sena/src/app/main/apps/mail/mails/MailListItem.js"],"names":["_","Avatar","Checkbox","ListItem","makeStyles","Typography","clsx","React","useDispatch","useSelector","withRouter","useParams","MailChip","toggleInSelectedMails","selectLabelsEntities","pathToRegexp","require","useStyles","theme","mailItem","borderBottom","palette","divider","background","content","position","left","display","height","width","backgroundColor","primary","main","avatar","MailListItem","props","dispatch","selectedMailIds","mailApp","mails","labels","routeParams","classes","toPath","compile","match","path","checked","length","find","id","mail","undefined","history","push","mailId","read","ev","stopPropagation","from","name","time","subject","truncate","message","replace","isEmpty","map","label","title","color"],"mappings":"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","sourcesContent":["import _ from '@lodash';\nimport Avatar from '@material-ui/core/Avatar';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport ListItem from '@material-ui/core/ListItem';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport clsx from 'clsx';\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { withRouter, useParams } from 'react-router-dom';\nimport MailChip from '../MailChip';\nimport { toggleInSelectedMails } from '../store/mailsSlice';\nimport { selectLabelsEntities } from '../store/labelsSlice';\n\nconst pathToRegexp = require('path-to-regexp');\n\nconst useStyles = makeStyles(theme => ({\n\tmailItem: {\n\t\tborderBottom: `1px solid  ${theme.palette.divider}`,\n\n\t\t'&.unread': {\n\t\t\tbackground: 'rgba(0,0,0,0.03)'\n\t\t},\n\t\t'&.selected': {\n\t\t\t'&::after': {\n\t\t\t\tcontent: '\"\"',\n\t\t\t\tposition: 'absolute',\n\t\t\t\tleft: 0,\n\t\t\t\tdisplay: 'block',\n\t\t\t\theight: '100%',\n\t\t\t\twidth: 3,\n\t\t\t\tbackgroundColor: theme.palette.primary.main\n\t\t\t}\n\t\t}\n\t},\n\tavatar: {\n\t\tbackgroundColor: theme.palette.primary[500]\n\t}\n}));\n\nconst MailListItem = props => {\n\tconst dispatch = useDispatch();\n\tconst selectedMailIds = useSelector(({ mailApp }) => mailApp.mails.selectedMailIds);\n\tconst labels = useSelector(selectLabelsEntities);\n\tconst routeParams = useParams();\n\n\tconst classes = useStyles(props);\n\tconst toPath = pathToRegexp.compile(props.match.path);\n\tconst checked = selectedMailIds.length > 0 && selectedMailIds.find(id => id === props.mail.id) !== undefined;\n\n\treturn (\n\t\t<ListItem\n\t\t\tdense\n\t\t\tbutton\n\t\t\tonClick={() =>\n\t\t\t\tprops.history.push(\n\t\t\t\t\ttoPath({\n\t\t\t\t\t\t...routeParams,\n\t\t\t\t\t\tmailId: props.mail.id\n\t\t\t\t\t})\n\t\t\t\t)\n\t\t\t}\n\t\t\tclassName={clsx(\n\t\t\t\tclasses.mailItem,\n\t\t\t\tchecked && 'selected',\n\t\t\t\t!props.mail.read && 'unread',\n\t\t\t\t'py-16 px-0 md:px-8'\n\t\t\t)}\n\t\t>\n\t\t\t<Checkbox\n\t\t\t\ttabIndex={-1}\n\t\t\t\tdisableRipple\n\t\t\t\tchecked={checked}\n\t\t\t\tonChange={() => dispatch(toggleInSelectedMails(props.mail.id))}\n\t\t\t\tonClick={ev => ev.stopPropagation()}\n\t\t\t/>\n\n\t\t\t<div className=\"flex flex-1 flex-col relative overflow-hidden\">\n\t\t\t\t<div className=\"flex items-center justify-between px-16 pb-8\">\n\t\t\t\t\t<div className=\"flex items-center\">\n\t\t\t\t\t\t{props.mail.from.avatar ? (\n\t\t\t\t\t\t\t<Avatar alt={props.mail.from.name} src={props.mail.from.avatar} />\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<Avatar className={classes.avatar}>{props.mail.from.name[0]}</Avatar>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<Typography variant=\"subtitle1\" className=\"mx-8\">\n\t\t\t\t\t\t\t{props.mail.from.name}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</div>\n\t\t\t\t\t<Typography variant=\"subtitle1\">{props.mail.time}</Typography>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"flex flex-col px-16 py-0\">\n\t\t\t\t\t<Typography className=\"truncate\">{props.mail.subject}</Typography>\n\t\t\t\t\t<Typography color=\"textSecondary\" className=\"truncate\">\n\t\t\t\t\t\t{_.truncate(props.mail.message.replace(/<(?:.|\\n)*?>/gm, ''), { length: 180 })}\n\t\t\t\t\t</Typography>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"flex justify-end px-12\">\n\t\t\t\t\t{!_.isEmpty(labels) &&\n\t\t\t\t\t\tprops.mail.labels.map(label => (\n\t\t\t\t\t\t\t<MailChip\n\t\t\t\t\t\t\t\tclassName=\"mx-2 mt-4\"\n\t\t\t\t\t\t\t\ttitle={labels[label].title}\n\t\t\t\t\t\t\t\tcolor={labels[label].color}\n\t\t\t\t\t\t\t\tkey={label}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</ListItem>\n\t);\n};\n\nexport default withRouter(MailListItem);\n"]},"metadata":{},"sourceType":"module"}