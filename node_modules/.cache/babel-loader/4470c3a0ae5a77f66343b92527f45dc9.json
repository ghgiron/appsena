{"ast":null,"code":"var _jsxFileName = \"D:\\\\proyectos_react\\\\Proyecto_sena\\\\src\\\\app\\\\main\\\\apps\\\\todo\\\\TodoListItem.js\";\nimport _ from '@lodash';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { amber, red } from '@material-ui/core/colors';\nimport Icon from '@material-ui/core/Icon';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport clsx from 'clsx';\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectLabelsEntities } from './store/labelsSlice';\nimport { updateTodo, openEditTodoDialog } from './store/todosSlice';\nimport TodoChip from './TodoChip';\nconst useStyles = makeStyles({\n  todoItem: {\n    '&.completed': {\n      background: 'rgba(0,0,0,0.03)',\n      '& .todo-title, & .todo-notes': {\n        textDecoration: 'line-through'\n      }\n    }\n  }\n});\n\nfunction TodoListItem(props) {\n  const dispatch = useDispatch();\n  const labels = useSelector(selectLabelsEntities);\n  const classes = useStyles(props);\n  return /*#__PURE__*/React.createElement(ListItem, {\n    className: clsx(classes.todoItem, {\n      completed: props.todo.completed\n    }, 'border-solid border-b-1 py-16 px-0 sm:px-8'),\n    onClick: ev => {\n      ev.preventDefault();\n      dispatch(openEditTodoDialog(props.todo));\n    },\n    dense: true,\n    button: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    tabIndex: -1,\n    disableRipple: true,\n    checked: props.todo.completed,\n    onChange: () => dispatch(updateTodo({ ...props.todo,\n      completed: !props.todo.completed\n    })),\n    onClick: ev => ev.stopPropagation(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex flex-1 flex-col relative overflow-hidden px-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    className: \"todo-title truncate\",\n    color: props.todo.completed ? 'textSecondary' : 'inherit',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, props.todo.title), /*#__PURE__*/React.createElement(Typography, {\n    color: \"textSecondary\",\n    className: \"todo-notes truncate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, _.truncate(props.todo.notes.replace(/<(?:.|\\n)*?>/gm, ''), {\n    length: 180\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.labels, 'flex -mx-2'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, props.todo.labels.map(label => /*#__PURE__*/React.createElement(TodoChip, {\n    className: \"mx-2 mt-4\",\n    title: labels[label].title,\n    color: labels[label].color,\n    key: label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"px-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    onClick: ev => {\n      ev.preventDefault();\n      ev.stopPropagation();\n      dispatch(updateTodo({ ...props.todo,\n        important: !props.todo.important\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }\n  }, props.todo.important ? /*#__PURE__*/React.createElement(Icon, {\n    style: {\n      color: red[500]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 30\n    }\n  }, \"error\") : /*#__PURE__*/React.createElement(Icon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 79\n    }\n  }, \"error_outline\")), /*#__PURE__*/React.createElement(IconButton, {\n    onClick: ev => {\n      ev.preventDefault();\n      ev.stopPropagation();\n      dispatch(updateTodo({ ...props.todo,\n        starred: !props.todo.starred\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 5\n    }\n  }, props.todo.starred ? /*#__PURE__*/React.createElement(Icon, {\n    style: {\n      color: amber[500]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 28\n    }\n  }, \"star\") : /*#__PURE__*/React.createElement(Icon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 78\n    }\n  }, \"star_outline\"))));\n}\n\nexport default TodoListItem;","map":{"version":3,"sources":["D:/proyectos_react/Proyecto_sena/src/app/main/apps/todo/TodoListItem.js"],"names":["_","Checkbox","amber","red","Icon","IconButton","ListItem","makeStyles","Typography","clsx","React","useDispatch","useSelector","selectLabelsEntities","updateTodo","openEditTodoDialog","TodoChip","useStyles","todoItem","background","textDecoration","TodoListItem","props","dispatch","labels","classes","completed","todo","ev","preventDefault","stopPropagation","title","truncate","notes","replace","length","map","label","color","important","starred"],"mappings":"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","sourcesContent":["import _ from '@lodash';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { amber, red } from '@material-ui/core/colors';\nimport Icon from '@material-ui/core/Icon';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport clsx from 'clsx';\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectLabelsEntities } from './store/labelsSlice';\nimport { updateTodo, openEditTodoDialog } from './store/todosSlice';\n\nimport TodoChip from './TodoChip';\n\nconst useStyles = makeStyles({\n\ttodoItem: {\n\t\t'&.completed': {\n\t\t\tbackground: 'rgba(0,0,0,0.03)',\n\t\t\t'& .todo-title, & .todo-notes': {\n\t\t\t\ttextDecoration: 'line-through'\n\t\t\t}\n\t\t}\n\t}\n});\n\nfunction TodoListItem(props) {\n\tconst dispatch = useDispatch();\n\tconst labels = useSelector(selectLabelsEntities);\n\n\tconst classes = useStyles(props);\n\n\treturn (\n\t\t<ListItem\n\t\t\tclassName={clsx(\n\t\t\t\tclasses.todoItem,\n\t\t\t\t{ completed: props.todo.completed },\n\t\t\t\t'border-solid border-b-1 py-16 px-0 sm:px-8'\n\t\t\t)}\n\t\t\tonClick={ev => {\n\t\t\t\tev.preventDefault();\n\t\t\t\tdispatch(openEditTodoDialog(props.todo));\n\t\t\t}}\n\t\t\tdense\n\t\t\tbutton\n\t\t>\n\t\t\t<Checkbox\n\t\t\t\ttabIndex={-1}\n\t\t\t\tdisableRipple\n\t\t\t\tchecked={props.todo.completed}\n\t\t\t\tonChange={() =>\n\t\t\t\t\tdispatch(\n\t\t\t\t\t\tupdateTodo({\n\t\t\t\t\t\t\t...props.todo,\n\t\t\t\t\t\t\tcompleted: !props.todo.completed\n\t\t\t\t\t\t})\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t\tonClick={ev => ev.stopPropagation()}\n\t\t\t/>\n\n\t\t\t<div className=\"flex flex-1 flex-col relative overflow-hidden px-8\">\n\t\t\t\t<Typography\n\t\t\t\t\tvariant=\"subtitle1\"\n\t\t\t\t\tclassName=\"todo-title truncate\"\n\t\t\t\t\tcolor={props.todo.completed ? 'textSecondary' : 'inherit'}\n\t\t\t\t>\n\t\t\t\t\t{props.todo.title}\n\t\t\t\t</Typography>\n\n\t\t\t\t<Typography color=\"textSecondary\" className=\"todo-notes truncate\">\n\t\t\t\t\t{_.truncate(props.todo.notes.replace(/<(?:.|\\n)*?>/gm, ''), { length: 180 })}\n\t\t\t\t</Typography>\n\n\t\t\t\t<div className={clsx(classes.labels, 'flex -mx-2')}>\n\t\t\t\t\t{props.todo.labels.map(label => (\n\t\t\t\t\t\t<TodoChip\n\t\t\t\t\t\t\tclassName=\"mx-2 mt-4\"\n\t\t\t\t\t\t\ttitle={labels[label].title}\n\t\t\t\t\t\t\tcolor={labels[label].color}\n\t\t\t\t\t\t\tkey={label}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div className=\"px-8\">\n\t\t\t\t<IconButton\n\t\t\t\t\tonClick={ev => {\n\t\t\t\t\t\tev.preventDefault();\n\t\t\t\t\t\tev.stopPropagation();\n\t\t\t\t\t\tdispatch(\n\t\t\t\t\t\t\tupdateTodo({\n\t\t\t\t\t\t\t\t...props.todo,\n\t\t\t\t\t\t\t\timportant: !props.todo.important\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t);\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{props.todo.important ? <Icon style={{ color: red[500] }}>error</Icon> : <Icon>error_outline</Icon>}\n\t\t\t\t</IconButton>\n\t\t\t\t<IconButton\n\t\t\t\t\tonClick={ev => {\n\t\t\t\t\t\tev.preventDefault();\n\t\t\t\t\t\tev.stopPropagation();\n\t\t\t\t\t\tdispatch(\n\t\t\t\t\t\t\tupdateTodo({\n\t\t\t\t\t\t\t\t...props.todo,\n\t\t\t\t\t\t\t\tstarred: !props.todo.starred\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t);\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{props.todo.starred ? <Icon style={{ color: amber[500] }}>star</Icon> : <Icon>star_outline</Icon>}\n\t\t\t\t</IconButton>\n\t\t\t</div>\n\t\t</ListItem>\n\t);\n}\n\nexport default TodoListItem;\n"]},"metadata":{},"sourceType":"module"}