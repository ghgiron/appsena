{"ast":null,"code":"var _jsxFileName = \"D:\\\\proyectos_react\\\\Proyecto_sena\\\\src\\\\app\\\\main\\\\apps\\\\notes\\\\NoteList.js\";\nimport FuseUtils from '@fuse/utils';\nimport Typography from '@material-ui/core/Typography';\nimport React, { useEffect, useState } from 'react';\nimport Masonry from 'react-masonry-css';\nimport { useSelector } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport NoteListItem from './NoteListItem';\nimport { selectNotes } from './store/notesSlice';\n\nfunction NoteList(props) {\n  const notes = useSelector(selectNotes);\n  const variateDescSize = useSelector(({\n    notesApp\n  }) => notesApp.notes.variateDescSize);\n  const searchText = useSelector(({\n    notesApp\n  }) => notesApp.notes.searchText);\n  const [filteredData, setFilteredData] = useState(null);\n  useEffect(() => {\n    function filterData() {\n      const {\n        params\n      } = props.match;\n      const {\n        id,\n        labelId\n      } = params;\n      let data = notes;\n\n      if (labelId) {\n        data = data.filter(note => note.labels.includes(labelId) && !note.archive);\n      }\n\n      if (!id) {\n        data = data.filter(note => !note.archive);\n      }\n\n      if (id === 'archive') {\n        data = data.filter(note => note.archive);\n      }\n\n      if (id === 'reminders') {\n        data = data.filter(note => Boolean(note.reminder) && !note.archive);\n      }\n\n      if (searchText.length === 0) {\n        return data;\n      }\n\n      data = FuseUtils.filterArrayByString(data, searchText);\n      return data;\n    }\n\n    if (notes.length > 0) {\n      setFilteredData(filterData());\n    }\n  }, [notes, searchText, props.match]);\n  return !filteredData || filteredData.length === 0 ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex items-center justify-center h-full\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    color: \"textSecondary\",\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 4\n    }\n  }, \"There are no notes!\")) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex flex-wrap w-full\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Masonry, {\n    breakpointCols: {\n      default: 6,\n      1920: 5,\n      1600: 4,\n      1366: 3,\n      1280: 4,\n      960: 3,\n      600: 2,\n      480: 1\n    },\n    className: \"my-masonry-grid flex w-full\",\n    columnClassName: \"my-masonry-grid_column flex flex-col p-0 md:p-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 4\n    }\n  }, filteredData.map(note => /*#__PURE__*/React.createElement(NoteListItem, {\n    key: note.id,\n    note: note,\n    className: \"w-full rounded-8 mb-16\",\n    variateDescSize: variateDescSize,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 6\n    }\n  }))));\n}\n\nexport default withRouter(NoteList);","map":{"version":3,"sources":["D:/proyectos_react/Proyecto_sena/src/app/main/apps/notes/NoteList.js"],"names":["FuseUtils","Typography","React","useEffect","useState","Masonry","useSelector","withRouter","NoteListItem","selectNotes","NoteList","props","notes","variateDescSize","notesApp","searchText","filteredData","setFilteredData","filterData","params","match","id","labelId","data","filter","note","labels","includes","archive","Boolean","reminder","length","filterArrayByString","default","map"],"mappings":"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","sourcesContent":["import FuseUtils from '@fuse/utils';\nimport Typography from '@material-ui/core/Typography';\nimport React, { useEffect, useState } from 'react';\nimport Masonry from 'react-masonry-css';\nimport { useSelector } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport NoteListItem from './NoteListItem';\nimport { selectNotes } from './store/notesSlice';\n\nfunction NoteList(props) {\n\tconst notes = useSelector(selectNotes);\n\tconst variateDescSize = useSelector(({ notesApp }) => notesApp.notes.variateDescSize);\n\tconst searchText = useSelector(({ notesApp }) => notesApp.notes.searchText);\n\n\tconst [filteredData, setFilteredData] = useState(null);\n\n\tuseEffect(() => {\n\t\tfunction filterData() {\n\t\t\tconst { params } = props.match;\n\t\t\tconst { id, labelId } = params;\n\n\t\t\tlet data = notes;\n\n\t\t\tif (labelId) {\n\t\t\t\tdata = data.filter(note => note.labels.includes(labelId) && !note.archive);\n\t\t\t}\n\n\t\t\tif (!id) {\n\t\t\t\tdata = data.filter(note => !note.archive);\n\t\t\t}\n\n\t\t\tif (id === 'archive') {\n\t\t\t\tdata = data.filter(note => note.archive);\n\t\t\t}\n\n\t\t\tif (id === 'reminders') {\n\t\t\t\tdata = data.filter(note => Boolean(note.reminder) && !note.archive);\n\t\t\t}\n\n\t\t\tif (searchText.length === 0) {\n\t\t\t\treturn data;\n\t\t\t}\n\n\t\t\tdata = FuseUtils.filterArrayByString(data, searchText);\n\n\t\t\treturn data;\n\t\t}\n\n\t\tif (notes.length > 0) {\n\t\t\tsetFilteredData(filterData());\n\t\t}\n\t}, [notes, searchText, props.match]);\n\n\treturn !filteredData || filteredData.length === 0 ? (\n\t\t<div className=\"flex items-center justify-center h-full\">\n\t\t\t<Typography color=\"textSecondary\" variant=\"h5\">\n\t\t\t\tThere are no notes!\n\t\t\t</Typography>\n\t\t</div>\n\t) : (\n\t\t<div className=\"flex flex-wrap w-full\">\n\t\t\t<Masonry\n\t\t\t\tbreakpointCols={{\n\t\t\t\t\tdefault: 6,\n\t\t\t\t\t1920: 5,\n\t\t\t\t\t1600: 4,\n\t\t\t\t\t1366: 3,\n\t\t\t\t\t1280: 4,\n\t\t\t\t\t960: 3,\n\t\t\t\t\t600: 2,\n\t\t\t\t\t480: 1\n\t\t\t\t}}\n\t\t\t\tclassName=\"my-masonry-grid flex w-full\"\n\t\t\t\tcolumnClassName=\"my-masonry-grid_column flex flex-col p-0 md:p-8\"\n\t\t\t>\n\t\t\t\t{filteredData.map(note => (\n\t\t\t\t\t<NoteListItem\n\t\t\t\t\t\tkey={note.id}\n\t\t\t\t\t\tnote={note}\n\t\t\t\t\t\tclassName=\"w-full rounded-8 mb-16\"\n\t\t\t\t\t\tvariateDescSize={variateDescSize}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</Masonry>\n\t\t</div>\n\t);\n}\n\nexport default withRouter(NoteList);\n"]},"metadata":{},"sourceType":"module"}