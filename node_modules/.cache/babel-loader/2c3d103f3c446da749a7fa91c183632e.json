{"ast":null,"code":"var _jsxFileName = \"D:\\\\proyectos_react\\\\Proyecto_sena\\\\src\\\\app\\\\main\\\\documentation\\\\material-ui-components\\\\components\\\\steppers\\\\HorizontalNonLinearAlternativeLabelStepper.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepButton from '@material-ui/core/StepButton';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%'\n  },\n  button: {\n    marginRight: theme.spacing(1)\n  },\n  backButton: {\n    marginRight: theme.spacing(1)\n  },\n  completed: {\n    display: 'inline-block'\n  },\n  instructions: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  }\n}));\n\nfunction getSteps() {\n  return ['Select campaign settings', 'Create an ad group', 'Create an ad'];\n}\n\nfunction getStepContent(step) {\n  switch (step) {\n    case 0:\n      return 'Step 1: Select campaign settings...';\n\n    case 1:\n      return 'Step 2: What is an ad group anyways?';\n\n    case 2:\n      return 'Step 3: This is the bit I really care about!';\n\n    default:\n      return 'Unknown step';\n  }\n}\n\nexport default function HorizontalNonLinearAlternativeLabelStepper() {\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [completed, setCompleted] = React.useState(new Set());\n  const [skipped, setSkipped] = React.useState(new Set());\n  const steps = getSteps();\n\n  const totalSteps = () => {\n    return getSteps().length;\n  };\n\n  const isStepOptional = step => {\n    return step === 1;\n  };\n\n  const handleSkip = () => {\n    if (!isStepOptional(activeStep)) {\n      // You probably want to guard against something like this\n      // it should never occur unless someone's actively trying to break something.\n      throw new Error(\"You can't skip a step that isn't optional.\");\n    }\n\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n    setSkipped(prevSkipped => {\n      const newSkipped = new Set(prevSkipped.values());\n      newSkipped.add(activeStep);\n      return newSkipped;\n    });\n  };\n\n  const skippedSteps = () => {\n    return skipped.size;\n  };\n\n  const completedSteps = () => {\n    return completed.size;\n  };\n\n  const allStepsCompleted = () => {\n    return completedSteps() === totalSteps() - skippedSteps();\n  };\n\n  const isLastStep = () => {\n    return activeStep === totalSteps() - 1;\n  };\n\n  const handleNext = () => {\n    const newActiveStep = isLastStep() && !allStepsCompleted() ? // It's the last step, but not all steps have been completed\n    // find the first step that has been completed\n    steps.findIndex((step, i) => !completed.has(i)) : activeStep + 1;\n    setActiveStep(newActiveStep);\n  };\n\n  const handleBack = () => {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  };\n\n  const handleStep = step => () => {\n    setActiveStep(step);\n  };\n\n  const handleComplete = () => {\n    const newCompleted = new Set(completed);\n    newCompleted.add(activeStep);\n    setCompleted(newCompleted);\n    /**\n     * Sigh... it would be much nicer to replace the following if conditional with\n     * `if (!this.allStepsComplete())` however state is not set when we do this,\n     * thus we have to resort to not being very DRY.\n     */\n\n    if (completed.size !== totalSteps() - skippedSteps()) {\n      handleNext();\n    }\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n    setCompleted(new Set());\n    setSkipped(new Set());\n  };\n\n  const isStepSkipped = step => {\n    return skipped.has(step);\n  };\n\n  function isStepComplete(step) {\n    return completed.has(step);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Stepper, {\n    alternativeLabel: true,\n    nonLinear: true,\n    activeStep: activeStep,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }\n  }, steps.map((label, index) => {\n    const stepProps = {};\n    const buttonProps = {};\n\n    if (isStepOptional(index)) {\n      buttonProps.optional = /*#__PURE__*/React.createElement(Typography, {\n        variant: \"caption\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 36\n        }\n      }, \"Optional\");\n    }\n\n    if (isStepSkipped(index)) {\n      stepProps.completed = false;\n    }\n\n    return /*#__PURE__*/React.createElement(Step, Object.assign({\n      key: label\n    }, stepProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(StepButton, Object.assign({\n      onClick: handleStep(index),\n      completed: isStepComplete(index)\n    }, buttonProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 15\n      }\n    }), label));\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }\n  }, allStepsCompleted() ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.instructions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }\n  }, \"All steps completed - you're finished\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleReset,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }\n  }, \"Reset\")) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.instructions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }\n  }, getStepContent(activeStep)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    disabled: activeStep === 0,\n    onClick: handleBack,\n    className: classes.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 15\n    }\n  }, \"Back\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleNext,\n    className: classes.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 15\n    }\n  }, \"Next\"), isStepOptional(activeStep) && !completed.has(activeStep) && /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleSkip,\n    className: classes.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 17\n    }\n  }, \"Skip\"), activeStep !== steps.length && (completed.has(activeStep) ? /*#__PURE__*/React.createElement(Typography, {\n    variant: \"caption\",\n    className: classes.completed,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 19\n    }\n  }, \"Step \", activeStep + 1, \" already completed\") : /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleComplete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 19\n    }\n  }, completedSteps() === totalSteps() - 1 ? 'Finish' : 'Complete Step'))))));\n}","map":{"version":3,"sources":["D:/proyectos_react/Proyecto_sena/src/app/main/documentation/material-ui-components/components/steppers/HorizontalNonLinearAlternativeLabelStepper.js"],"names":["React","makeStyles","Stepper","Step","StepButton","Button","Typography","useStyles","theme","root","width","button","marginRight","spacing","backButton","completed","display","instructions","marginTop","marginBottom","getSteps","getStepContent","step","HorizontalNonLinearAlternativeLabelStepper","classes","activeStep","setActiveStep","useState","setCompleted","Set","skipped","setSkipped","steps","totalSteps","length","isStepOptional","handleSkip","Error","prevActiveStep","prevSkipped","newSkipped","values","add","skippedSteps","size","completedSteps","allStepsCompleted","isLastStep","handleNext","newActiveStep","findIndex","i","has","handleBack","handleStep","handleComplete","newCompleted","handleReset","isStepSkipped","isStepComplete","map","label","index","stepProps","buttonProps","optional"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepButton from '@material-ui/core/StepButton';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  button: {\n    marginRight: theme.spacing(1),\n  },\n  backButton: {\n    marginRight: theme.spacing(1),\n  },\n  completed: {\n    display: 'inline-block',\n  },\n  instructions: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n}));\n\nfunction getSteps() {\n  return ['Select campaign settings', 'Create an ad group', 'Create an ad'];\n}\n\nfunction getStepContent(step) {\n  switch (step) {\n    case 0:\n      return 'Step 1: Select campaign settings...';\n    case 1:\n      return 'Step 2: What is an ad group anyways?';\n    case 2:\n      return 'Step 3: This is the bit I really care about!';\n    default:\n      return 'Unknown step';\n  }\n}\n\nexport default function HorizontalNonLinearAlternativeLabelStepper() {\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [completed, setCompleted] = React.useState(new Set());\n  const [skipped, setSkipped] = React.useState(new Set());\n  const steps = getSteps();\n\n  const totalSteps = () => {\n    return getSteps().length;\n  };\n\n  const isStepOptional = (step) => {\n    return step === 1;\n  };\n\n  const handleSkip = () => {\n    if (!isStepOptional(activeStep)) {\n      // You probably want to guard against something like this\n      // it should never occur unless someone's actively trying to break something.\n      throw new Error(\"You can't skip a step that isn't optional.\");\n    }\n\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n    setSkipped((prevSkipped) => {\n      const newSkipped = new Set(prevSkipped.values());\n      newSkipped.add(activeStep);\n      return newSkipped;\n    });\n  };\n\n  const skippedSteps = () => {\n    return skipped.size;\n  };\n\n  const completedSteps = () => {\n    return completed.size;\n  };\n\n  const allStepsCompleted = () => {\n    return completedSteps() === totalSteps() - skippedSteps();\n  };\n\n  const isLastStep = () => {\n    return activeStep === totalSteps() - 1;\n  };\n\n  const handleNext = () => {\n    const newActiveStep =\n      isLastStep() && !allStepsCompleted()\n        ? // It's the last step, but not all steps have been completed\n          // find the first step that has been completed\n          steps.findIndex((step, i) => !completed.has(i))\n        : activeStep + 1;\n\n    setActiveStep(newActiveStep);\n  };\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n\n  const handleStep = (step) => () => {\n    setActiveStep(step);\n  };\n\n  const handleComplete = () => {\n    const newCompleted = new Set(completed);\n    newCompleted.add(activeStep);\n    setCompleted(newCompleted);\n\n    /**\n     * Sigh... it would be much nicer to replace the following if conditional with\n     * `if (!this.allStepsComplete())` however state is not set when we do this,\n     * thus we have to resort to not being very DRY.\n     */\n    if (completed.size !== totalSteps() - skippedSteps()) {\n      handleNext();\n    }\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n    setCompleted(new Set());\n    setSkipped(new Set());\n  };\n\n  const isStepSkipped = (step) => {\n    return skipped.has(step);\n  };\n\n  function isStepComplete(step) {\n    return completed.has(step);\n  }\n\n  return (\n    <div className={classes.root}>\n      <Stepper alternativeLabel nonLinear activeStep={activeStep}>\n        {steps.map((label, index) => {\n          const stepProps = {};\n          const buttonProps = {};\n          if (isStepOptional(index)) {\n            buttonProps.optional = <Typography variant=\"caption\">Optional</Typography>;\n          }\n          if (isStepSkipped(index)) {\n            stepProps.completed = false;\n          }\n          return (\n            <Step key={label} {...stepProps}>\n              <StepButton\n                onClick={handleStep(index)}\n                completed={isStepComplete(index)}\n                {...buttonProps}\n              >\n                {label}\n              </StepButton>\n            </Step>\n          );\n        })}\n      </Stepper>\n      <div>\n        {allStepsCompleted() ? (\n          <div>\n            <Typography className={classes.instructions}>\n              All steps completed - you&apos;re finished\n            </Typography>\n            <Button onClick={handleReset}>Reset</Button>\n          </div>\n        ) : (\n          <div>\n            <Typography className={classes.instructions}>{getStepContent(activeStep)}</Typography>\n            <div>\n              <Button disabled={activeStep === 0} onClick={handleBack} className={classes.button}>\n                Back\n              </Button>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={handleNext}\n                className={classes.button}\n              >\n                Next\n              </Button>\n              {isStepOptional(activeStep) && !completed.has(activeStep) && (\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={handleSkip}\n                  className={classes.button}\n                >\n                  Skip\n                </Button>\n              )}\n\n              {activeStep !== steps.length &&\n                (completed.has(activeStep) ? (\n                  <Typography variant=\"caption\" className={classes.completed}>\n                    Step {activeStep + 1} already completed\n                  </Typography>\n                ) : (\n                  <Button variant=\"contained\" color=\"primary\" onClick={handleComplete}>\n                    {completedSteps() === totalSteps() - 1 ? 'Finish' : 'Complete Step'}\n                  </Button>\n                ))}\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}