{"ast":null,"code":"var _jsxFileName = \"D:\\\\proyectos_react\\\\Proyecto_sena_old\\\\src\\\\app\\\\fuse-layouts\\\\shared-components\\\\chatPanel\\\\ChatPanel.js\";\nimport AppBar from '@material-ui/core/AppBar';\nimport Avatar from '@material-ui/core/Avatar';\nimport Icon from '@material-ui/core/Icon';\nimport IconButton from '@material-ui/core/IconButton';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport withReducer from 'app/store/withReducer';\nimport clsx from 'clsx';\nimport keycode from 'keycode';\nimport React, { useCallback, useEffect, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Chat from './Chat';\nimport ContactList from './ContactList';\nimport reducer from './store';\nimport { getContacts, selectContacts } from './store/contactsSlice';\nimport { openChatPanel, closeChatPanel } from './store/stateSlice';\nimport { getUserData } from './store/userSlice';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: 70,\n    maxWidth: 70,\n    minWidth: 70,\n    [theme.breakpoints.down('md')]: {\n      width: 0,\n      maxWidth: 0,\n      minWidth: 0\n    }\n  },\n  panel: {\n    position: 'absolute',\n    width: 360,\n    backgroundColor: theme.palette.background.paper,\n    boxShadow: theme.shadows[3],\n    top: 0,\n    height: '100%',\n    minHeight: '100%',\n    bottom: 0,\n    right: 0,\n    margin: 0,\n    zIndex: 1000,\n    transform: 'translate3d(290px,0,0)',\n    overflow: 'hidden',\n    [theme.breakpoints.down('md')]: {\n      transform: 'translate3d(360px,0,0)',\n      boxShadow: 'none',\n      '&.opened': {\n        boxShadow: theme.shadows[5]\n      }\n    },\n    transition: theme.transitions.create(['transform'], {\n      easing: theme.transitions.easing.easeInOut,\n      duration: theme.transitions.duration.standard\n    }),\n    '&.opened': {\n      transform: 'translateX(0)'\n    }\n  }\n}));\n\nfunction ChatPanel(props) {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const selectedContactId = useSelector(({\n    chatPanel\n  }) => chatPanel.contacts.selectedContactId);\n  const state = useSelector(({\n    chatPanel\n  }) => chatPanel.state);\n  const ref = useRef();\n  const classes = useStyles(props);\n  const selectedContact = contacts.find(_contact => _contact.id === selectedContactId);\n  const handleDocumentKeyDown = useCallback(event => {\n    if (keycode(event) === 'esc') {\n      dispatch(closeChatPanel());\n    }\n  }, [dispatch]);\n  useEffect(() => {\n    dispatch(getUserData());\n    dispatch(getContacts());\n    return () => {\n      document.removeEventListener('keydown', handleDocumentKeyDown);\n    };\n  }, [dispatch, handleDocumentKeyDown]);\n  useEffect(() => {\n    if (state) {\n      document.addEventListener('keydown', handleDocumentKeyDown);\n    } else {\n      document.removeEventListener('keydown', handleDocumentKeyDown);\n    }\n  }, [handleDocumentKeyDown, state]);\n  /**\n   * Click Away Listener\n   */\n\n  useEffect(() => {\n    function handleDocumentClick(ev) {\n      if (ref.current && !ref.current.contains(ev.target)) {\n        dispatch(closeChatPanel());\n      }\n    }\n\n    if (state) {\n      document.addEventListener('click', handleDocumentClick, true);\n    } else {\n      document.removeEventListener('click', handleDocumentClick, true);\n    }\n\n    return () => {\n      document.removeEventListener('click', handleDocumentClick, true);\n    };\n  }, [state, dispatch]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.panel, {\n      opened: state\n    }, 'flex flex-col max-w-full'),\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(AppBar, {\n    position: \"static\",\n    elevation: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Toolbar, {\n    className: \"px-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 6\n    }\n  }, (!state || !selectedContactId) && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex flex-1 items-center px-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    className: \"\",\n    color: \"inherit\",\n    onClick: ev => dispatch(openChatPanel()),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    className: \"text-32\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 10\n    }\n  }, \"chat\")), !selectedContactId && /*#__PURE__*/React.createElement(Typography, {\n    className: \"mx-8 text-16\",\n    color: \"inherit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 10\n    }\n  }, \"Team Chat\")), state && selectedContact && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex flex-1 items-center px-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    src: selectedContact.avatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    className: \"mx-16 text-16\",\n    color: \"inherit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }\n  }, selectedContact.name)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex px-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    onClick: ev => dispatch(closeChatPanel()),\n    color: \"inherit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }\n  }, \"close\"))))), /*#__PURE__*/React.createElement(Paper, {\n    className: \"flex flex-1 flex-row min-h-px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ContactList, {\n    className: \"flex flex-shrink-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 6\n    }\n  }), /*#__PURE__*/React.createElement(Chat, {\n    className: \"flex flex-1 z-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 6\n    }\n  }))));\n}\n\nexport default withReducer('chatPanel', reducer)(React.memo(ChatPanel));","map":{"version":3,"sources":["D:/proyectos_react/Proyecto_sena_old/src/app/fuse-layouts/shared-components/chatPanel/ChatPanel.js"],"names":["AppBar","Avatar","Icon","IconButton","Paper","makeStyles","Toolbar","Typography","withReducer","clsx","keycode","React","useCallback","useEffect","useRef","useDispatch","useSelector","Chat","ContactList","reducer","getContacts","selectContacts","openChatPanel","closeChatPanel","getUserData","useStyles","theme","root","width","maxWidth","minWidth","breakpoints","down","panel","position","backgroundColor","palette","background","paper","boxShadow","shadows","top","height","minHeight","bottom","right","margin","zIndex","transform","overflow","transition","transitions","create","easing","easeInOut","duration","standard","ChatPanel","props","dispatch","contacts","selectedContactId","chatPanel","state","ref","classes","selectedContact","find","_contact","id","handleDocumentKeyDown","event","document","removeEventListener","addEventListener","handleDocumentClick","ev","current","contains","target","opened","avatar","name","memo"],"mappings":"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","sourcesContent":["import AppBar from '@material-ui/core/AppBar';\nimport Avatar from '@material-ui/core/Avatar';\nimport Icon from '@material-ui/core/Icon';\nimport IconButton from '@material-ui/core/IconButton';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport withReducer from 'app/store/withReducer';\nimport clsx from 'clsx';\nimport keycode from 'keycode';\nimport React, { useCallback, useEffect, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Chat from './Chat';\nimport ContactList from './ContactList';\nimport reducer from './store';\nimport { getContacts, selectContacts } from './store/contactsSlice';\nimport { openChatPanel, closeChatPanel } from './store/stateSlice';\n\nimport { getUserData } from './store/userSlice';\n\nconst useStyles = makeStyles(theme => ({\n\troot: {\n\t\twidth: 70,\n\t\tmaxWidth: 70,\n\t\tminWidth: 70,\n\t\t[theme.breakpoints.down('md')]: {\n\t\t\twidth: 0,\n\t\t\tmaxWidth: 0,\n\t\t\tminWidth: 0\n\t\t}\n\t},\n\tpanel: {\n\t\tposition: 'absolute',\n\t\twidth: 360,\n\t\tbackgroundColor: theme.palette.background.paper,\n\t\tboxShadow: theme.shadows[3],\n\t\ttop: 0,\n\t\theight: '100%',\n\t\tminHeight: '100%',\n\t\tbottom: 0,\n\t\tright: 0,\n\t\tmargin: 0,\n\t\tzIndex: 1000,\n\t\ttransform: 'translate3d(290px,0,0)',\n\t\toverflow: 'hidden',\n\t\t[theme.breakpoints.down('md')]: {\n\t\t\ttransform: 'translate3d(360px,0,0)',\n\t\t\tboxShadow: 'none',\n\t\t\t'&.opened': {\n\t\t\t\tboxShadow: theme.shadows[5]\n\t\t\t}\n\t\t},\n\t\ttransition: theme.transitions.create(['transform'], {\n\t\t\teasing: theme.transitions.easing.easeInOut,\n\t\t\tduration: theme.transitions.duration.standard\n\t\t}),\n\t\t'&.opened': {\n\t\t\ttransform: 'translateX(0)'\n\t\t}\n\t}\n}));\n\nfunction ChatPanel(props) {\n\tconst dispatch = useDispatch();\n\tconst contacts = useSelector(selectContacts);\n\tconst selectedContactId = useSelector(({ chatPanel }) => chatPanel.contacts.selectedContactId);\n\tconst state = useSelector(({ chatPanel }) => chatPanel.state);\n\tconst ref = useRef();\n\n\tconst classes = useStyles(props);\n\tconst selectedContact = contacts.find(_contact => _contact.id === selectedContactId);\n\n\tconst handleDocumentKeyDown = useCallback(\n\t\tevent => {\n\t\t\tif (keycode(event) === 'esc') {\n\t\t\t\tdispatch(closeChatPanel());\n\t\t\t}\n\t\t},\n\t\t[dispatch]\n\t);\n\n\tuseEffect(() => {\n\t\tdispatch(getUserData());\n\t\tdispatch(getContacts());\n\t\treturn () => {\n\t\t\tdocument.removeEventListener('keydown', handleDocumentKeyDown);\n\t\t};\n\t}, [dispatch, handleDocumentKeyDown]);\n\n\tuseEffect(() => {\n\t\tif (state) {\n\t\t\tdocument.addEventListener('keydown', handleDocumentKeyDown);\n\t\t} else {\n\t\t\tdocument.removeEventListener('keydown', handleDocumentKeyDown);\n\t\t}\n\t}, [handleDocumentKeyDown, state]);\n\n\t/**\n\t * Click Away Listener\n\t */\n\tuseEffect(() => {\n\t\tfunction handleDocumentClick(ev) {\n\t\t\tif (ref.current && !ref.current.contains(ev.target)) {\n\t\t\t\tdispatch(closeChatPanel());\n\t\t\t}\n\t\t}\n\n\t\tif (state) {\n\t\t\tdocument.addEventListener('click', handleDocumentClick, true);\n\t\t} else {\n\t\t\tdocument.removeEventListener('click', handleDocumentClick, true);\n\t\t}\n\n\t\treturn () => {\n\t\t\tdocument.removeEventListener('click', handleDocumentClick, true);\n\t\t};\n\t}, [state, dispatch]);\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<div className={clsx(classes.panel, { opened: state }, 'flex flex-col max-w-full')} ref={ref}>\n\t\t\t\t<AppBar position=\"static\" elevation={1}>\n\t\t\t\t\t<Toolbar className=\"px-4\">\n\t\t\t\t\t\t{(!state || !selectedContactId) && (\n\t\t\t\t\t\t\t<div className=\"flex flex-1 items-center px-4\">\n\t\t\t\t\t\t\t\t<IconButton className=\"\" color=\"inherit\" onClick={ev => dispatch(openChatPanel())}>\n\t\t\t\t\t\t\t\t\t<Icon className=\"text-32\">chat</Icon>\n\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t\t{!selectedContactId && (\n\t\t\t\t\t\t\t\t\t<Typography className=\"mx-8 text-16\" color=\"inherit\">\n\t\t\t\t\t\t\t\t\t\tTeam Chat\n\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{state && selectedContact && (\n\t\t\t\t\t\t\t<div className=\"flex flex-1 items-center px-12\">\n\t\t\t\t\t\t\t\t<Avatar src={selectedContact.avatar} />\n\t\t\t\t\t\t\t\t<Typography className=\"mx-16 text-16\" color=\"inherit\">\n\t\t\t\t\t\t\t\t\t{selectedContact.name}\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<div className=\"flex px-4\">\n\t\t\t\t\t\t\t<IconButton onClick={ev => dispatch(closeChatPanel())} color=\"inherit\">\n\t\t\t\t\t\t\t\t<Icon>close</Icon>\n\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t</AppBar>\n\t\t\t\t<Paper className=\"flex flex-1 flex-row min-h-px\">\n\t\t\t\t\t<ContactList className=\"flex flex-shrink-0\" />\n\t\t\t\t\t<Chat className=\"flex flex-1 z-10\" />\n\t\t\t\t</Paper>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default withReducer('chatPanel', reducer)(React.memo(ChatPanel));\n"]},"metadata":{},"sourceType":"module"}