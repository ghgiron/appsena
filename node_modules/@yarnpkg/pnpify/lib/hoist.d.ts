declare type PackageName = string;
export declare type HoisterTree = {
    name: PackageName;
    identName: PackageName;
    reference: string;
    dependencies: Set<HoisterTree>;
    peerNames: Set<PackageName>;
};
export declare type HoisterResult = {
    name: PackageName;
    identName: PackageName;
    references: Set<string>;
    dependencies: Set<HoisterResult>;
};
declare type HoistOptions = {
    check?: boolean;
    debugLevel?: number;
};
/**
 * Hoists package tree.
 *
 * The root node of a tree must has id: '.'.
 * This function does not mutate its arguments, it hoists and returns tree copy.
 *
 * @param tree package tree (cycles in the tree are allowed)
 *
 * @returns hoisted tree copy
 */
export declare const hoist: (tree: HoisterTree, opts?: HoistOptions) => HoisterResult;
export {};
